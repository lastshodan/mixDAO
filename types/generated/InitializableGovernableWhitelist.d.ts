/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface InitializableGovernableWhitelistContract
  extends Truffle.Contract<InitializableGovernableWhitelistInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<InitializableGovernableWhitelistInstance>;
}

export interface Whitelisted {
  name: "Whitelisted";
  args: {
    _address: string;
    0: string;
  };
}

type AllEvents = Whitelisted;

export interface InitializableGovernableWhitelistInstance
  extends Truffle.ContractInstance {
  nexus(txDetails?: Truffle.TransactionDetails): Promise<string>;

  whitelist(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  methods: {
    nexus(txDetails?: Truffle.TransactionDetails): Promise<string>;

    whitelist(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
