/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { MinterRoleContract } from "./MinterRole";
import { ContextContract } from "./Context";
import { OwnableContract } from "./Ownable";
import { ERC20Contract } from "./ERC20";
import { ERC20BurnableContract } from "./ERC20Burnable";
import { ERC20DetailedContract } from "./ERC20Detailed";
import { ERC20MintableContract } from "./ERC20Mintable";
import { IERC20Contract } from "./IERC20";
import { ReentrancyGuardContract } from "./ReentrancyGuard";
import { AdminUpgradeabilityProxyContract } from "./AdminUpgradeabilityProxy";
import { BaseAdminUpgradeabilityProxyContract } from "./BaseAdminUpgradeabilityProxy";
import { BaseUpgradeabilityProxyContract } from "./BaseUpgradeabilityProxy";
import { InitializableAdminUpgradeabilityProxyContract } from "./InitializableAdminUpgradeabilityProxy";
import { InitializableUpgradeabilityProxyContract } from "./InitializableUpgradeabilityProxy";
import { ProxyContract } from "./Proxy";
import { UpgradeabilityProxyContract } from "./UpgradeabilityProxy";
import { BildTokenContract } from "./BildToken";
import { GovernedMinterRoleContract } from "./GovernedMinterRole";
import { ClaimableGovernorContract } from "./ClaimableGovernor";
import { DelayedClaimableGovernorContract } from "./DelayedClaimableGovernor";
import { GovernableContract } from "./Governable";
import { IncentivisedVotingLockupContract } from "./IncentivisedVotingLockup";
import { InitializableGovernableWhitelistContract } from "./InitializableGovernableWhitelist";
import { IBasketManagerContract } from "./IBasketManager";
import { IBildTokenContract } from "./IBildToken";
import { IBoostedVaultWithLockupContract } from "./IBoostedVaultWithLockup";
import { IIncentivisedVotingLockupContract } from "./IIncentivisedVotingLockup";
import { IMixContract } from "./IMix";
import { IMStableHelperContract } from "./IMStableHelper";
import { INexusContract } from "./INexus";
import { IPlatformIntegrationContract } from "./IPlatformIntegration";
import { IRewardsDistributionRecipientContract } from "./IRewardsDistributionRecipient";
import { ISavingsContractV1Contract } from "./ISavingsContractV1";
import { ISavingsContractV2Contract } from "./ISavingsContractV2";
import { IRevenueRecipientContract } from "./IRevenueRecipient";
import { ISavingsManagerContract } from "./ISavingsManager";
import { MigrationsContract } from "./Migrations";
import { BasketManagerContract } from "./BasketManager";
import { ForgeValidatorContract } from "./ForgeValidator";
import { IForgeValidatorContract } from "./IForgeValidator";
import { ICurveBildPoolContract } from "./ICurveBildPool";
import { ILiquidatorContract } from "./ILiquidator";
import { IUniswapV2Router02Contract } from "./IUniswapV2Router02";
import { LiquidatorContract } from "./Liquidator";
import { MixContract } from "./Mix";
import { AaveIntegrationContract } from "./AaveIntegration";
import { AaveV2IntegrationContract } from "./AaveV2Integration";
import { CompoundIntegrationContract } from "./CompoundIntegration";
import { IAaveATokenV1Contract } from "./IAaveATokenV1";
import { IAaveATokenV2Contract } from "./IAaveATokenV2";
import { IAaveLendingPoolV1Contract } from "./IAaveLendingPoolV1";
import { IAaveLendingPoolV2Contract } from "./IAaveLendingPoolV2";
import { ILendingPoolAddressesProviderV1Contract } from "./ILendingPoolAddressesProviderV1";
import { ILendingPoolAddressesProviderV2Contract } from "./ILendingPoolAddressesProviderV2";
import { ICERC20Contract } from "./ICERC20";
import { InitializableAbstractIntegrationContract } from "./InitializableAbstractIntegration";
import { MStableHelperContract } from "./MStableHelper";
import { NexusContract } from "./Nexus";
import { InitializableRewardsDistributionRecipientContract } from "./InitializableRewardsDistributionRecipient";
import { RewardsDistributionRecipientContract } from "./RewardsDistributionRecipient";
import { RewardsDistributorContract } from "./RewardsDistributor";
import { PlatformTokenVendorContract } from "./PlatformTokenVendor";
import { StakingRewardsContract } from "./StakingRewards";
import { StakingRewardsWithPlatformTokenContract } from "./StakingRewardsWithPlatformToken";
import { StakingTokenWrapperContract } from "./StakingTokenWrapper";
import { BoostedSavingsVaultContract } from "./BoostedSavingsVault";
import { BoostedTokenWrapperContract } from "./BoostedTokenWrapper";
import { IConnectorContract } from "./IConnector";
import { IBoostedSavingsVaultContract } from "./IBoostedSavingsVault";
import { SaveWrapperContract } from "./SaveWrapper";
import { SavingsContractContract } from "./SavingsContract";
import { SavingsManagerContract } from "./SavingsManager";
import { IBasicTokenContract } from "./IBasicToken";
import { IERC20WithCheckpointingContract } from "./IERC20WithCheckpointing";
import { InitializableERC20DetailedContract } from "./InitializableERC20Detailed";
import { InitializableModuleContract } from "./InitializableModule";
import { InitializableModule2Contract } from "./InitializableModule2";
import { InitializablePausableModuleContract } from "./InitializablePausableModule";
import { InitializableTokenContract } from "./InitializableToken";
import { ModuleContract } from "./Module";
import { PausableModuleContract } from "./PausableModule";
import { DelayedProxyAdminContract } from "./DelayedProxyAdmin";
import { BasketManagerProxyContract } from "./BasketManagerProxy";
import { InitializableProxyContract } from "./InitializableProxy";
import { LiquidatorProxyContract } from "./LiquidatorProxy";
import { MixProxyContract } from "./MixProxy";
import { VaultProxyContract } from "./VaultProxy";
import { EjectorContract } from "./Ejector";
import { MockGovernableContract } from "./MockGovernable";
import { AbstractBuyAndMintContract } from "./AbstractBuyAndMint";
import { IOneSplitContract } from "./IOneSplit";
import { MintWith1InchContract } from "./MintWith1Inch";
import { KyberNetworkProxyInterfaceContract } from "./KyberNetworkProxyInterface";
import { MintWithKyberContract } from "./MintWithKyber";
import { MockBasketManagerContract } from "./MockBasketManager";
import { MockBasketManager1Contract } from "./MockBasketManager1";
import { MockBasketManager2Contract } from "./MockBasketManager2";
import { MockBasketManager3Contract } from "./MockBasketManager3";
import { MockMixContract } from "./MockMix";
import { MockMix1Contract } from "./MockMix1";
import { DeadIntegrationContract } from "./DeadIntegration";
import { MaliciousAaveIntegrationContract } from "./MaliciousAaveIntegration";
import { MockAaveIntegrationContract } from "./MockAaveIntegration";
import { MockAaveV1Contract } from "./MockAaveV1";
import { MockAaveV2Contract } from "./MockAaveV2";
import { MockAaveV2IntegrationContract } from "./MockAaveV2Integration";
import { MockATokenContract } from "./MockAToken";
import { MockATokenV2Contract } from "./MockATokenV2";
import { MockCompoundIntegration1Contract } from "./MockCompoundIntegration1";
import { MockCompoundIntegration2Contract } from "./MockCompoundIntegration2";
import { MockCTokenContract } from "./MockCToken";
import { AaveIntegrationV2Contract } from "./AaveIntegrationV2";
import { AaveIntegrationV3Contract } from "./AaveIntegrationV3";
import { MockNexusContract } from "./MockNexus";
import { MockRewardsDistributionRecipientContract } from "./MockRewardsDistributionRecipient";
import { IyVaultContract } from "./IyVault";
import { MockConnectorContract } from "./MockConnector";
import { MockErroneousConnector1Contract } from "./MockErroneousConnector1";
import { MockErroneousConnector2Contract } from "./MockErroneousConnector2";
import { MockLendingConnectorContract } from "./MockLendingConnector";
import { MockRevenueRecipientContract } from "./MockRevenueRecipient";
import { MockSavingsManagerContract } from "./MockSavingsManager";
import { MockStakingContractContract } from "./MockStakingContract";
import { MockVaultConnectorContract } from "./MockVaultConnector";
import { YvMUSDContract } from "./YvMUSD";
import { ControllerContract } from "./Controller";
import { ConverterContract } from "./Converter";
import { IERC20Contract } from "./IERC20";
import { OneSplitAuditContract } from "./OneSplitAudit";
import { StrategyContract } from "./Strategy";
import { GaugeContract } from "./Gauge";
import { IControllerContract } from "./IController";
import { ICurveFiContract } from "./ICurveFi";
import { IERC20Contract } from "./IERC20";
import { MintrContract } from "./Mintr";
import { StrategyCurvemUSDVoterProxyContract } from "./StrategyCurvemUSDVoterProxy";
import { UniContract } from "./Uni";
import { VoterProxyContract } from "./VoterProxy";
import { ContextContract } from "./Context";
import { ControllerContract } from "./Controller";
import { ERC20Contract } from "./ERC20";
import { IDetailedContract } from "./IDetailed";
import { IERC20Contract } from "./IERC20";
import { YVaultContract } from "./YVault";
import { MockCommonHelpersContract } from "./MockCommonHelpers";
import { MockCurveBildPoolContract } from "./MockCurveBildPool";
import { MockERC20Contract } from "./MockERC20";
import { MockUSDTContract } from "./MockUSDT";
import { ERC20WithFeeContract } from "./ERC20WithFee";
import { MockERC20WithFeeContract } from "./MockERC20WithFee";
import { MockInitializableModuleContract } from "./MockInitializableModule";
import { MockInitializablePausableModuleContract } from "./MockInitializablePausableModule";
import { MockInitializableTokenContract } from "./MockInitializableToken";
import { MockInitializableTokenWithFeeContract } from "./MockInitializableTokenWithFee";
import { MockModuleContract } from "./MockModule";
import { MockPausableModuleContract } from "./MockPausableModule";
import { MockProxyContract } from "./MockProxy";
import { MockRootContract } from "./MockRoot";
import { MockTriggerContract } from "./MockTrigger";
import { MockUniswapContract } from "./MockUniswap";
import { PublicStableMathContract } from "./PublicStableMath";
import { SignedSafeMath128MockContract } from "./SignedSafeMath128Mock";
import { MockImplementationV1Contract } from "./MockImplementationV1";
import { MockImplementationV2Contract } from "./MockImplementationV2";
import { MockImplementationV3Contract } from "./MockImplementationV3";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "MinterRole"): MinterRoleContract;
      require(name: "Context"): ContextContract;
      require(name: "Ownable"): OwnableContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Burnable"): ERC20BurnableContract;
      require(name: "ERC20Detailed"): ERC20DetailedContract;
      require(name: "ERC20Mintable"): ERC20MintableContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "ReentrancyGuard"): ReentrancyGuardContract;
      require(
        name: "AdminUpgradeabilityProxy"
      ): AdminUpgradeabilityProxyContract;
      require(
        name: "BaseAdminUpgradeabilityProxy"
      ): BaseAdminUpgradeabilityProxyContract;
      require(name: "BaseUpgradeabilityProxy"): BaseUpgradeabilityProxyContract;
      require(
        name: "InitializableAdminUpgradeabilityProxy"
      ): InitializableAdminUpgradeabilityProxyContract;
      require(
        name: "InitializableUpgradeabilityProxy"
      ): InitializableUpgradeabilityProxyContract;
      require(name: "Proxy"): ProxyContract;
      require(name: "UpgradeabilityProxy"): UpgradeabilityProxyContract;
      require(name: "BildToken"): BildTokenContract;
      require(name: "GovernedMinterRole"): GovernedMinterRoleContract;
      require(name: "ClaimableGovernor"): ClaimableGovernorContract;
      require(
        name: "DelayedClaimableGovernor"
      ): DelayedClaimableGovernorContract;
      require(name: "Governable"): GovernableContract;
      require(
        name: "IncentivisedVotingLockup"
      ): IncentivisedVotingLockupContract;
      require(
        name: "InitializableGovernableWhitelist"
      ): InitializableGovernableWhitelistContract;
      require(name: "IBasketManager"): IBasketManagerContract;
      require(name: "IBildToken"): IBildTokenContract;
      require(name: "IBoostedVaultWithLockup"): IBoostedVaultWithLockupContract;
      require(
        name: "IIncentivisedVotingLockup"
      ): IIncentivisedVotingLockupContract;
      require(name: "IMix"): IMixContract;
      require(name: "IMStableHelper"): IMStableHelperContract;
      require(name: "INexus"): INexusContract;
      require(name: "IPlatformIntegration"): IPlatformIntegrationContract;
      require(
        name: "IRewardsDistributionRecipient"
      ): IRewardsDistributionRecipientContract;
      require(name: "ISavingsContractV1"): ISavingsContractV1Contract;
      require(name: "ISavingsContractV2"): ISavingsContractV2Contract;
      require(name: "IRevenueRecipient"): IRevenueRecipientContract;
      require(name: "ISavingsManager"): ISavingsManagerContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "BasketManager"): BasketManagerContract;
      require(name: "ForgeValidator"): ForgeValidatorContract;
      require(name: "IForgeValidator"): IForgeValidatorContract;
      require(name: "ICurveBildPool"): ICurveBildPoolContract;
      require(name: "ILiquidator"): ILiquidatorContract;
      require(name: "IUniswapV2Router02"): IUniswapV2Router02Contract;
      require(name: "Liquidator"): LiquidatorContract;
      require(name: "Mix"): MixContract;
      require(name: "AaveIntegration"): AaveIntegrationContract;
      require(name: "AaveV2Integration"): AaveV2IntegrationContract;
      require(name: "CompoundIntegration"): CompoundIntegrationContract;
      require(name: "IAaveATokenV1"): IAaveATokenV1Contract;
      require(name: "IAaveATokenV2"): IAaveATokenV2Contract;
      require(name: "IAaveLendingPoolV1"): IAaveLendingPoolV1Contract;
      require(name: "IAaveLendingPoolV2"): IAaveLendingPoolV2Contract;
      require(
        name: "ILendingPoolAddressesProviderV1"
      ): ILendingPoolAddressesProviderV1Contract;
      require(
        name: "ILendingPoolAddressesProviderV2"
      ): ILendingPoolAddressesProviderV2Contract;
      require(name: "ICERC20"): ICERC20Contract;
      require(
        name: "InitializableAbstractIntegration"
      ): InitializableAbstractIntegrationContract;
      require(name: "MStableHelper"): MStableHelperContract;
      require(name: "Nexus"): NexusContract;
      require(
        name: "InitializableRewardsDistributionRecipient"
      ): InitializableRewardsDistributionRecipientContract;
      require(
        name: "RewardsDistributionRecipient"
      ): RewardsDistributionRecipientContract;
      require(name: "RewardsDistributor"): RewardsDistributorContract;
      require(name: "PlatformTokenVendor"): PlatformTokenVendorContract;
      require(name: "StakingRewards"): StakingRewardsContract;
      require(
        name: "StakingRewardsWithPlatformToken"
      ): StakingRewardsWithPlatformTokenContract;
      require(name: "StakingTokenWrapper"): StakingTokenWrapperContract;
      require(name: "BoostedSavingsVault"): BoostedSavingsVaultContract;
      require(name: "BoostedTokenWrapper"): BoostedTokenWrapperContract;
      require(name: "IConnector"): IConnectorContract;
      require(name: "IBoostedSavingsVault"): IBoostedSavingsVaultContract;
      require(name: "SaveWrapper"): SaveWrapperContract;
      require(name: "SavingsContract"): SavingsContractContract;
      require(name: "SavingsManager"): SavingsManagerContract;
      require(name: "IBasicToken"): IBasicTokenContract;
      require(name: "IERC20WithCheckpointing"): IERC20WithCheckpointingContract;
      require(
        name: "InitializableERC20Detailed"
      ): InitializableERC20DetailedContract;
      require(name: "InitializableModule"): InitializableModuleContract;
      require(name: "InitializableModule2"): InitializableModule2Contract;
      require(
        name: "InitializablePausableModule"
      ): InitializablePausableModuleContract;
      require(name: "InitializableToken"): InitializableTokenContract;
      require(name: "Module"): ModuleContract;
      require(name: "PausableModule"): PausableModuleContract;
      require(name: "DelayedProxyAdmin"): DelayedProxyAdminContract;
      require(name: "BasketManagerProxy"): BasketManagerProxyContract;
      require(name: "InitializableProxy"): InitializableProxyContract;
      require(name: "LiquidatorProxy"): LiquidatorProxyContract;
      require(name: "MixProxy"): MixProxyContract;
      require(name: "VaultProxy"): VaultProxyContract;
      require(name: "Ejector"): EjectorContract;
      require(name: "MockGovernable"): MockGovernableContract;
      require(name: "AbstractBuyAndMint"): AbstractBuyAndMintContract;
      require(name: "IOneSplit"): IOneSplitContract;
      require(name: "MintWith1Inch"): MintWith1InchContract;
      require(
        name: "KyberNetworkProxyInterface"
      ): KyberNetworkProxyInterfaceContract;
      require(name: "MintWithKyber"): MintWithKyberContract;
      require(name: "MockBasketManager"): MockBasketManagerContract;
      require(name: "MockBasketManager1"): MockBasketManager1Contract;
      require(name: "MockBasketManager2"): MockBasketManager2Contract;
      require(name: "MockBasketManager3"): MockBasketManager3Contract;
      require(name: "MockMix"): MockMixContract;
      require(name: "MockMix1"): MockMix1Contract;
      require(name: "DeadIntegration"): DeadIntegrationContract;
      require(
        name: "MaliciousAaveIntegration"
      ): MaliciousAaveIntegrationContract;
      require(name: "MockAaveIntegration"): MockAaveIntegrationContract;
      require(name: "MockAaveV1"): MockAaveV1Contract;
      require(name: "MockAaveV2"): MockAaveV2Contract;
      require(name: "MockAaveV2Integration"): MockAaveV2IntegrationContract;
      require(name: "MockAToken"): MockATokenContract;
      require(name: "MockATokenV2"): MockATokenV2Contract;
      require(
        name: "MockCompoundIntegration1"
      ): MockCompoundIntegration1Contract;
      require(
        name: "MockCompoundIntegration2"
      ): MockCompoundIntegration2Contract;
      require(name: "MockCToken"): MockCTokenContract;
      require(name: "AaveIntegrationV2"): AaveIntegrationV2Contract;
      require(name: "AaveIntegrationV3"): AaveIntegrationV3Contract;
      require(name: "MockNexus"): MockNexusContract;
      require(
        name: "MockRewardsDistributionRecipient"
      ): MockRewardsDistributionRecipientContract;
      require(name: "IyVault"): IyVaultContract;
      require(name: "MockConnector"): MockConnectorContract;
      require(name: "MockErroneousConnector1"): MockErroneousConnector1Contract;
      require(name: "MockErroneousConnector2"): MockErroneousConnector2Contract;
      require(name: "MockLendingConnector"): MockLendingConnectorContract;
      require(name: "MockRevenueRecipient"): MockRevenueRecipientContract;
      require(name: "MockSavingsManager"): MockSavingsManagerContract;
      require(name: "MockStakingContract"): MockStakingContractContract;
      require(name: "MockVaultConnector"): MockVaultConnectorContract;
      require(name: "yvMUSD"): YvMUSDContract;
      require(name: "Controller"): ControllerContract;
      require(name: "Converter"): ConverterContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "OneSplitAudit"): OneSplitAuditContract;
      require(name: "Strategy"): StrategyContract;
      require(name: "Gauge"): GaugeContract;
      require(name: "IController"): IControllerContract;
      require(name: "ICurveFi"): ICurveFiContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "Mintr"): MintrContract;
      require(
        name: "StrategyCurvemUSDVoterProxy"
      ): StrategyCurvemUSDVoterProxyContract;
      require(name: "Uni"): UniContract;
      require(name: "VoterProxy"): VoterProxyContract;
      require(name: "Context"): ContextContract;
      require(name: "Controller"): ControllerContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "IDetailed"): IDetailedContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "yVault"): YVaultContract;
      require(name: "MockCommonHelpers"): MockCommonHelpersContract;
      require(name: "MockCurveBildPool"): MockCurveBildPoolContract;
      require(name: "MockERC20"): MockERC20Contract;
      require(name: "MockUSDT"): MockUSDTContract;
      require(name: "ERC20WithFee"): ERC20WithFeeContract;
      require(name: "MockERC20WithFee"): MockERC20WithFeeContract;
      require(name: "MockInitializableModule"): MockInitializableModuleContract;
      require(
        name: "MockInitializablePausableModule"
      ): MockInitializablePausableModuleContract;
      require(name: "MockInitializableToken"): MockInitializableTokenContract;
      require(
        name: "MockInitializableTokenWithFee"
      ): MockInitializableTokenWithFeeContract;
      require(name: "MockModule"): MockModuleContract;
      require(name: "MockPausableModule"): MockPausableModuleContract;
      require(name: "MockProxy"): MockProxyContract;
      require(name: "MockRoot"): MockRootContract;
      require(name: "MockTrigger"): MockTriggerContract;
      require(name: "MockUniswap"): MockUniswapContract;
      require(name: "PublicStableMath"): PublicStableMathContract;
      require(name: "SignedSafeMath128Mock"): SignedSafeMath128MockContract;
      require(name: "MockImplementationV1"): MockImplementationV1Contract;
      require(name: "MockImplementationV2"): MockImplementationV2Contract;
      require(name: "MockImplementationV3"): MockImplementationV3Contract;
    }
  }
}

export { MinterRoleContract, MinterRoleInstance } from "./MinterRole";
export { ContextContract, ContextInstance } from "./Context";
export { OwnableContract, OwnableInstance } from "./Ownable";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20BurnableContract, ERC20BurnableInstance } from "./ERC20Burnable";
export { ERC20DetailedContract, ERC20DetailedInstance } from "./ERC20Detailed";
export { ERC20MintableContract, ERC20MintableInstance } from "./ERC20Mintable";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  ReentrancyGuardContract,
  ReentrancyGuardInstance,
} from "./ReentrancyGuard";
export {
  AdminUpgradeabilityProxyContract,
  AdminUpgradeabilityProxyInstance,
} from "./AdminUpgradeabilityProxy";
export {
  BaseAdminUpgradeabilityProxyContract,
  BaseAdminUpgradeabilityProxyInstance,
} from "./BaseAdminUpgradeabilityProxy";
export {
  BaseUpgradeabilityProxyContract,
  BaseUpgradeabilityProxyInstance,
} from "./BaseUpgradeabilityProxy";
export {
  InitializableAdminUpgradeabilityProxyContract,
  InitializableAdminUpgradeabilityProxyInstance,
} from "./InitializableAdminUpgradeabilityProxy";
export {
  InitializableUpgradeabilityProxyContract,
  InitializableUpgradeabilityProxyInstance,
} from "./InitializableUpgradeabilityProxy";
export { ProxyContract, ProxyInstance } from "./Proxy";
export {
  UpgradeabilityProxyContract,
  UpgradeabilityProxyInstance,
} from "./UpgradeabilityProxy";
export { BildTokenContract, BildTokenInstance } from "./BildToken";
export {
  GovernedMinterRoleContract,
  GovernedMinterRoleInstance,
} from "./GovernedMinterRole";
export {
  ClaimableGovernorContract,
  ClaimableGovernorInstance,
} from "./ClaimableGovernor";
export {
  DelayedClaimableGovernorContract,
  DelayedClaimableGovernorInstance,
} from "./DelayedClaimableGovernor";
export { GovernableContract, GovernableInstance } from "./Governable";
export {
  IncentivisedVotingLockupContract,
  IncentivisedVotingLockupInstance,
} from "./IncentivisedVotingLockup";
export {
  InitializableGovernableWhitelistContract,
  InitializableGovernableWhitelistInstance,
} from "./InitializableGovernableWhitelist";
export {
  IBasketManagerContract,
  IBasketManagerInstance,
} from "./IBasketManager";
export { IBildTokenContract, IBildTokenInstance } from "./IBildToken";
export {
  IBoostedVaultWithLockupContract,
  IBoostedVaultWithLockupInstance,
} from "./IBoostedVaultWithLockup";
export {
  IIncentivisedVotingLockupContract,
  IIncentivisedVotingLockupInstance,
} from "./IIncentivisedVotingLockup";
export { IMixContract, IMixInstance } from "./IMix";
export {
  IMStableHelperContract,
  IMStableHelperInstance,
} from "./IMStableHelper";
export { INexusContract, INexusInstance } from "./INexus";
export {
  IPlatformIntegrationContract,
  IPlatformIntegrationInstance,
} from "./IPlatformIntegration";
export {
  IRewardsDistributionRecipientContract,
  IRewardsDistributionRecipientInstance,
} from "./IRewardsDistributionRecipient";
export {
  ISavingsContractV1Contract,
  ISavingsContractV1Instance,
} from "./ISavingsContractV1";
export {
  ISavingsContractV2Contract,
  ISavingsContractV2Instance,
} from "./ISavingsContractV2";
export {
  IRevenueRecipientContract,
  IRevenueRecipientInstance,
} from "./IRevenueRecipient";
export {
  ISavingsManagerContract,
  ISavingsManagerInstance,
} from "./ISavingsManager";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export { BasketManagerContract, BasketManagerInstance } from "./BasketManager";
export {
  ForgeValidatorContract,
  ForgeValidatorInstance,
} from "./ForgeValidator";
export {
  IForgeValidatorContract,
  IForgeValidatorInstance,
} from "./IForgeValidator";
export {
  ICurveBildPoolContract,
  ICurveBildPoolInstance,
} from "./ICurveBildPool";
export { ILiquidatorContract, ILiquidatorInstance } from "./ILiquidator";
export {
  IUniswapV2Router02Contract,
  IUniswapV2Router02Instance,
} from "./IUniswapV2Router02";
export { LiquidatorContract, LiquidatorInstance } from "./Liquidator";
export { MixContract, MixInstance } from "./Mix";
export {
  AaveIntegrationContract,
  AaveIntegrationInstance,
} from "./AaveIntegration";
export {
  AaveV2IntegrationContract,
  AaveV2IntegrationInstance,
} from "./AaveV2Integration";
export {
  CompoundIntegrationContract,
  CompoundIntegrationInstance,
} from "./CompoundIntegration";
export { IAaveATokenV1Contract, IAaveATokenV1Instance } from "./IAaveATokenV1";
export { IAaveATokenV2Contract, IAaveATokenV2Instance } from "./IAaveATokenV2";
export {
  IAaveLendingPoolV1Contract,
  IAaveLendingPoolV1Instance,
} from "./IAaveLendingPoolV1";
export {
  IAaveLendingPoolV2Contract,
  IAaveLendingPoolV2Instance,
} from "./IAaveLendingPoolV2";
export {
  ILendingPoolAddressesProviderV1Contract,
  ILendingPoolAddressesProviderV1Instance,
} from "./ILendingPoolAddressesProviderV1";
export {
  ILendingPoolAddressesProviderV2Contract,
  ILendingPoolAddressesProviderV2Instance,
} from "./ILendingPoolAddressesProviderV2";
export { ICERC20Contract, ICERC20Instance } from "./ICERC20";
export {
  InitializableAbstractIntegrationContract,
  InitializableAbstractIntegrationInstance,
} from "./InitializableAbstractIntegration";
export { MStableHelperContract, MStableHelperInstance } from "./MStableHelper";
export { NexusContract, NexusInstance } from "./Nexus";
export {
  InitializableRewardsDistributionRecipientContract,
  InitializableRewardsDistributionRecipientInstance,
} from "./InitializableRewardsDistributionRecipient";
export {
  RewardsDistributionRecipientContract,
  RewardsDistributionRecipientInstance,
} from "./RewardsDistributionRecipient";
export {
  RewardsDistributorContract,
  RewardsDistributorInstance,
} from "./RewardsDistributor";
export {
  PlatformTokenVendorContract,
  PlatformTokenVendorInstance,
} from "./PlatformTokenVendor";
export {
  StakingRewardsContract,
  StakingRewardsInstance,
} from "./StakingRewards";
export {
  StakingRewardsWithPlatformTokenContract,
  StakingRewardsWithPlatformTokenInstance,
} from "./StakingRewardsWithPlatformToken";
export {
  StakingTokenWrapperContract,
  StakingTokenWrapperInstance,
} from "./StakingTokenWrapper";
export {
  BoostedSavingsVaultContract,
  BoostedSavingsVaultInstance,
} from "./BoostedSavingsVault";
export {
  BoostedTokenWrapperContract,
  BoostedTokenWrapperInstance,
} from "./BoostedTokenWrapper";
export { IConnectorContract, IConnectorInstance } from "./IConnector";
export {
  IBoostedSavingsVaultContract,
  IBoostedSavingsVaultInstance,
} from "./IBoostedSavingsVault";
export { SaveWrapperContract, SaveWrapperInstance } from "./SaveWrapper";
export {
  SavingsContractContract,
  SavingsContractInstance,
} from "./SavingsContract";
export {
  SavingsManagerContract,
  SavingsManagerInstance,
} from "./SavingsManager";
export { IBasicTokenContract, IBasicTokenInstance } from "./IBasicToken";
export {
  IERC20WithCheckpointingContract,
  IERC20WithCheckpointingInstance,
} from "./IERC20WithCheckpointing";
export {
  InitializableERC20DetailedContract,
  InitializableERC20DetailedInstance,
} from "./InitializableERC20Detailed";
export {
  InitializableModuleContract,
  InitializableModuleInstance,
} from "./InitializableModule";
export {
  InitializableModule2Contract,
  InitializableModule2Instance,
} from "./InitializableModule2";
export {
  InitializablePausableModuleContract,
  InitializablePausableModuleInstance,
} from "./InitializablePausableModule";
export {
  InitializableTokenContract,
  InitializableTokenInstance,
} from "./InitializableToken";
export { ModuleContract, ModuleInstance } from "./Module";
export {
  PausableModuleContract,
  PausableModuleInstance,
} from "./PausableModule";
export {
  DelayedProxyAdminContract,
  DelayedProxyAdminInstance,
} from "./DelayedProxyAdmin";
export {
  BasketManagerProxyContract,
  BasketManagerProxyInstance,
} from "./BasketManagerProxy";
export {
  InitializableProxyContract,
  InitializableProxyInstance,
} from "./InitializableProxy";
export {
  LiquidatorProxyContract,
  LiquidatorProxyInstance,
} from "./LiquidatorProxy";
export { MixProxyContract, MixProxyInstance } from "./MixProxy";
export { VaultProxyContract, VaultProxyInstance } from "./VaultProxy";
export { EjectorContract, EjectorInstance } from "./Ejector";
export {
  MockGovernableContract,
  MockGovernableInstance,
} from "./MockGovernable";
export {
  AbstractBuyAndMintContract,
  AbstractBuyAndMintInstance,
} from "./AbstractBuyAndMint";
export { IOneSplitContract, IOneSplitInstance } from "./IOneSplit";
export { MintWith1InchContract, MintWith1InchInstance } from "./MintWith1Inch";
export {
  KyberNetworkProxyInterfaceContract,
  KyberNetworkProxyInterfaceInstance,
} from "./KyberNetworkProxyInterface";
export { MintWithKyberContract, MintWithKyberInstance } from "./MintWithKyber";
export {
  MockBasketManagerContract,
  MockBasketManagerInstance,
} from "./MockBasketManager";
export {
  MockBasketManager1Contract,
  MockBasketManager1Instance,
} from "./MockBasketManager1";
export {
  MockBasketManager2Contract,
  MockBasketManager2Instance,
} from "./MockBasketManager2";
export {
  MockBasketManager3Contract,
  MockBasketManager3Instance,
} from "./MockBasketManager3";
export { MockMixContract, MockMixInstance } from "./MockMix";
export { MockMix1Contract, MockMix1Instance } from "./MockMix1";
export {
  DeadIntegrationContract,
  DeadIntegrationInstance,
} from "./DeadIntegration";
export {
  MaliciousAaveIntegrationContract,
  MaliciousAaveIntegrationInstance,
} from "./MaliciousAaveIntegration";
export {
  MockAaveIntegrationContract,
  MockAaveIntegrationInstance,
} from "./MockAaveIntegration";
export { MockAaveV1Contract, MockAaveV1Instance } from "./MockAaveV1";
export { MockAaveV2Contract, MockAaveV2Instance } from "./MockAaveV2";
export {
  MockAaveV2IntegrationContract,
  MockAaveV2IntegrationInstance,
} from "./MockAaveV2Integration";
export { MockATokenContract, MockATokenInstance } from "./MockAToken";
export { MockATokenV2Contract, MockATokenV2Instance } from "./MockATokenV2";
export {
  MockCompoundIntegration1Contract,
  MockCompoundIntegration1Instance,
} from "./MockCompoundIntegration1";
export {
  MockCompoundIntegration2Contract,
  MockCompoundIntegration2Instance,
} from "./MockCompoundIntegration2";
export { MockCTokenContract, MockCTokenInstance } from "./MockCToken";
export {
  AaveIntegrationV2Contract,
  AaveIntegrationV2Instance,
} from "./AaveIntegrationV2";
export {
  AaveIntegrationV3Contract,
  AaveIntegrationV3Instance,
} from "./AaveIntegrationV3";
export { MockNexusContract, MockNexusInstance } from "./MockNexus";
export {
  MockRewardsDistributionRecipientContract,
  MockRewardsDistributionRecipientInstance,
} from "./MockRewardsDistributionRecipient";
export { IyVaultContract, IyVaultInstance } from "./IyVault";
export { MockConnectorContract, MockConnectorInstance } from "./MockConnector";
export {
  MockErroneousConnector1Contract,
  MockErroneousConnector1Instance,
} from "./MockErroneousConnector1";
export {
  MockErroneousConnector2Contract,
  MockErroneousConnector2Instance,
} from "./MockErroneousConnector2";
export {
  MockLendingConnectorContract,
  MockLendingConnectorInstance,
} from "./MockLendingConnector";
export {
  MockRevenueRecipientContract,
  MockRevenueRecipientInstance,
} from "./MockRevenueRecipient";
export {
  MockSavingsManagerContract,
  MockSavingsManagerInstance,
} from "./MockSavingsManager";
export {
  MockStakingContractContract,
  MockStakingContractInstance,
} from "./MockStakingContract";
export {
  MockVaultConnectorContract,
  MockVaultConnectorInstance,
} from "./MockVaultConnector";
export { YvMUSDContract, YvMUSDInstance } from "./YvMUSD";
export { ControllerContract, ControllerInstance } from "./Controller";
export { ConverterContract, ConverterInstance } from "./Converter";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export { OneSplitAuditContract, OneSplitAuditInstance } from "./OneSplitAudit";
export { StrategyContract, StrategyInstance } from "./Strategy";
export { GaugeContract, GaugeInstance } from "./Gauge";
export { IControllerContract, IControllerInstance } from "./IController";
export { ICurveFiContract, ICurveFiInstance } from "./ICurveFi";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export { MintrContract, MintrInstance } from "./Mintr";
export {
  StrategyCurvemUSDVoterProxyContract,
  StrategyCurvemUSDVoterProxyInstance,
} from "./StrategyCurvemUSDVoterProxy";
export { UniContract, UniInstance } from "./Uni";
export { VoterProxyContract, VoterProxyInstance } from "./VoterProxy";
export { ContextContract, ContextInstance } from "./Context";
export { ControllerContract, ControllerInstance } from "./Controller";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { IDetailedContract, IDetailedInstance } from "./IDetailed";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export { YVaultContract, YVaultInstance } from "./YVault";
export {
  MockCommonHelpersContract,
  MockCommonHelpersInstance,
} from "./MockCommonHelpers";
export {
  MockCurveBildPoolContract,
  MockCurveBildPoolInstance,
} from "./MockCurveBildPool";
export { MockERC20Contract, MockERC20Instance } from "./MockERC20";
export { MockUSDTContract, MockUSDTInstance } from "./MockUSDT";
export { ERC20WithFeeContract, ERC20WithFeeInstance } from "./ERC20WithFee";
export {
  MockERC20WithFeeContract,
  MockERC20WithFeeInstance,
} from "./MockERC20WithFee";
export {
  MockInitializableModuleContract,
  MockInitializableModuleInstance,
} from "./MockInitializableModule";
export {
  MockInitializablePausableModuleContract,
  MockInitializablePausableModuleInstance,
} from "./MockInitializablePausableModule";
export {
  MockInitializableTokenContract,
  MockInitializableTokenInstance,
} from "./MockInitializableToken";
export {
  MockInitializableTokenWithFeeContract,
  MockInitializableTokenWithFeeInstance,
} from "./MockInitializableTokenWithFee";
export { MockModuleContract, MockModuleInstance } from "./MockModule";
export {
  MockPausableModuleContract,
  MockPausableModuleInstance,
} from "./MockPausableModule";
export { MockProxyContract, MockProxyInstance } from "./MockProxy";
export { MockRootContract, MockRootInstance } from "./MockRoot";
export { MockTriggerContract, MockTriggerInstance } from "./MockTrigger";
export { MockUniswapContract, MockUniswapInstance } from "./MockUniswap";
export {
  PublicStableMathContract,
  PublicStableMathInstance,
} from "./PublicStableMath";
export {
  SignedSafeMath128MockContract,
  SignedSafeMath128MockInstance,
} from "./SignedSafeMath128Mock";
export {
  MockImplementationV1Contract,
  MockImplementationV1Instance,
} from "./MockImplementationV1";
export {
  MockImplementationV2Contract,
  MockImplementationV2Instance,
} from "./MockImplementationV2";
export {
  MockImplementationV3Contract,
  MockImplementationV3Instance,
} from "./MockImplementationV3";
