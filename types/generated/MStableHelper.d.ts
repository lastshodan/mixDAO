/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface MStableHelperContract
  extends Truffle.Contract<MStableHelperInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<MStableHelperInstance>;
}

type AllEvents = never;

export interface MStableHelperInstance extends Truffle.ContractInstance {
  getMaxSwap(
    _mIx: string,
    _input: string,
    _output: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[boolean, string, BN, BN]>;

  getRedeemValidity(
    _mIx: string,
    _mIxQuantity: number | BN | string,
    _outputBasset: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[boolean, string, BN, BN]>;

  getSaveBalance(
    _save: string,
    _user: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  getSaveRedeemInput(
    _save: string,
    _mIxUnits: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<BN>;

  suggestMintAsset(
    _mIx: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[boolean, string, string]>;

  suggestRedeemIx(
    _mIx: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[boolean, string, string]>;

  methods: {
    getMaxSwap(
      _mIx: string,
      _input: string,
      _output: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[boolean, string, BN, BN]>;

    getRedeemValidity(
      _mIx: string,
      _mIxQuantity: number | BN | string,
      _outputBasset: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[boolean, string, BN, BN]>;

    getSaveBalance(
      _save: string,
      _user: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    getSaveRedeemInput(
      _save: string,
      _mIxUnits: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<BN>;

    suggestMintAsset(
      _mIx: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[boolean, string, string]>;

    suggestRedeemIx(
      _mIx: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[boolean, string, string]>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
