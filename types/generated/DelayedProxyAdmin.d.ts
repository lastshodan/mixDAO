/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface DelayedProxyAdminContract
  extends Truffle.Contract<DelayedProxyAdminInstance> {
  "new"(
    _nexus: string,
    meta?: Truffle.TransactionDetails
  ): Promise<DelayedProxyAdminInstance>;
}

export interface UpgradeCancelled {
  name: "UpgradeCancelled";
  args: {
    proxy: string;
    0: string;
  };
}

export interface UpgradeProposed {
  name: "UpgradeProposed";
  args: {
    proxy: string;
    implementation: string;
    data: string;
    0: string;
    1: string;
    2: string;
  };
}

export interface Upgraded {
  name: "Upgraded";
  args: {
    proxy: string;
    oldImpl: string;
    newImpl: string;
    data: string;
    0: string;
    1: string;
    2: string;
    3: string;
  };
}

type AllEvents = UpgradeCancelled | UpgradeProposed | Upgraded;

export interface DelayedProxyAdminInstance extends Truffle.ContractInstance {
  UPGRADE_DELAY(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  acceptUpgradeRequest: {
    (_proxy: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(_proxy: string, txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(
      _proxy: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _proxy: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  cancelUpgrade: {
    (_proxy: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(_proxy: string, txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(
      _proxy: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _proxy: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  getProxyAdmin(
    _proxy: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  getProxyImplementation(
    _proxy: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  nexus(txDetails?: Truffle.TransactionDetails): Promise<string>;

  proposeUpgrade: {
    (
      _proxy: string,
      _implementation: string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _proxy: string,
      _implementation: string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _proxy: string,
      _implementation: string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _proxy: string,
      _implementation: string,
      _data: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  requests(
    arg0: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<[string, string, BN]>;

  methods: {
    UPGRADE_DELAY(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    acceptUpgradeRequest: {
      (_proxy: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _proxy: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _proxy: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _proxy: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    cancelUpgrade: {
      (_proxy: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _proxy: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _proxy: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _proxy: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    getProxyAdmin(
      _proxy: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    getProxyImplementation(
      _proxy: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    nexus(txDetails?: Truffle.TransactionDetails): Promise<string>;

    proposeUpgrade: {
      (
        _proxy: string,
        _implementation: string,
        _data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _proxy: string,
        _implementation: string,
        _data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _proxy: string,
        _implementation: string,
        _data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _proxy: string,
        _implementation: string,
        _data: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    requests(
      arg0: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<[string, string, BN]>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
