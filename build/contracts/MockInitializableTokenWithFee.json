{
  "contractName": "MockInitializableTokenWithFee",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "feeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_nameArg",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbolArg",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_initialRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialMint",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nameArg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbolArg\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_initialRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialMint\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stability Labs Pty. Ltd.\",\"details\":\"Basic ERC20Detailed Token functionality for Mix\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"initialize(string,string,uint8,address,uint256)\":{\"details\":\"Initialization function for implementing contract\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"InitializableToken\"},\"userdoc\":{\"methods\":{\"initialize(string,string,uint8,address,uint256)\":{\"notice\":\"To avoid variable shadowing appended `Arg` after arguments name.\"}}}},\"settings\":{\"compilationTarget\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockInitializableTokenWithFee.sol\":\"MockInitializableTokenWithFee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol\":{\"keccak256\":\"0x08d17d7581628d72ac3233f042e1b6d4e6cbc050a991672f9b69a85380a6158f\",\"urls\":[\"bzz-raw://a0305949a756551cd30719caf13465bdfa17dbcfdba67955c16152e3a5e89a93\",\"dweb:/ipfs/QmZmX1FuaArqk3MCfUBFoDTJTVZfFnhteAnMPpA3AMbTom\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockERC20WithFee.sol\":{\"keccak256\":\"0x959452c7e2743796d7186dee50110a619252f9908b418e949010c18b0b020487\",\"urls\":[\"bzz-raw://2fb8e3d3752518ca4124891efed773fd68fcb80766ef7bc79f8693e7a704c9ea\",\"dweb:/ipfs/QmYQo4JfA8XmoatqS2ihVbKEtvu7QjQ9QJiBwiW66jni78\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockInitializableTokenWithFee.sol\":{\"keccak256\":\"0x5590f5a6a2830bda5674c2fa420b7b060cfb46037fc4c2513883d435b8a7d1bd\",\"urls\":[\"bzz-raw://0a15620540c0da4f915e26b1b7462d0aa136ca97e6255466c7674f83bad47e07\",\"dweb:/ipfs/QmYKH7sknKdA7oiUgEKKtyY8PUZZrnDEtZdGE2Yh8JctDw\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x60806040526100266100186001600160e01b0361002b16565b6001600160e01b0361002f16565b610170565b3390565b61004781600061007e60201b610f531790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61009182826001600160e01b0361010816565b156100e3576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101505760405162461bcd60e51b81526004018080602001828103825260228152602001806200149b6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61131b80620001806000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063986502751161007157806398650275146103cb578063a457c2d7146103d3578063a9059cbb146103ff578063aa271e1a1461042b578063dd62ed3e146104515761010b565b806370a082311461036f57806395d89b4114610395578063978bbdb91461039d578063983b2d56146103a55761010b565b8063313ce567116100de578063313ce5671461021d578063395093511461023b57806340c10f19146102675780636c945221146102935761010b565b806306fdde0314610110578063095ea7b31461018d57806318160ddd146101cd57806323b872dd146101e7575b600080fd5b61011861047f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015257818101518382015260200161013a565b50505050905090810190601f16801561017f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b9600480360360408110156101a357600080fd5b506001600160a01b038135169060200135610516565b604080519115158252519081900360200190f35b6101d561052d565b60408051918252519081900360200190f35b6101b9600480360360608110156101fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610533565b61022561058a565b6040805160ff9092168252519081900360200190f35b6101b96004803603604081101561025157600080fd5b506001600160a01b038135169060200135610593565b6101b96004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356105cf565b61036d600480360360a08110156102a957600080fd5b8101906020810181356401000000008111156102c457600080fd5b8201836020820111156102d657600080fd5b803590602001918460018302840111640100000000831117156102f857600080fd5b91939092909160208101903564010000000081111561031657600080fd5b82018360208201111561032857600080fd5b8035906020019184600183028401116401000000008311171561034a57600080fd5b919350915060ff813516906001600160a01b036020820135169060400135610626565b005b6101d56004803603602081101561038557600080fd5b50356001600160a01b03166106ce565b6101186106e9565b6101d561074a565b61036d600480360360208110156103bb57600080fd5b50356001600160a01b0316610750565b61036d6107a2565b6101b9600480360360408110156103e957600080fd5b506001600160a01b0381351690602001356107b4565b6101b96004803603604081101561041557600080fd5b506001600160a01b0381351690602001356107f0565b6101b96004803603602081101561044157600080fd5b50356001600160a01b03166107fd565b6101d56004803603604081101561046757600080fd5b506001600160a01b038135811691602001351661080f565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b505050505090505b90565b600061052333848461083a565b5060015b92915050565b60045490565b6000610540848484610926565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461058091869161057b908663ffffffff610aa316565b61083a565b5060019392505050565b60075460ff1690565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161052391859061057b908663ffffffff610aec16565b60006105e16105dc610b46565b6107fd565b61061c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111e96030913960400191505060405180910390fd5b6105238383610b4a565b61069b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610c3c915050565b66038d7ea4c680006001556106c5826106c08360ff8716600a0a63ffffffff610c7c16565b610b4a565b50505050505050565b6001600160a01b031660009081526002602052604090205490565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561050b5780601f106104e05761010080835404028352916020019161050b565b60015481565b61075b6105dc610b46565b6107965760405162461bcd60e51b81526004018080602001828103825260308152602001806111e96030913960400191505060405180910390fd5b61079f81610cd5565b50565b6107b26107ad610b46565b610d1d565b565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161052391859061057b908663ffffffff610aa316565b6000610523338484610926565b6000610527818363ffffffff610d6516565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6001600160a01b03831661087f5760405162461bcd60e51b81526004018080602001828103825260248152602001806112c36024913960400191505060405180910390fd5b6001600160a01b0382166108c45760405162461bcd60e51b81526004018080602001828103825260228152602001806111c76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661096b5760405162461bcd60e51b815260040180806020018281038252602581526020018061129e6025913960400191505060405180910390fd5b6001600160a01b0382166109b05760405162461bcd60e51b81526004018080602001828103825260238152602001806111a46023913960400191505060405180910390fd5b60006109c760015483610dcc90919063ffffffff16565b905060006109db838363ffffffff610aa316565b90506109e78583610de1565b6001600160a01b038516600090815260026020526040902054610a10908263ffffffff610aa316565b6001600160a01b038087166000908152600260205260408082209390935590861681522054610a45908263ffffffff610aec16565b6001600160a01b0380861660008181526002602090815260409182902094909455805185815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b6000610ae583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ebc565b9392505050565b600082820183811015610ae5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b038216610ba5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600454610bb8908263ffffffff610aec16565b6004556001600160a01b038216600090815260026020526040902054610be4908263ffffffff610aec16565b6001600160a01b03831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b8251610c4f90600590602086019061110b565b508151610c6390600690602085019061110b565b506007805460ff191660ff929092169190911790555050565b600082610c8b57506000610527565b82820282848281610c9857fe5b0414610ae55760405162461bcd60e51b815260040180806020018281038252602181526020018061123a6021913960400191505060405180910390fd5b610ce660008263ffffffff610f5316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610d2e60008263ffffffff610fd416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610dac5760405162461bcd60e51b815260040180806020018281038252602281526020018061125b6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000610ae58383670de0b6b3a764000061103b565b6001600160a01b038216610e265760405162461bcd60e51b815260040180806020018281038252602181526020018061127d6021913960400191505060405180910390fd5b600454610e39908263ffffffff610aa316565b6004556001600160a01b038216600090815260026020526040902054610e65908263ffffffff610aa316565b6001600160a01b0383166000818152600260209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b60008184841115610f4b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f10578181015183820152602001610ef8565b50505050905090810190601f168015610f3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b610f5d8282610d65565b15610faf576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610fde8282610d65565b6110195760405162461bcd60e51b81526004018080602001828103825260218152602001806112196021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60008061104e858563ffffffff610c7c16565b9050611060818463ffffffff61106916565b95945050505050565b6000610ae583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836110f55760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610f10578181015183820152602001610ef8565b50600083858161110157fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061114c57805160ff1916838001178555611179565b82800160010185558215611179579182015b8281111561117957825182559160200191906001019061115e565b50611185929150611189565b5090565b61051391905b80821115611185576000815560010161118f56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7231582034581108c4ee5cf25b74522064af58b8c714c14a20f1f70192b692373947035f64736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063986502751161007157806398650275146103cb578063a457c2d7146103d3578063a9059cbb146103ff578063aa271e1a1461042b578063dd62ed3e146104515761010b565b806370a082311461036f57806395d89b4114610395578063978bbdb91461039d578063983b2d56146103a55761010b565b8063313ce567116100de578063313ce5671461021d578063395093511461023b57806340c10f19146102675780636c945221146102935761010b565b806306fdde0314610110578063095ea7b31461018d57806318160ddd146101cd57806323b872dd146101e7575b600080fd5b61011861047f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015257818101518382015260200161013a565b50505050905090810190601f16801561017f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b9600480360360408110156101a357600080fd5b506001600160a01b038135169060200135610516565b604080519115158252519081900360200190f35b6101d561052d565b60408051918252519081900360200190f35b6101b9600480360360608110156101fd57600080fd5b506001600160a01b03813581169160208101359091169060400135610533565b61022561058a565b6040805160ff9092168252519081900360200190f35b6101b96004803603604081101561025157600080fd5b506001600160a01b038135169060200135610593565b6101b96004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356105cf565b61036d600480360360a08110156102a957600080fd5b8101906020810181356401000000008111156102c457600080fd5b8201836020820111156102d657600080fd5b803590602001918460018302840111640100000000831117156102f857600080fd5b91939092909160208101903564010000000081111561031657600080fd5b82018360208201111561032857600080fd5b8035906020019184600183028401116401000000008311171561034a57600080fd5b919350915060ff813516906001600160a01b036020820135169060400135610626565b005b6101d56004803603602081101561038557600080fd5b50356001600160a01b03166106ce565b6101186106e9565b6101d561074a565b61036d600480360360208110156103bb57600080fd5b50356001600160a01b0316610750565b61036d6107a2565b6101b9600480360360408110156103e957600080fd5b506001600160a01b0381351690602001356107b4565b6101b96004803603604081101561041557600080fd5b506001600160a01b0381351690602001356107f0565b6101b96004803603602081101561044157600080fd5b50356001600160a01b03166107fd565b6101d56004803603604081101561046757600080fd5b506001600160a01b038135811691602001351661080f565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b505050505090505b90565b600061052333848461083a565b5060015b92915050565b60045490565b6000610540848484610926565b6001600160a01b03841660009081526003602090815260408083203380855292529091205461058091869161057b908663ffffffff610aa316565b61083a565b5060019392505050565b60075460ff1690565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161052391859061057b908663ffffffff610aec16565b60006105e16105dc610b46565b6107fd565b61061c5760405162461bcd60e51b81526004018080602001828103825260308152602001806111e96030913960400191505060405180910390fd5b6105238383610b4a565b61069b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610c3c915050565b66038d7ea4c680006001556106c5826106c08360ff8716600a0a63ffffffff610c7c16565b610b4a565b50505050505050565b6001600160a01b031660009081526002602052604090205490565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561050b5780601f106104e05761010080835404028352916020019161050b565b60015481565b61075b6105dc610b46565b6107965760405162461bcd60e51b81526004018080602001828103825260308152602001806111e96030913960400191505060405180910390fd5b61079f81610cd5565b50565b6107b26107ad610b46565b610d1d565b565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161052391859061057b908663ffffffff610aa316565b6000610523338484610926565b6000610527818363ffffffff610d6516565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6001600160a01b03831661087f5760405162461bcd60e51b81526004018080602001828103825260248152602001806112c36024913960400191505060405180910390fd5b6001600160a01b0382166108c45760405162461bcd60e51b81526004018080602001828103825260228152602001806111c76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661096b5760405162461bcd60e51b815260040180806020018281038252602581526020018061129e6025913960400191505060405180910390fd5b6001600160a01b0382166109b05760405162461bcd60e51b81526004018080602001828103825260238152602001806111a46023913960400191505060405180910390fd5b60006109c760015483610dcc90919063ffffffff16565b905060006109db838363ffffffff610aa316565b90506109e78583610de1565b6001600160a01b038516600090815260026020526040902054610a10908263ffffffff610aa316565b6001600160a01b038087166000908152600260205260408082209390935590861681522054610a45908263ffffffff610aec16565b6001600160a01b0380861660008181526002602090815260409182902094909455805185815290519193928916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35050505050565b6000610ae583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ebc565b9392505050565b600082820183811015610ae5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b038216610ba5576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600454610bb8908263ffffffff610aec16565b6004556001600160a01b038216600090815260026020526040902054610be4908263ffffffff610aec16565b6001600160a01b03831660008181526002602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b8251610c4f90600590602086019061110b565b508151610c6390600690602085019061110b565b506007805460ff191660ff929092169190911790555050565b600082610c8b57506000610527565b82820282848281610c9857fe5b0414610ae55760405162461bcd60e51b815260040180806020018281038252602181526020018061123a6021913960400191505060405180910390fd5b610ce660008263ffffffff610f5316565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610d2e60008263ffffffff610fd416565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b038216610dac5760405162461bcd60e51b815260040180806020018281038252602281526020018061125b6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6000610ae58383670de0b6b3a764000061103b565b6001600160a01b038216610e265760405162461bcd60e51b815260040180806020018281038252602181526020018061127d6021913960400191505060405180910390fd5b600454610e39908263ffffffff610aa316565b6004556001600160a01b038216600090815260026020526040902054610e65908263ffffffff610aa316565b6001600160a01b0383166000818152600260209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b60008184841115610f4b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f10578181015183820152602001610ef8565b50505050905090810190601f168015610f3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b610f5d8282610d65565b15610faf576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b610fde8282610d65565b6110195760405162461bcd60e51b81526004018080602001828103825260218152602001806112196021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60008061104e858563ffffffff610c7c16565b9050611060818463ffffffff61106916565b95945050505050565b6000610ae583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250600081836110f55760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610f10578181015183820152602001610ef8565b50600083858161110157fe5b0495945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061114c57805160ff1916838001178555611179565b82800160010185558215611179579182015b8281111561117957825182559160200191906001019061115e565b50611185929150611189565b5090565b61051391905b80821115611185576000815560010161118f56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573734d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a7231582034581108c4ee5cf25b74522064af58b8c714c14a20f1f70192b692373947035f64736f6c63430005100032",
  "sourceMap": "214:547:103:-;;;318:24:115;329:12;-1:-1:-1;;;;;329:10:115;:12;:::i;:::-;-1:-1:-1;;;;;318:10:115;:24;:::i;:::-;214:547:103;;788:96:113;867:10;788:96;:::o;786:119:115:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:115;;;;;;;;786:119;:::o;260:175:114:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:114;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:114;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:114;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:114;;867:68;;;;-1:-1:-1;;;867:68:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:114;:11;:20;;;;;;;;;;;;;;;779:200::o;214:547:103:-;;;;;;;",
  "deployedSourceMap": "214:547:103:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:547:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2335:81:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2335:81:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4249:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4249:145:99;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3310:89;;;:::i;:::-;;;;;;;;;;;;;;;;4851:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4851:252:99;;;;;;;;;;;;;;;;;:::i;3169:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5498:203;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5498:203:99;;;;;;;;:::i;9875:140::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9875:140:99;;;;;;;;:::i;434:325:103:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;434:325:103;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;434:325:103;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;434:325:103;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;434:325:103;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;434:325:103;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;434:325:103;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;434:325:103;;-1:-1:-1;434:325:103;-1:-1:-1;434:325:103;;;;;-1:-1:-1;;;;;434:325:103;;;;;;;;;;:::i;:::-;;3457:108:99;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3457:108:99;-1:-1:-1;;;;;3457:108:99;;:::i;2529:85::-;;;:::i;1576:22::-;;;:::i;607:90:115:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;607:90:115;-1:-1:-1;;;;;607:90:115;;:::i;703:77::-;;;:::i;6188:213:99:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6188:213:99;;;;;;;;:::i;3768:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3768:153:99;;;;;;;;:::i;494:107:115:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;494:107:115;-1:-1:-1;;;;;494:107:115;;:::i;3979:132:99:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3979:132:99;;;;;;;;;;:::i;2335:81::-;2404:5;2397:12;;;;;;;;-1:-1:-1;;2397:12:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2372:13;;2397:12;;2404:5;;2397:12;;2404:5;2397:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2335:81;;:::o;4249:145::-;4314:4;4330:36;4339:10;4351:7;4360:5;4330:8;:36::i;:::-;-1:-1:-1;4383:4:99;4249:145;;;;;:::o;3310:89::-;3380:12;;3310:89;:::o;4851:252::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5031:19:99;;;;;;:11;:19;;;;;;;;5019:10;5031:31;;;;;;;;;5002:73;;5011:6;;5031:43;;5067:6;5031:43;:35;:43;:::i;:::-;5002:8;:73::i;:::-;-1:-1:-1;5092:4:99;4851:252;;;;;:::o;3169:81::-;3234:9;;;;3169:81;:::o;5498:203::-;5603:10;5578:4;5624:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5624:32:99;;;;;;;;;;5578:4;;5594:79;;5615:7;;5624:48;;5661:10;5624:48;:36;:48;:::i;9875:140::-;9949:4;395:22:115;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;-1:-1:-1;;;387:83:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9965:22:99;9971:7;9980:6;9965:5;:22::i;434:325:103:-;593:57;618:8;;593:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;593:57:103;;;;137:4:-1;593:57:103;;;;;;;;;;;;;;;;;;-1:-1:-1;628:10:103;;-1:-1:-1;628:10:103;;;;593:57;;628:10;;;;593:57;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;640:9:103;;-1:-1:-1;593:24:103;;-1:-1:-1;;593:57:103:i;:::-;670:4;660:7;:14;684:68;690:17;709:42;:12;732:18;;;726:2;:24;709:42;:16;:42;:::i;:::-;684:5;:68::i;:::-;434:325;;;;;;;:::o;3457:108:99:-;-1:-1:-1;;;;;3540:18:99;3514:7;3540:18;;;:9;:18;;;;;;;3457:108::o;2529:85::-;2600:7;2593:14;;;;;;;;-1:-1:-1;;2593:14:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2568:13;;2593:14;;2600:7;;2593:14;;2600:7;2593:14;;;;;;;;;;;;;;;;;;;;;;;;1576:22;;;;:::o;607:90:115:-;395:22;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;6188:213:99:-;6298:10;6273:4;6319:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;6319:32:99;;;;;;;;;;6273:4;;6289:84;;6310:7;;6319:53;;6356:15;6319:53;:36;:53;:::i;3768:153::-;3837:4;3853:40;3863:10;3875:9;3886:6;3853:9;:40::i;494:107:115:-;550:4;573:21;550:4;586:7;573:21;:12;:21;:::i;3979:132:99:-;-1:-1:-1;;;;;4077:18:99;;;4051:7;4077:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3979:132::o;9048:329::-;-1:-1:-1;;;;;9140:19:99;;9132:68;;;;-1:-1:-1;;;9132:68:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9218:21:99;;9210:68;;;;-1:-1:-1;;;9210:68:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9289:18:99;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;9339:31;;;;;;;;;;;;;;;;;9048:329;;;:::o;6875:557::-;-1:-1:-1;;;;;6972:20:99;;6964:70;;;;-1:-1:-1;;;6964:70:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7052:23:99;;7044:71;;;;-1:-1:-1;;;7044:71:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7126:11;7140:27;7159:7;;7140:6;:18;;:27;;;;:::i;:::-;7126:41;-1:-1:-1;7177:17:99;7197:15;:6;7126:41;7197:15;:10;:15;:::i;:::-;7177:35;;7223:18;7229:6;7237:3;7223:5;:18::i;:::-;-1:-1:-1;;;;;7272:17:99;;;;;;:9;:17;;;;;;:32;;7294:9;7272:32;:21;:32;:::i;:::-;-1:-1:-1;;;;;7252:17:99;;;;;;;:9;:17;;;;;;:52;;;;7337:20;;;;;;;:35;;7362:9;7337:35;:24;:35;:::i;:::-;-1:-1:-1;;;;;7314:20:99;;;;;;;:9;:20;;;;;;;;;:58;;;;7387:38;;;;;;;7314:20;;7387:38;;;;;;;;;;;;;6875:557;;;;;:::o;1274:134:116:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:116:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:116;;;;;;;;;;;;;;;;;;;;;;;;;;;788:96:113;867:10;788:96;:::o;7702:302:99:-;-1:-1:-1;;;;;7777:21:99;;7769:65;;;;;-1:-1:-1;;;7769:65:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;7860:12;;:24;;7877:6;7860:24;:16;:24;:::i;:::-;7845:12;:39;-1:-1:-1;;;;;7915:18:99;;;;;;:9;:18;;;;;;:30;;7938:6;7915:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;7894:18:99;;;;;;:9;:18;;;;;;;;:51;;;;7960:37;;;;;;;7894:18;;;;7960:37;;;;;;;;;;7702:302;;:::o;2097:173::-;2195:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2217:16:99;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;2243:9:99;:20;;-1:-1:-1;;2243:20:99;;;;;;;;;;;;-1:-1:-1;;2097:173:99:o;2159:459:116:-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:116;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:119:115;842:21;:8;855:7;842:21;:12;:21;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:115;;;;;;;;786:119;:::o;911:127::-;970:24;:8;986:7;970:24;:15;:24;:::i;:::-;1009:22;;-1:-1:-1;;;;;1009:22:115;;;;;;;;911:127;:::o;779:200:114:-;851:4;-1:-1:-1;;;;;875:21:114;;867:68;;;;-1:-1:-1;;;867:68:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:114;:11;:20;;;;;;;;;;;;;;;779:200::o;2257:161:65:-;2347:7;2377:34;2394:1;2397;644:4;2377:16;:34::i;8323:300:99:-;-1:-1:-1;;;;;8397:21:99;;8389:67;;;;-1:-1:-1;;;8389:67:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8482:12;;:23;;8499:5;8482:23;:16;:23;:::i;:::-;8467:12;:38;-1:-1:-1;;;;;8536:18:99;;;;;;:9;:18;;;;;;:29;;8559:5;8536:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;8515:18:99;;;;;;:9;:18;;;;;;;;:50;;;;8580:36;;;;;;;8515:18;;8580:36;;;;;;;;;;;8323:300;;:::o;1732:187:116:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:116;;;1732:187::o;260:175:114:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:114;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:114;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:114;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:114;;;510:180::o;2880:302:65:-;2990:7;;3101:8;:1;3107;3101:8;:5;:8;:::i;:::-;3089:20;-1:-1:-1;3163:12:65;3089:20;3169:5;3163:12;:5;:12;:::i;:::-;3156:19;2880:302;-1:-1:-1;;;;;2880:302:65:o;3073:130:116:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;3889:28:116;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:116:o;214:547:103:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;214:547:103;;;-1:-1:-1;214:547:103;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.16;\n\nimport { ERC20WithFee } from \"./MockERC20WithFee.sol\";\n\n/**\n * @title  InitializableToken\n * @author Stability Labs Pty. Ltd.\n * @dev    Basic ERC20Detailed Token functionality for Mix\n */\ncontract MockInitializableTokenWithFee is ERC20WithFee {\n\n    /**\n     * @dev Initialization function for implementing contract\n     * @notice To avoid variable shadowing appended `Arg` after arguments name.\n     */\n    function initialize(string calldata _nameArg, string calldata _symbolArg, uint8 _decimals, address _initialRecipient, uint256 _initialMint) external {\n        ERC20WithFee._initialize(_nameArg, _symbolArg, _decimals);\n        feeRate = 1e15;\n        _mint(_initialRecipient, _initialMint.mul(10 ** uint256(_decimals)));\n    }\n}\n",
  "sourcePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockInitializableTokenWithFee.sol",
  "ast": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockInitializableTokenWithFee.sol",
    "exportedSymbols": {
      "MockInitializableTokenWithFee": [
        33347
      ]
    },
    "id": 33348,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33304,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:103"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockERC20WithFee.sol",
        "file": "./MockERC20WithFee.sol",
        "id": 33306,
        "nodeType": "ImportDirective",
        "scope": 33348,
        "sourceUnit": 32941,
        "src": "25:54:103",
        "symbolAliases": [
          {
            "foreign": 33305,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33307,
              "name": "ERC20WithFee",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32899,
              "src": "256:12:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithFee_$32899",
                "typeString": "contract ERC20WithFee"
              }
            },
            "id": 33308,
            "nodeType": "InheritanceSpecifier",
            "src": "256:12:103"
          }
        ],
        "contractDependencies": [
          32899,
          34157,
          34345,
          35244
        ],
        "contractKind": "contract",
        "documentation": "@title  InitializableToken\n@author Stability Labs Pty. Ltd.\n@dev    Basic ERC20Detailed Token functionality for Mix",
        "fullyImplemented": true,
        "id": 33347,
        "linearizedBaseContracts": [
          33347,
          32899,
          34345,
          34157,
          35244
        ],
        "name": "MockInitializableTokenWithFee",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33345,
              "nodeType": "Block",
              "src": "583:176:103",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33324,
                        "name": "_nameArg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33310,
                        "src": "618:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33325,
                        "name": "_symbolArg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33312,
                        "src": "628:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33326,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33314,
                        "src": "640:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33321,
                        "name": "ERC20WithFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32899,
                        "src": "593:12:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20WithFee_$32899_$",
                          "typeString": "type(contract ERC20WithFee)"
                        }
                      },
                      "id": 33323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32461,
                      "src": "593:24:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 33327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "593:57:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33328,
                  "nodeType": "ExpressionStatement",
                  "src": "593:57:103"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33329,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32415,
                      "src": "660:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653135",
                      "id": 33330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "670:4:103",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000_by_1",
                        "typeString": "int_const 1000000000000000"
                      },
                      "value": "1e15"
                    },
                    "src": "660:14:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33332,
                  "nodeType": "ExpressionStatement",
                  "src": "660:14:103"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33334,
                        "name": "_initialRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33316,
                        "src": "690:17:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 33337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "726:2:103",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33339,
                                  "name": "_decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33314,
                                  "src": "740:9:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 33338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "732:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 33340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "732:18:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "726:24:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33335,
                            "name": "_initialMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33318,
                            "src": "709:12:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34449,
                          "src": "709:16:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "709:42:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33333,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32766,
                      "src": "684:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:68:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33344,
                  "nodeType": "ExpressionStatement",
                  "src": "684:68:103"
                }
              ]
            },
            "documentation": "@dev Initialization function for implementing contract\n@notice To avoid variable shadowing appended `Arg` after arguments name.",
            "id": 33346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33310,
                  "name": "_nameArg",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "454:24:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33309,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33312,
                  "name": "_symbolArg",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "480:26:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33311,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33314,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "508:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 33313,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33316,
                  "name": "_initialRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "525:25:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33318,
                  "name": "_initialMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "552:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "453:120:103"
            },
            "returnParameters": {
              "id": 33320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:103"
            },
            "scope": 33347,
            "src": "434:325:103",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 33348,
        "src": "214:547:103"
      }
    ],
    "src": "0:762:103"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockInitializableTokenWithFee.sol",
    "exportedSymbols": {
      "MockInitializableTokenWithFee": [
        33347
      ]
    },
    "id": 33348,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33304,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:103"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/shared/MockERC20WithFee.sol",
        "file": "./MockERC20WithFee.sol",
        "id": 33306,
        "nodeType": "ImportDirective",
        "scope": 33348,
        "sourceUnit": 32941,
        "src": "25:54:103",
        "symbolAliases": [
          {
            "foreign": 33305,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33307,
              "name": "ERC20WithFee",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32899,
              "src": "256:12:103",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20WithFee_$32899",
                "typeString": "contract ERC20WithFee"
              }
            },
            "id": 33308,
            "nodeType": "InheritanceSpecifier",
            "src": "256:12:103"
          }
        ],
        "contractDependencies": [
          32899,
          34157,
          34345,
          35244
        ],
        "contractKind": "contract",
        "documentation": "@title  InitializableToken\n@author Stability Labs Pty. Ltd.\n@dev    Basic ERC20Detailed Token functionality for Mix",
        "fullyImplemented": true,
        "id": 33347,
        "linearizedBaseContracts": [
          33347,
          32899,
          34345,
          34157,
          35244
        ],
        "name": "MockInitializableTokenWithFee",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33345,
              "nodeType": "Block",
              "src": "583:176:103",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33324,
                        "name": "_nameArg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33310,
                        "src": "618:8:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33325,
                        "name": "_symbolArg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33312,
                        "src": "628:10:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33326,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33314,
                        "src": "640:9:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33321,
                        "name": "ERC20WithFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32899,
                        "src": "593:12:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20WithFee_$32899_$",
                          "typeString": "type(contract ERC20WithFee)"
                        }
                      },
                      "id": 33323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32461,
                      "src": "593:24:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 33327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "593:57:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33328,
                  "nodeType": "ExpressionStatement",
                  "src": "593:57:103"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33329,
                      "name": "feeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32415,
                      "src": "660:7:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653135",
                      "id": 33330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "670:4:103",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000_by_1",
                        "typeString": "int_const 1000000000000000"
                      },
                      "value": "1e15"
                    },
                    "src": "660:14:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33332,
                  "nodeType": "ExpressionStatement",
                  "src": "660:14:103"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33334,
                        "name": "_initialRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33316,
                        "src": "690:17:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 33337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "726:2:103",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 33339,
                                  "name": "_decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33314,
                                  "src": "740:9:103",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 33338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "732:7:103",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 33340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "732:18:103",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "726:24:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 33335,
                            "name": "_initialMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33318,
                            "src": "709:12:103",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34449,
                          "src": "709:16:103",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 33342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "709:42:103",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33333,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32766,
                      "src": "684:5:103",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:68:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33344,
                  "nodeType": "ExpressionStatement",
                  "src": "684:68:103"
                }
              ]
            },
            "documentation": "@dev Initialization function for implementing contract\n@notice To avoid variable shadowing appended `Arg` after arguments name.",
            "id": 33346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33310,
                  "name": "_nameArg",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "454:24:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33309,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33312,
                  "name": "_symbolArg",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "480:26:103",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33311,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:6:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33314,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "508:15:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 33313,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:5:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33316,
                  "name": "_initialRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "525:25:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:103",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33318,
                  "name": "_initialMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 33346,
                  "src": "552:20:103",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:103",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "453:120:103"
            },
            "returnParameters": {
              "id": 33320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:0:103"
            },
            "scope": 33347,
            "src": "434:325:103",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 33348,
        "src": "214:547:103"
      }
    ],
    "src": "0:762:103"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-11T05:43:18.408Z",
  "devdoc": {
    "author": "Stability Labs Pty. Ltd.",
    "details": "Basic ERC20Detailed Token functionality for Mix",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "initialize(string,string,uint8,address,uint256)": {
        "details": "Initialization function for implementing contract"
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "InitializableToken"
  },
  "userdoc": {
    "methods": {
      "initialize(string,string,uint8,address,uint256)": {
        "notice": "To avoid variable shadowing appended `Arg` after arguments name."
      }
    }
  }
}