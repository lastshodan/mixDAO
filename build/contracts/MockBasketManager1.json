{
  "contractName": "MockBasketManager1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "BasketStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "bAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "maxWeights",
          "type": "uint256[]"
        }
      ],
      "name": "BasketWeightsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "integrator",
          "type": "address"
        }
      ],
      "name": "BassetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        }
      ],
      "name": "BassetRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum MixStructs.BassetStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "BassetStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "bAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newIntegrator",
          "type": "address"
        }
      ],
      "name": "BassetsMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "TransferFeeEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_integration",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isTransferFeeCharged",
          "type": "bool"
        }
      ],
      "name": "addBasset",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "basket",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "maxBassets",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "undergoingRecol",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "failed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralisationRatio",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "collectInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "interestCollected",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "gains",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_bAssetIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_decreaseAmount",
          "type": "uint256"
        }
      ],
      "name": "decreaseVaultBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_bAssetIndices",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_decreaseAmount",
          "type": "uint256[]"
        }
      ],
      "name": "decreaseVaultBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "failBasset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "getBasset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MixStructs.BassetStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isTransferFeeCharged",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ratio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basset",
          "name": "bAsset",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "getBassetIntegrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "integrator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MixStructs.BassetStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isTransferFeeCharged",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ratio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basset[]",
          "name": "bAssets",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_belowPeg",
          "type": "bool"
        }
      ],
      "name": "handlePegLoss",
      "outputs": [
        {
          "internalType": "bool",
          "name": "alreadyActioned",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_bAssetIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_increaseAmount",
          "type": "uint256"
        }
      ],
      "name": "increaseVaultBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_bAssetIndices",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_increaseAmount",
          "type": "uint256[]"
        }
      ],
      "name": "increaseVaultBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_nexus",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mIx",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_integrators",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_weights",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "_hasTransferFees",
          "type": "bool[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "integrations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mIx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_newIntegration",
          "type": "address"
        }
      ],
      "name": "migrateBassets",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "negateIsolation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nexus",
      "outputs": [
        {
          "internalType": "contract INexus",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        }
      ],
      "name": "prepareRedeemBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "allBassets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.RedeemProps",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "prepareRedeemMulti",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "colRatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.RedeemPropsMulti",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_input",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_output",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMint",
          "type": "bool"
        }
      ],
      "name": "prepareSwapBassets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetToRemove",
          "type": "address"
        }
      ],
      "name": "removeBasset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_weights",
          "type": "uint256[]"
        }
      ],
      "name": "setBasketWeights",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_flag",
          "type": "bool"
        }
      ],
      "name": "setTransferFeesFlag",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBasket",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bassets",
              "type": "tuple[]"
            },
            {
              "internalType": "uint8",
              "name": "maxBassets",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "undergoingRecol",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "failed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "collateralisationRatio",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basket",
          "name": "b",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "prepareForgeBasset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "bInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "prepareForgeBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.ForgePropsMulti",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BasketStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"maxWeights\",\"type\":\"uint256[]\"}],\"name\":\"BasketWeightsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"}],\"name\":\"BassetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"}],\"name\":\"BassetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"BassetStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newIntegrator\",\"type\":\"address\"}],\"name\":\"BassetsMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"TransferFeeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_integration\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isTransferFeeCharged\",\"type\":\"bool\"}],\"name\":\"addBasset\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basket\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"maxBassets\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralisationRatio\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interestCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"gains\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_bAssetIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decreaseAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseVaultBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_bAssetIndices\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_decreaseAmount\",\"type\":\"uint256[]\"}],\"name\":\"decreaseVaultBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"failBasset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBasket\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bassets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"maxBassets\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralisationRatio\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basket\",\"name\":\"b\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"getBasset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"getBassetIntegrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_belowPeg\",\"type\":\"bool\"}],\"name\":\"handlePegLoss\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"alreadyActioned\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_bAssetIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_increaseAmount\",\"type\":\"uint256\"}],\"name\":\"increaseVaultBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_bAssetIndices\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_increaseAmount\",\"type\":\"uint256[]\"}],\"name\":\"increaseVaultBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nexus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mIx\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_hasTransferFees\",\"type\":\"bool[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"integrations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mIx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_newIntegration\",\"type\":\"address\"}],\"name\":\"migrateBassets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"negateIsolation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"prepareForgeBasset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"bInfo\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"prepareForgeBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.ForgePropsMulti\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"}],\"name\":\"prepareRedeemBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"allBassets\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.RedeemProps\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prepareRedeemMulti\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"colRatio\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.RedeemPropsMulti\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_input\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_output\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMint\",\"type\":\"bool\"}],\"name\":\"prepareSwapBassets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetToRemove\",\"type\":\"address\"}],\"name\":\"removeBasset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"}],\"name\":\"setBasketWeights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setTransferFeesFlag\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addBasset(address,address,bool)\":{\"details\":\"External func to allow the Governor to conduct add operations on the Basket\",\"params\":{\"_bAsset\":\"Address of the ERC20 token to add to the Basket\",\"_integration\":\"Address of the vault integration to deposit and withdraw\",\"_isTransferFeeCharged\":\"Bool - are transfer fees charged on this bAsset\"},\"return\":\"index                Position of the bAsset in the Basket\"},\"collectInterest()\":{\"details\":\"Called by mIx to calculate how much interest has been generated in the basket     and withdraw it. Cycles through the connected platforms to check the balances.\",\"return\":\"interestCollected   Total amount of interest collected, in mIx termsgains               Array of bAsset units gained\"},\"decreaseVaultBalance(uint8,address,uint256)\":{\"details\":\"Called by mIx after redeeming tokens. Simply reduce the balance in the vault\",\"params\":{\"_bAssetIndex\":\"Index of the bAsset\",\"_decreaseAmount\":\"Units withdrawn\"}},\"decreaseVaultBalances(uint8[],address[],uint256[])\":{\"details\":\"Called by mIx after redeeming tokens. Simply reduce the balance in the vault\",\"params\":{\"_bAssetIndices\":\"Array of bAsset indexes\",\"_decreaseAmount\":\"Units withdrawn\"}},\"failBasset(address)\":{\"details\":\"Marks a bAsset as permanently deviated from peg\",\"params\":{\"_bAsset\":\"Address of the bAsset\"}},\"getBasset(address)\":{\"details\":\"Get data for a specific bAsset, if it exists\",\"params\":{\"_bAsset\":\"Address of bAsset\"},\"return\":\"bAsset  Struct with full bAsset data\"},\"getBassetIntegrator(address)\":{\"details\":\"Get current integrator for a specific bAsset, if it exists\",\"params\":{\"_bAsset\":\"Address of bAsset\"},\"return\":\"integrator  Address of current integrator\"},\"getBassets()\":{\"details\":\"Get data for a all bAssets in basket\",\"return\":\"bAssets  Struct[] with full bAsset datalen      Number of bAssets in the Basket\"},\"handlePegLoss(address,bool)\":{\"details\":\"Executes the Auto Redistribution event by isolating the bAsset from the Basket\",\"params\":{\"_bAsset\":\"Address of the ERC20 token to isolate\",\"_belowPeg\":\"Bool to describe whether the bAsset deviated below peg (t)                        or above (f)\"},\"return\":\"alreadyActioned Bool to show whether a bAsset had already been actioned\"},\"increaseVaultBalance(uint8,address,uint256)\":{\"details\":\"Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault\",\"params\":{\"_bAssetIndex\":\"Index of the bAsset\",\"_increaseAmount\":\"Units deposited\"}},\"increaseVaultBalances(uint8[],address[],uint256[])\":{\"details\":\"Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault\",\"params\":{\"_bAssetIndices\":\"Array of bAsset indexes\",\"_increaseAmount\":\"Units deposited\"}},\"initialize(address,address,address[],address[],uint256[],bool[])\":{\"details\":\"Initialization function for upgradable proxy contract.     This function should be called via Proxy just after contract deployment.\",\"params\":{\"_bAssets\":\"Array of erc20 bAsset addresses\",\"_hasTransferFees\":\"Bool signifying if this bAsset has xfer fees\",\"_integrators\":\"Matching array of the platform intergations for bAssets\",\"_mIx\":\"Address of the mIx whose Basket to manage\",\"_nexus\":\"Address of system Nexus\",\"_weights\":\"Weightings of each bAsset, summing to 1e18\"}},\"migrateBassets(address[],address)\":{\"details\":\"Transfers all collateral from one lending market to another - used initially     to handle the migration between Aave V1 and Aave V2. Note - only supports non     tx fee enabled assets\",\"params\":{\"_bAssets\":\"Array of basket assets to migrate\",\"_newIntegration\":\"Address of the new platform integration\"}},\"negateIsolation(address)\":{\"details\":\"Negates the isolation of a given bAsset\",\"params\":{\"_bAsset\":\"Address of the bAsset\"}},\"pause()\":{\"details\":\"Called by the Governor to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\",\"return\":\"Returns `true` when paused, otherwise `false`\"},\"prepareRedeemBassets(address[])\":{\"details\":\"Fetch the array of bAssets for redemption, and pass back all basket info.\",\"params\":{\"_bAssets\":\"Array of bAsset addresses to redeem\"}},\"prepareRedeemMulti()\":{\"details\":\"Prepare given bAsset addresses for RedeemMulti. Currently returns integrator     and essential minting info for each bAsset\",\"return\":\"props     Struct of all relevant Forge information\"},\"prepareSwapBassets(address,address,bool)\":{\"details\":\"Prepare given bAssets for swapping\",\"params\":{\"_input\":\"Address of the input bAsset\",\"_isMint\":\"Is this swap actually a mint? i.e. output == address(mIx)\",\"_output\":\"Address of the output bAsset\"},\"return\":\"props     Struct of all relevant Forge information\"},\"removeBasset(address)\":{\"details\":\"Removes a specific Asset from the Basket, given that its target/collateral     level is already 0, throws if invalid.\",\"params\":{\"_assetToRemove\":\"The asset to remove from the basket\"}},\"setBasketWeights(address[],uint256[])\":{\"details\":\"External call for the governor to set weightings of all bAssets\",\"params\":{\"_bAssets\":\"Array of bAsset addresses\",\"_weights\":\"Array of bAsset weights - summing 100% where 100% == 1e18\"}},\"setTransferFeesFlag(address,bool)\":{\"details\":\"Update transfer fee flag for a given bAsset, should it change its fee practice\",\"params\":{\"_bAsset\":\"bAsset address\",\"_flag\":\"Charge transfer fee when its set to 'true', otherwise 'false'\"}},\"unpause()\":{\"details\":\"Called by Governor to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol\":\"MockBasketManager1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/IBasketManager.sol\":{\"keccak256\":\"0x6a1ac0981fd20fbdf0f9825411b841e907264853e9c6e7c778d6adb02f6e8a4a\",\"urls\":[\"bzz-raw://2b2bf64fa6cb679b5f6718ddfc3b40be827894eaad5ce2600c79e1de76c535ab\",\"dweb:/ipfs/Qmc6ggbSkDVyZfA5T8pAHy1mFcHaLZ8bE2sRTpiKb1QQem\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/IPlatformIntegration.sol\":{\"keccak256\":\"0x3a6353d05674c582b0f7e9de6aa57d3ee2354e3d6c27e9d74adeb3a3271a07ba\",\"urls\":[\"bzz-raw://03c81a8a973d9bdde92646aa4943a1e69e6206b16bfd10f21b8af844c5161ce9\",\"dweb:/ipfs/QmYcLX95PPBcFTmSBHcPAzvQHpzQyM2aHQWyvVGdBgxdbP\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol\":{\"keccak256\":\"0x3853b66a78639050b59b353bc2bc53fa0ca9eb41ebc79e644bd201419c27d8a1\",\"urls\":[\"bzz-raw://72d391b1d72575b87a8f8d3cce7f7abc06867acd463d2c22796e71ce2914b5c1\",\"dweb:/ipfs/QmWdQ2hw1HcJFbT8gNrTWSpgfmm9ds79JpDWpQpGSCo5Ez\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol\":{\"keccak256\":\"0xc8d3ed27e2aa2a4e880b1650b9e1327a44a228349ed1c80c29b7ae3eae4c1306\",\"urls\":[\"bzz-raw://f3688f28d8ff87e3c156a432b56535422ad75fe179a249fcbce04df6a1c04fa4\",\"dweb:/ipfs/QmfNZU6L52QkuYf66smbWHpXZMhfXjEyLgYffuhaJKa5jq\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/CommonHelpers.sol\":{\"keccak256\":\"0x33e809b4367d394ea2122f363d3c4f82a036fd459e21e0c54f80003055ab9670\",\"urls\":[\"bzz-raw://14a31f4bb72d23a18e3a49ac330114199c0c69ced7d452fbf088c42ef233f636\",\"dweb:/ipfs/QmSD6rjG91CJn4eriTQR9FjLAnn8nD84BFdjgYrrBgM9QX\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/IBasicToken.sol\":{\"keccak256\":\"0x7d505a6f3c24d5da06858f6da65ca04e15e2798c9ca9bb24624311fc10c35825\",\"urls\":[\"bzz-raw://937dd232b4bd4e49718279c406ba9c98627a38980dbb26d2f932f66815dd67b9\",\"dweb:/ipfs/Qmbg2N2PX46VCqBe224vmuNHv3YvaJBrH1gguspnz4acLd\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableModule.sol\":{\"keccak256\":\"0xa9b455fd1f9dcce943e46563ce872cb6910f414f061a624b538cb965dccb74d1\",\"urls\":[\"bzz-raw://ea08022306fd741ec6007d5cea2c4493f23240c0317045fa40b4eb442fa15152\",\"dweb:/ipfs/QmfXoLRmbto8dhkGy8bjZJ73PZhKxjVs8ooHVsXVV5wdtG\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x6e30ee844194c37d586269196cc4c6d32718baec2cad7f64c9e1470759060f19\",\"urls\":[\"bzz-raw://d2313e50e8002b63eb8279834946fdbfa93684b98cebd21e0ea6d7cb71e92a76\",\"dweb:/ipfs/QmbGtNGqvRn6T9jMvuHRHcTkdTe8gxyJzgGc6SibVZqAsM\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializablePausableModule.sol\":{\"keccak256\":\"0x5187c682082a7e393d61be9a618a177adf89e99aefc0c490ac6b1d22bcd46f88\",\"urls\":[\"bzz-raw://6ee686b80b345615e77caf027f3b99927ef647f23a334339aaf59c5b21d8d157\",\"dweb:/ipfs/Qmf6AUkTDpPAra9pnEpmTsu3yVpHM5mMWhn3PZ2mjwoCgT\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableReentrancyGuard.sol\":{\"keccak256\":\"0xc98017e147aea529e44443fdd07f755b68119a92ee844446816dbd04f9aacd81\",\"urls\":[\"bzz-raw://abe71a4925c88f58c7ae230dfe560249617c37ff428a5fb5a28b62776ea845cc\",\"dweb:/ipfs/QmdsrozhcTXaD18oTru9qkrb5vsHZaiHyuL4nmBDp738gd\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol\":{\"keccak256\":\"0x08d17d7581628d72ac3233f042e1b6d4e6cbc050a991672f9b69a85380a6158f\",\"urls\":[\"bzz-raw://a0305949a756551cd30719caf13465bdfa17dbcfdba67955c16152e3a5e89a93\",\"dweb:/ipfs/QmZmX1FuaArqk3MCfUBFoDTJTVZfFnhteAnMPpA3AMbTom\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol\":{\"keccak256\":\"0x6aa82828de8660662af9fde0901d763f61b28eaff8f32199223110d7690717da\",\"urls\":[\"bzz-raw://fdce5d0a5f29d5ecf19c69cc14296e5c9a50e8a9b91981fb1d8e269668ad990b\",\"dweb:/ipfs/QmR7JmNGGhbRh5c37vSmTPV2iPBmTBJQe9ET9TvidwQ8GT\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052603b805460ff60a01b191690553480156200001e57600080fd5b5060405162005c2d38038062005c2d833981016040819052620000419162000145565b6040805160c081019091526001600160a01b03821681526020810160018152602001600015158152602001620000816200012a60201b620029881760201c565b8152600060208083018290526040909201528151604280546001600160a01b0319166001600160a01b0390921691909117808255918301519091829060ff60a01b1916600160a01b836007811115620000d657fe5b021790555060408201518154901515600160a81b0260ff60a81b19909116178155606082015160018201556080820151600282015560a09091015160039091015550670de0b6b3a7640000603f556200019a565b6305f5e10090565b80516200013f8162000180565b92915050565b6000602082840312156200015857600080fd5b600062000166848462000132565b949350505050565b60006001600160a01b0382166200013f565b6200018b816200016e565b81146200019757600080fd5b50565b615a8380620001aa6000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c8063905e891411610104578063c0e46a2f116100a2578063dc686c8c11610071578063dc686c8c1461042e578063edc832b314610441578063f8085f1014610459578063fc94058e14610461576101d9565b8063c0e46a2f146103d3578063c4a80a2a146103f3578063cd6ef2b014610406578063d5e1d2791461041b576101d9565b8063a3f5c1d2116100de578063a3f5c1d214610377578063a59824c51461038c578063bdfbe29c1461039f578063bf9ca02d146103b2576101d9565b8063905e891414610331578063969642b9146103445780639d01cd3514610357576101d9565b80633f4ba83a1161017c5780636fb3e89c1161014b5780636fb3e89c146102e3578063790bde32146102f65780638456cb591461031657806388a90f511461031e576101d9565b80633f4ba83a1461029e57806343ae78be146102a65780635c975abb146102bb5780635d16cf42146102d0576101d9565b80631d3ce398116101b85780631d3ce3981461022f5780632a2fab22146102455780632bf596cf1461025b5780633e37bcbc1461027e576101d9565b80629e328b146101de57806309f2a983146102075780630b2d85011461021c575b600080fd5b6101f16101ec3660046140df565b610474565b6040516101fe9190615920565b60405180910390f35b61021a610215366004613fad565b610523565b005b61021a61022a366004614223565b6105c9565b61023761069d565b6040516101fe92919061556b565b61024d6106b1565b6040516101fe929190615900565b61026e6102693660046140df565b610a23565b6040516101fe9493929190615599565b61029161028c366004613fad565b610dab565b6040516101fe91906158bf565b61021a610de9565b6102ae610e91565b6040516101fe91906158de565b6102c3611017565b6040516101fe919061558b565b61021a6102de366004614467565b611027565b61021a6102f13660046141d9565b6110fb565b6103096103043660046143ef565b6116fb565b6040516101fe9190615469565b61021a611722565b61021a61032c366004614315565b6117c7565b6102c361033f36600461412c565b6118e5565b61021a610352366004613fad565b611a93565b61036a610365366004614291565b611c04565b6040516101fe91906158cd565b61037f611d93565b6040516101fe9190615601565b61021a61039a366004613fad565b611da2565b61021a6103ad36600461412c565b611e91565b6103c56103c0366004614166565b6120d7565b6040516101fe9291906155d7565b6103e66103e1366004614198565b612193565b6040516101fe91906158ef565b610309610401366004613fad565b612361565b61040e6123bd565b6040516101fe91906158ae565b61021a610429366004614315565b6124dc565b61021a61043c366004614467565b612626565b6104496126c6565b6040516101fe949392919061592e565b6103096126e8565b61021a61046f366004613fe9565b6126f7565b600061047e612906565b6001600160a01b0316336001600160a01b0316146104b75760405162461bcd60e51b81526004016104ae9061572e565b60405180910390fd5b603e5462010000900460ff16156104e05760405162461bcd60e51b81526004016104ae906157ee565b603e54610100900460ff16156105085760405162461bcd60e51b81526004016104ae906156ae565b61051b8484610515612988565b85612990565b949350505050565b603e5462010000900460ff161561054c5760405162461bcd60e51b81526004016104ae906157ee565b603e54610100900460ff16156105745760405162461bcd60e51b81526004016104ae906156ae565b3361057d612cb2565b6001600160a01b031614806105a1575033610596612906565b6001600160a01b0316145b6105bd5760405162461bcd60e51b81526004016104ae9061571e565b6105c681612cfd565b50565b6105d1612906565b6001600160a01b0316336001600160a01b0316146106015760405162461bcd60e51b81526004016104ae9061572e565b603e5462010000900460ff161561062a5760405162461bcd60e51b81526004016104ae906157ee565b61069784848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092018290525092506131c7915050565b50505050565b606060006106a9613385565b915091509091565b603c546000906060906001600160a01b031633146106e15760405162461bcd60e51b81526004016104ae9061564e565b603b54600160a01b900460ff161561070b5760405162461bcd60e51b81526004016104ae9061574e565b603e5462010000900460ff16156107345760405162461bcd60e51b81526004016104ae906157ee565b603b54600160a81b900460ff1661075d5760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b1916905560606000610776613385565b91509150806040519080825280602002602001820160405280156107a4578160200160208202803883390190505b50600094509250835b818160ff161015610a09576107c0613dfc565b838260ff16815181106107cf57fe5b60200260200101519050600081600001519050600060418460ff16815481106107f457fe5b6000918252602082200154604051632fa8a91360e11b81526001600160a01b0390911692508290635f5152269061082f908690600401615469565b602060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610881919081019061440d565b604085015190915060009061090f576040516370a0823160e01b81526001600160a01b038516906370a08231906108bc908690600401615469565b60206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090c919081019061440d565b90505b6000610921838363ffffffff61346616565b60a08701519091508082118015610947575060018760200151600781111561094557fe5b145b156109d85781603d6000018960ff168154811061096057fe5b60009182526020822060036004909202010191909155610986838363ffffffff61349216565b9050808c8a60ff168151811061099857fe5b60200260200101818152505060006109bd8960600151836134d490919063ffffffff16565b90506109cf8e8263ffffffff61346616565b9d5050506109f6565b60008b8960ff16815181106109e957fe5b6020026020010181815250505b5050600190950194506107ad9350505050565b5050603b805460ff60a81b1916600160a81b179055509091565b60006060610a2f613e35565b610a37613e35565b603b54600160a01b900460ff1615610a615760405162461bcd60e51b81526004016104ae9061574e565b610a69613e35565b610a71613e35565b603e5462010000900460ff1680610a8f5750603e54610100900460ff165b15610ad85760408051808201909152601b81527f4261736b657420697320756e646572676f696e67206368616e6765000000000060208201526000965094509092509050610da2565b600080610ae48b6134e5565b9150915081610b3357505060408051808201909152601a81527f496e70757420617373657420646f6573206e6f7420657869737400000000000060208201526000965094509092509050610da2565b6040518060600160405280603d6000018360ff1681548110610b5157fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610b9957fe5b6007811115610ba457fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610bf657fe5b600091825260209182902001546001600160a01b0316825260ff841691015293508815610c3e5750506040805160208101909152600081526001965094509092509050610da2565b600080610c4a8c6134e5565b9150915081610c9d57505060408051808201909152601b81527f4f757470757420617373657420646f6573206e6f7420657869737400000000006020820152600098509650929450909250610da2915050565b6040518060600160405280603d6000018360ff1681548110610cbb57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610d0357fe5b6007811115610d0e57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610d6057fe5b60009182526020808320909101546001600160a01b0316835260ff90941691840191909152604080519384019052825260019a50909850949650939450505050505b93509350935093565b610db3613dfc565b600080610dbf846134e5565b9150915081610de05760405162461bcd60e51b81526004016104ae9061579e565b61051b81613563565b610df1612906565b6001600160a01b0316336001600160a01b031614610e215760405162461bcd60e51b81526004016104ae9061572e565b603b54600160a01b900460ff16610e4a5760405162461bcd60e51b81526004016104ae9061563e565b603b805460ff60a01b191690556040517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90610e87903390615477565b60405180910390a1565b610e99613e5c565b603b54600160a01b900460ff1615610ec35760405162461bcd60e51b81526004016104ae9061574e565b603e54610100900460ff1615610eeb5760405162461bcd60e51b81526004016104ae906156ae565b60606000610ef7613385565b91509150606081604051908082528060200260200182016040528015610f27578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610f56578160200160208202803883390190505b50905060005b838160ff161015610fee5760418160ff1681548110610f7757fe5b9060005260206000200160009054906101000a90046001600160a01b0316838260ff1681518110610fa457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505080828260ff1681518110610fd457fe5b60ff90921660209283029190910190910152600101610f5c565b5060408051608081018252603f5481526020810195909552840191909152606083015250919050565b603b54600160a01b900460ff1690565b603c546001600160a01b031633146110515760405162461bcd60e51b81526004016104ae9061564e565b603b54600160a81b900460ff1661107a5760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b19169055603d80546110be91839160ff871690811061109e57fe5b90600052602060002090600402016003015461349290919063ffffffff16565b603d805460ff86169081106110cf57fe5b60009182526020909120600360049092020101555050603b805460ff60a81b1916600160a81b17905550565b611103612906565b6001600160a01b0316336001600160a01b0316146111335760405162461bcd60e51b81526004016104ae9061572e565b81806111515760405162461bcd60e51b81526004016104ae9061565e565b60005b818110156116b957600085858381811061116a57fe5b905060200201602061117f9190810190613fad565b905060008061118d836134e5565b91509150816111ae5760405162461bcd60e51b81526004016104ae9061584e565b603d805460ff83169081106111bf57fe5b6000918252602090912060049091020154600160a81b900460ff16156111f75760405162461bcd60e51b81526004016104ae9061573e565b600060418260ff168154811061120957fe5b6000918252602090912001546001600160a01b03908116915087168114156112435760405162461bcd60e51b81526004016104ae9061583e565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190611272908590600401615469565b60206040518083038186803b15801561128a57600080fd5b505afa15801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112c2919081019061440d565b90506000826001600160a01b0316635f515226876040518263ffffffff1660e01b81526004016112f29190615469565b602060405180830381600087803b15801561130c57600080fd5b505af1158015611320573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611344919081019061440d565b905080156113b25760405163934785b760e01b81526001600160a01b0384169063934785b79061137f9030908a9086906000906004016154ad565b600060405180830381600087803b15801561139957600080fd5b505af11580156113ad573d6000803e3d6000fd5b505050505b811561141b5760405163a4e2859560e01b81526001600160a01b0384169063a4e28595906113e89030908a908790600401615485565b600060405180830381600087803b15801561140257600080fd5b505af1158015611416573d6000803e3d6000fd5b505050505b600061142d828463ffffffff61346616565b90508960418660ff168154811061144057fe5b600091825260209091200180546001600160a01b0319166001600160a01b039283161790556114729088168b8361360a565b6040516307dba22560e31b81528a906001600160a01b03821690633edd1128906114a5908b9087906000906004016154fd565b602060405180830381600087803b1580156114bf57600080fd5b505af11580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114f7919081019061440d565b50604051632fa8a91360e11b81526000906001600160a01b03831690635f51522690611527908c90600401615469565b602060405180830381600087803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611579919081019061440d565b90506000896001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016115a99190615469565b60206040518083038186803b1580156115c157600080fd5b505afa1580156115d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115f9919081019061440d565b9050670de111a6b7de4000670de05bc096e9c00061161d878263ffffffff61366816565b841015801561163b5750611637878363ffffffff61366816565b8411155b6116575760405162461bcd60e51b81526004016104ae9061570e565b611667888263ffffffff61366816565b83101580156116855750611681888363ffffffff61366816565b8311155b6116a15760405162461bcd60e51b81526004016104ae9061570e565b50506001909a01995061115498505050505050505050565b507f407ca8e939a25b34f290fb7f4d3b0d85d03f13313dc34a6a15bbd91492cfa2498484846040516116ed93929190615525565b60405180910390a150505050565b6041818154811061170857fe5b6000918252602090912001546001600160a01b0316905081565b61172a612906565b6001600160a01b0316336001600160a01b03161461175a5760405162461bcd60e51b81526004016104ae9061572e565b603b54600160a01b900460ff16156117845760405162461bcd60e51b81526004016104ae9061574e565b603b805460ff60a01b1916600160a01b1790556040517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890610e87903390615477565b603c546001600160a01b031633146117f15760405162461bcd60e51b81526004016104ae9061564e565b603b54600160a81b900460ff1661181a5760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b191690558460005b818110156118c85761187c84848381811061184257fe5b90506020020135603d6000018a8a8581811061185a57fe5b905060200201602061186f919081019061442b565b60ff168154811061109e57fe5b603d89898481811061188a57fe5b905060200201602061189f919081019061442b565b60ff16815481106118ac57fe5b600091825260209091206003600490920201015560010161182b565b5050603b805460ff60a81b1916600160a81b179055505050505050565b6000336118f0612cb2565b6001600160a01b03161480611914575033611909612906565b6001600160a01b0316145b6119305760405162461bcd60e51b81526004016104ae9061571e565b603e5462010000900460ff16156119595760405162461bcd60e51b81526004016104ae906157ee565b600080611965856134e5565b60ff1691509150816119895760405162461bcd60e51b81526004016104ae906156fe565b6000603d600001828154811061199b57fe5b6000918252602082206004909102015460ff600160a01b909104169150856119c45760036119c7565b60025b90508060078111156119d557fe5b8260078111156119e157fe5b14806119f157506119f18261367d565b15611a03576001945050505050611a8d565b80603d6000018481548110611a1457fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611a3e57fe5b0217905550866001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e82604051611a7c919061560f565b60405180910390a260009450505050505b92915050565b33611a9c612cb2565b6001600160a01b03161480611ac0575033611ab5612906565b6001600160a01b0316145b611adc5760405162461bcd60e51b81526004016104ae9061571e565b600080611ae8836134e5565b60ff169150915081611b0c5760405162461bcd60e51b81526004016104ae9061579e565b6000603d6000018281548110611b1e57fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611b4957fe5b1480611b6057506003816007811115611b5e57fe5b145b80611b7657506004816007811115611b7457fe5b145b15610697576001603d6000018381548110611b8d57fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611bb757fe5b0217905550836001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e6001604051611bf6919061560f565b60405180910390a250505050565b611c0c613e84565b604080516001808252818301909252606091816020015b611c2b613dfc565b815260200190600190039081611c2357505060408051600180825281830190925291925060609190602080830190803883395050604080516001808252818301909252929350606092915060208083019080388339019050506040805160c08101909152604280546001600160a01b03811683529293509091602083019060ff600160a01b909104166007811115611cbf57fe5b6007811115611cca57fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809091015283518490600090611d0c57fe5b6020026020010181905250600082600081518110611d2657fe5b60200260200101906001600160a01b031690816001600160a01b031681525050600081600081518110611d5557fe5b60ff90921660209283029190910182015260408051608081018252600081529182019490945292830191909152606082015290505b95945050505050565b603b546001600160a01b031681565b611daa612906565b6001600160a01b0316336001600160a01b031614611dda5760405162461bcd60e51b81526004016104ae9061572e565b600080611de6836134e5565b60ff169150915081611e0a5760405162461bcd60e51b81526004016104ae9061579e565b6000603d6000018281548110611e1c57fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611e4757fe5b1480611e5e57506003816007811115611e5c57fe5b145b611e7a5760405162461bcd60e51b81526004016104ae906156ee565b5050603e805462ff00001916620100001790555050565b33611e9a612cb2565b6001600160a01b03161480611ebe575033611eb3612906565b6001600160a01b0316145b611eda5760405162461bcd60e51b81526004016104ae9061571e565b600080611ee6846134e5565b9150915081611f075760405162461bcd60e51b81526004016104ae9061584e565b82603d6000018260ff1681548110611f1b57fe5b600091825260209091206004909102018054911515600160a81b0260ff60a81b19909216919091179055821561209e576000846001600160a01b03166370a0823160418460ff1681548110611f6c57fe5b6000918252602090912001546040516001600160e01b031960e084901b168152611fa2916001600160a01b031690600401615469565b60206040518083038186803b158015611fba57600080fd5b505afa158015611fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ff2919081019061440d565b9050801561209c5760418260ff168154811061200a57fe5b6000918252602090912001546040516307dba22560e31b81526001600160a01b0390911690633edd11289061204890889085906001906004016154fd565b602060405180830381600087803b15801561206257600080fd5b505af1158015612076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061209a919081019061440d565b505b505b836001600160a01b03167ff1d30c51cc85d5f31324e582df608abdbb328479127c2d9c7e70666cbc611c7c84604051611bf6919061558b565b60006120e1613e35565b604080516101208101909152604280546001600160a01b03811660608401908152839290916080840190600160a01b900460ff16600781111561212057fe5b600781111561212b57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160006001600160a01b03168152602001600060ff16815250905060009150935093915050565b61219b613eae565b603b54600160a01b900460ff16156121c55760405162461bcd60e51b81526004016104ae9061574e565b603e54610100900460ff16156121ed5760405162461bcd60e51b81526004016104ae906156ae565b603e5462010000900460ff16156122165760405162461bcd60e51b81526004016104ae906157ee565b60608060606122578686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506136d092505050565b9250925092506040518060a00160405280600115158152602001603d600001805480602002602001604051908101604052809291908181526020016000905b8282101561233d5760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660078111156122e657fe5b60078111156122f157fe5b81526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152505081526020019060010190612296565b50505050815260200184815260200182815260200183815250935050505092915050565b600080600061236f846134e5565b91509150816123905760405162461bcd60e51b81526004016104ae9061579e565b60418160ff16815481106123a057fe5b6000918252602090912001546001600160a01b0316949350505050565b6123c5613edf565b60408051603d805460c0602082028401810190945260a083018181529293919284929091849160009085015b828210156124985760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600781111561244157fe5b600781111561244c57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200190600101906123f1565b50505090825250600182015460ff80821660208401526101008204811615156040840152620100009091041615156060820152600290910154608090910152905090565b603c546001600160a01b031633146125065760405162461bcd60e51b81526004016104ae9061564e565b603e5462010000900460ff161561252f5760405162461bcd60e51b81526004016104ae906157ee565b603b54600160a81b900460ff166125585760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b191690558460005b818110156118c8576125da84848381811061258057fe5b90506020020135603d6000018a8a8581811061259857fe5b90506020020160206125ad919081019061442b565b60ff16815481106125ba57fe5b90600052602060002090600402016003015461346690919063ffffffff16565b603d8989848181106125e857fe5b90506020020160206125fd919081019061442b565b60ff168154811061260a57fe5b6000918252602090912060036004909202010155600101612569565b603c546001600160a01b031633146126505760405162461bcd60e51b81526004016104ae9061564e565b603e5462010000900460ff16156126795760405162461bcd60e51b81526004016104ae906157ee565b603b54600160a81b900460ff166126a25760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b19169055603d80546110be91839160ff87169081106125ba57fe5b603e54603f5460ff808316926101008104821692620100009091049091169084565b603c546001600160a01b031681565b600054610100900460ff1680612710575061271061397b565b8061271e575060005460ff16155b61273a5760405162461bcd60e51b81526004016104ae906157ce565b600054610100900460ff16158015612765576000805460ff1961ff0019909116610100171660011790555b61276d613981565b6127768b613996565b6001600160a01b038a1661279c5760405162461bcd60e51b81526004016104ae9061582e565b876127b95760405162461bcd60e51b81526004016104ae9061580e565b603c80546001600160a01b038c166001600160a01b0319909116179055603e805460ff1916600a179055670de0b6b3a7640000603f5560005b888110156128765761286d8a8a8381811061280957fe5b905060200201602061281e9190810190613fad565b89898481811061282a57fe5b905060200201602061283f9190810190613fad565b612847612988565b87878681811061285357fe5b905060200201602061286891908101906143b3565b612990565b506001016127f2565b506128e789898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250600192506131c7915050565b80156128f9576000805461ff00191690555b5050505050505050505050565b603b546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b15801561294b57600080fd5b505afa15801561295f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129839190810190613fcb565b905090565b6305f5e10090565b60006001600160a01b0385166129b85760405162461bcd60e51b81526004016104ae906157ae565b6001600160a01b0384166129de5760405162461bcd60e51b81526004016104ae9061586e565b620f424083101580156129f657506402540be4008311155b612a125760405162461bcd60e51b81526004016104ae906156de565b6000612a1d866134e5565b5090508015612a3e5760405162461bcd60e51b81526004016104ae9061577e565b604051632fa8a91360e11b81526001600160a01b03861690635f51522690612a6a908990600401615469565b602060405180830381600087803b158015612a8457600080fd5b505af1158015612a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612abc919081019061440d565b506000612ac8876139af565b90506000612add60128363ffffffff61349216565b90506000612af587600a84900a63ffffffff613a5616565b603d54603e549192509060ff90811690821610612b245760405162461bcd60e51b81526004016104ae9061575e565b6001600160a01b038a8116600081815260406020818152818320805460ff191660ff88161790556041805460018181018355919094527f7c9785e8241615bc80415d89775984a1337d15dc1bf4ce50f41988b2a2b336a790930180546001600160a01b031916958f1695909517909455805160c08101909152918252603d92820190815289151560208083019190915260408201869052600060608301819052608090920182905283546001810180865594835291819020835160049093020180546001600160a01b0319166001600160a01b03909316929092178083559083015190829060ff60a01b1916600160a01b836007811115612c2157fe5b02179055506040828101518254901515600160a81b0260ff60a81b19909116178255606083015160018301556080830151600283015560a090920151600390910155516001600160a01b038c1691507fc5841a71c957e4395ad5f2efb03673e584498cce9790cce25bf59e92094dbd3090612c9d908c90615469565b60405180910390a29998505050505050505050565b603b546037546040516385acd64160e01b81526000926001600160a01b0316916385acd64191612ce591906004016155f3565b60206040518083038186803b15801561294b57600080fd5b600080612d09836134e5565b9150915081612d2a5760405162461bcd60e51b81526004016104ae9061584e565b603d54612d35613dfc565b603d805460ff8516908110612d4657fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115612d8e57fe5b6007811115612d9957fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809182015281015190915015612df15760405162461bcd60e51b81526004016104ae9061589e565b60a081015115612e135760405162461bcd60e51b81526004016104ae906156be565b600581602001516007811115612e2557fe5b1415612e435760405162461bcd60e51b81526004016104ae9061569e565b6000612e5683600163ffffffff61349216565b90508060ff168460ff161415612efb57603d805480612e7157fe5b6000828152602080822060046000199094019384020180546001600160b01b03191681556001810183905560028101839055600301829055919092556001600160a01b03881682526040908190529020805460ff191690556041805480612ed457fe5b600082815260209020810160001990810180546001600160a01b0319169055019055613188565b603d805460ff8316908110612f0c57fe5b9060005260206000209060040201603d6000018560ff1681548110612f2d57fe5b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b0390921691909117808255825460ff600160a01b918290041691839160ff60a01b1990911690836007811115612f8457fe5b02179055508154815460ff60a81b1916600160a81b9182900460ff1615159091021781556001808301549082015560028083015490820155600391820154910155603d805480612fd057fe5b60008281526020812060046000199093019283020180546001600160b01b0319168155600181018290556002810182905560030155905561300f613dfc565b603d805460ff871690811061302057fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561306857fe5b600781111561307357fe5b81528154600160a81b900460ff90811615156020808401919091526001840154604080850191909152600285015460608501526003909401546080909301929092526001600160a01b038b8116600090815292849052838320805460ff199081169091558551909116835292909120805490921688821617909155604180549293509190841690811061310257fe5b600091825260209091200154604180546001600160a01b039092169160ff881690811061312b57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604180548061316457fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505b81516040516001600160a01b03909116907f1e5281bbecf5c15104f9e35265dbe738c1cd2597613cbf4a0a51713448bc13b990600090a2505050505050565b8251806131e65760405162461bcd60e51b81526004016104ae9061566e565b825181146132065760405162461bcd60e51b81526004016104ae906157fe565b60005b818110156133465760008061323087848151811061322357fe5b60200260200101516134e5565b91509150816132515760405162461bcd60e51b81526004016104ae9061579e565b613259613dfc565b61326282613563565b9050600087858151811061327257fe5b602002602001015190506001600781111561328957fe5b8260200151600781111561329957fe5b14156132f557670de0b6b3a76400008111156132c75760405162461bcd60e51b81526004016104ae9061568e565b80603d6000018460ff16815481106132db57fe5b906000526020600020906004020160020181905550613336565b603d805460ff851690811061330657fe5b90600052602060002090600402016002015481146133365760405162461bcd60e51b81526004016104ae906157be565b5050600190920191506132099050565b508161335457613354613a90565b7fbe2adf2902216365c5c656d48909da65fad401f809e4351cdbcfcac40674566984846040516116ed929190615546565b60606000603d600001805480602002602001604051908101604052809291908181526020016000905b828210156134555760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660078111156133fe57fe5b600781111561340957fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200190600101906133ae565b5050603d5492959294509192505050565b60008282018381101561348b5760405162461bcd60e51b81526004016104ae9061567e565b9392505050565b600061348b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613b1e565b600061348b83836305f5e100613b4a565b6001600160a01b03811660009081526040602081905281205460ff168061355957603d546135185750600090508061355e565b826001600160a01b0316603d60000160008154811061353357fe5b600091825260208220600490910201546001600160a01b0316919091149250905061355e565b600191505b915091565b61356b613dfc565b603d805460ff841690811061357c57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b9091041660078111156135c457fe5b60078111156135cf57fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809091015292915050565b60405161366390849063a9059cbb60e01b9061362c90869086906024016154e2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613b6f565b505050565b600061348b8383670de0b6b3a7640000613b4a565b6000600582600781111561368d57fe5b14806136a4575060068260078111156136a257fe5b145b806136ba575060078260078111156136b857fe5b145b156136c7575060016136cb565b5060005b919050565b60608060606000845190508060ff1660405190808252806020026020018201604052801561371857816020015b613705613dfc565b8152602001906001900390816136fd5790505b5093508060ff16604051908082528060200260200182016040528015613748578160200160208202803883390190505b5091508060ff16604051908082528060200260200182016040528015613778578160200160208202803883390190505b50925060005b8160ff168160ff161015613972576000868260ff168151811061379d57fe5b6020026020010151905060008260010190505b8360ff168160ff16101561380e57878160ff16815181106137cd57fe5b60200260200101516001600160a01b0316826001600160a01b031614156138065760405162461bcd60e51b81526004016104ae906157de565b6001016137b0565b5060008061381b836134e5565b915091508161383c5760405162461bcd60e51b81526004016104ae9061579e565b80878560ff168151811061384c57fe5b60ff9283166020918202929092010152603d80549091831690811061386d57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b9091041660078111156138b557fe5b60078111156138c057fe5b8152815460ff600160a81b909104811615156020830152600183015460408301526002830154606083015260039092015460809091015289518a91871690811061390657fe5b602002602001018190525060418160ff168154811061392157fe5b9060005260206000200160009054906101000a90046001600160a01b0316868560ff168151811061394e57fe5b6001600160a01b03929092166020928302919091019091015250505060010161377e565b50509193909250565b303b1590565b603b805460ff60a81b1916600160a81b179055565b61399f81613c54565b50603b805460ff60a01b19169055565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156139eb57600080fd5b505afa1580156139ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a239190810190614449565b60ff16905060048110158015613a3a575060128111155b611a8d5760405162461bcd60e51b81526004016104ae9061576e565b600082613a6557506000611a8d565b82820282848281613a7257fe5b041461348b5760405162461bcd60e51b81526004016104ae9061578e565b603d546000805b82811015613add57613ad3603d6000018281548110613ab257fe5b9060005260206000209060040201600201548361346690919063ffffffff16565b9150600101613a97565b50670de0b6b3a76400008110158015613afe5750673782dace9d9000008111155b613b1a5760405162461bcd60e51b81526004016104ae9061587e565b5050565b60008184841115613b425760405162461bcd60e51b81526004016104ae919061561d565b505050900390565b600080613b5d858563ffffffff613a5616565b9050611d8a818463ffffffff613c9d16565b613b81826001600160a01b0316613cdf565b613b9d5760405162461bcd60e51b81526004016104ae9061588e565b60006060836001600160a01b031683604051613bb99190615405565b6000604051808303816000865af19150503d8060008114613bf6576040519150601f19603f3d011682016040523d82523d6000602084013e613bfb565b606091505b509150915081613c1d5760405162461bcd60e51b81526004016104ae906156ce565b8051156106975780806020019051613c3891908101906143d1565b6106975760405162461bcd60e51b81526004016104ae9061581e565b6001600160a01b038116613c7a5760405162461bcd60e51b81526004016104ae9061562e565b603b80546001600160a01b0319166001600160a01b0383161790556105c6613d18565b600061348b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613dc5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061051b575050151592915050565b604051613d2490615448565b604051908190038120603355613d399061541c565b604051908190038120603455613d4e90615453565b604051908190038120603555613d639061543d565b604051908190038120603655613d7890615432565b604051908190038120603755613d8d90615427565b604051908190038120603855613da29061545e565b604051908190038120603955613db790615411565b604051908190039020603a55565b60008183613de65760405162461bcd60e51b81526004016104ae919061561d565b506000838581613df257fe5b0495945050505050565b6040805160c081019091526000808252602082019081526020016000151581526020016000815260200160008152602001600081525090565b6040518060600160405280613e48613dfc565b815260006020820181905260409091015290565b6040518060800160405280600081526020016060815260200160608152602001606081525090565b60405180608001604052806000151581526020016060815260200160608152602001606081525090565b6040518060a00160405280600015158152602001606081526020016060815260200160608152602001606081525090565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b8035611a8d81615a11565b8051611a8d81615a11565b60008083601f840112613f3557600080fd5b5081356001600160401b03811115613f4c57600080fd5b602083019150836020820283011115613f6457600080fd5b9250929050565b8035611a8d81615a25565b8051611a8d81615a25565b8035611a8d81615a2e565b8051611a8d81615a2e565b8035611a8d81615a37565b8051611a8d81615a37565b600060208284031215613fbf57600080fd5b600061051b8484613f0d565b600060208284031215613fdd57600080fd5b600061051b8484613f18565b60008060008060008060008060008060c08b8d03121561400857600080fd5b60006140148d8d613f0d565b9a505060206140258d828e01613f0d565b99505060408b01356001600160401b0381111561404157600080fd5b61404d8d828e01613f23565b985098505060608b01356001600160401b0381111561406b57600080fd5b6140778d828e01613f23565b965096505060808b01356001600160401b0381111561409557600080fd5b6140a18d828e01613f23565b945094505060a08b01356001600160401b038111156140bf57600080fd5b6140cb8d828e01613f23565b92509250509295989b9194979a5092959850565b6000806000606084860312156140f457600080fd5b60006141008686613f0d565b935050602061411186828701613f0d565b925050604061412286828701613f6b565b9150509250925092565b6000806040838503121561413f57600080fd5b600061414b8585613f0d565b925050602061415c85828601613f6b565b9150509250929050565b60008060006060848603121561417b57600080fd5b60006141878686613f0d565b935050602061411186828701613f81565b600080602083850312156141ab57600080fd5b82356001600160401b038111156141c157600080fd5b6141cd85828601613f23565b92509250509250929050565b6000806000604084860312156141ee57600080fd5b83356001600160401b0381111561420457600080fd5b61421086828701613f23565b9350935050602061412286828701613f0d565b6000806000806040858703121561423957600080fd5b84356001600160401b0381111561424f57600080fd5b61425b87828801613f23565b945094505060208501356001600160401b0381111561427957600080fd5b61428587828801613f23565b95989497509550505050565b6000806000806000606086880312156142a957600080fd5b85356001600160401b038111156142bf57600080fd5b6142cb88828901613f23565b955095505060208601356001600160401b038111156142e957600080fd5b6142f588828901613f23565b9350935050604061430888828901613f6b565b9150509295509295909350565b6000806000806000806060878903121561432e57600080fd5b86356001600160401b0381111561434457600080fd5b61435089828a01613f23565b965096505060208701356001600160401b0381111561436e57600080fd5b61437a89828a01613f23565b945094505060408701356001600160401b0381111561439857600080fd5b6143a489828a01613f23565b92509250509295509295509295565b6000602082840312156143c557600080fd5b600061051b8484613f6b565b6000602082840312156143e357600080fd5b600061051b8484613f76565b60006020828403121561440157600080fd5b600061051b8484613f81565b60006020828403121561441f57600080fd5b600061051b8484613f8c565b60006020828403121561443d57600080fd5b600061051b8484613f97565b60006020828403121561445b57600080fd5b600061051b8484613fa2565b60008060006060848603121561447c57600080fd5b60006144888686613f97565b935050602061449986828701613f0d565b925050604061412286828701613f81565b60006144b683836144f9565b505060200190565b60006144ca838361529e565b505060c00190565b60006144b68383614737565b60006144b683836153fc565b6144f3816159b4565b82525050565b6144f381615988565b600061450e8385615970565b935061451982615963565b8060005b8581101561454f5761452f8284615979565b61453988826144aa565b975061454483615966565b92505060010161451d565b509495945050505050565b60006145658261596c565b61456f8185615970565b935061457a83615966565b8060005b8381101561454f57815161459288826144aa565b975061459d83615966565b92505060010161457e565b60006145b38261596c565b6145bd8185615970565b93506145c883615966565b8060005b8381101561454f5781516145e088826144aa565b97506145eb83615966565b9250506001016145cc565b60006146018261596c565b61460b8185615970565b935061461683615966565b8060005b8381101561454f57815161462e88826144be565b975061463983615966565b92505060010161461a565b600061464f8261596c565b6146598185615970565b935061466483615966565b8060005b8381101561454f57815161467c88826144be565b975061468783615966565b925050600101614668565b600061469d8261596c565b6146a78185615970565b93506146b283615966565b8060005b8381101561454f5781516146ca88826144d2565b97506146d583615966565b9250506001016146b6565b60006146eb8261596c565b6146f58185615970565b935061470083615966565b8060005b8381101561454f57815161471888826144de565b975061472383615966565b925050600101614704565b6144f381615993565b6144f381615963565b600061474b8261596c565b61475581856136cb565b93506147658185602086016159d1565b9290920192915050565b6144f3816159bb565b6144f3816159c6565b600061478c8261596c565b6147968185615970565b93506147a68185602086016159d1565b6147af816159fd565b9093019392505050565b60006147c6601583615970565b744e657875732061646472657373206973207a65726f60581b815260200192915050565b60006147f7601483615970565b7314185d5cd8589b194e881b9bdd081c185d5cd95960621b815260200192915050565b6000614827601583615970565b7409aeae6e840c4ca40c6c2d8d8cac840c4f240da92f605b1b815260200192915050565b6000614858600e836136cb565b6d29b0bb34b733b9a6b0b730b3b2b960911b8152600e0192915050565b6000614882601983615970565b7f4d757374206d69677261746520736f6d65206241737365747300000000000000815260200192915050565b60006148bb601a83615970565b7f456d707479206241737365747320617272617920706173736564000000000000815260200192915050565b60006148f46007836136cb565b665374616b696e6760c81b815260070192915050565b6000614917601b83615970565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000614950601c83615970565b7f417373657420776569676874206d757374206265203c3d203130302500000000815260200192915050565b6000614989601583615970565b74624173736574206d7573742062652061637469766560581b815260200192915050565b60006149ba602283615970565b7f4e6f20624173736574732063616e20626520756e646572676f696e67207265638152611bdb60f21b602082015260400192915050565b60006149fe601a83615970565b7f624173736574207661756c74206d75737420626520656d707479000000000000815260200192915050565b6000614a376010836136cb565b6f2932b1b7b63630ba32b930b634b9b2b960811b815260100192915050565b6000614a63602083615970565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000614a9c600f83615970565b6e4d4d206f7574206f662072616e676560881b815260200192915050565b6000614ac7601783615970565b7f624173736574206d757374206265206166666563746564000000000000000000815260200192915050565b6000614b00601b83615970565b7f624173736574206d75737420657869737420696e204261736b65740000000000815260200192915050565b6000614b39601983615970565b7f4d757374207472616e736665722066756c6c20616d6f756e7400000000000000815260200192915050565b6000614b72601b83615970565b7f4d757374206265206d616e61676572206f7220676f7665726e6f720000000000815260200192915050565b6000614bab601983615970565b7f4f6e6c7920676f7665726e6f722063616e206578656375746500000000000000815260200192915050565b6000614be4602483615970565b7f43616e6e6f74206d6967726174652062417373657473207769746820786665728152632066656560e01b602082015260400192915050565b6000614c2a601083615970565b6f14185d5cd8589b194e881c185d5cd95960821b815260200192915050565b6000614c566007836136cb565b6626b0b730b3b2b960c91b815260070192915050565b6000614c79601583615970565b7413585e0818905cdcd95d1cc81a5b8810985cdad95d605a1b815260200192915050565b6000614caa602983615970565b7f546f6b656e206d75737420686176652073756666696369656e7420646563696d815268616c20706c6163657360b81b602082015260400192915050565b6000614cf5601f83615970565b7f62417373657420616c72656164792065786973747320696e204261736b657400815260200192915050565b6000614d2e6009836136cb565b6827b930b1b632a43ab160b91b815260090192915050565b6000614d53602183615970565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614d96601183615970565b7018905cdcd95d081b5d5cdd08195e1a5cdd607a1b815260200192915050565b6000614dc3600a836136cb565b69476f7665726e616e636560b01b8152600a0192915050565b6000614de9601c83615970565b7f6241737365742061646472657373206d7573742062652076616c696400000000815260200192915050565b6000614e22600a836136cb565b69283937bc3ca0b236b4b760b11b8152600a0192915050565b6000614e48601f83615970565b7f41666665637465642062417373657473206d7573742062652073746174696300815260200192915050565b6000614e81602e83615970565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614ed1601783615970565b7f4d7573742068617665206e6f206475706c696361746573000000000000000000815260200192915050565b6000614f0a601483615970565b734261736b6574206d75737420626520616c69766560601b815260200192915050565b6000614f3a601e83615970565b7f4d757374206265206d61746368696e6720624173736574206172726179730000815260200192915050565b6000614f73602183615970565b7f4d75737420696e697469616c697365207769746820736f6d65206241737365748152607360f81b602082015260400192915050565b6000614fb6602a83615970565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000615002601383615970565b726d49782061646472657373206973207a65726f60681b815260200192915050565b6000615031601f83615970565b7f4d757374207472616e7366657220746f206e657720696e7465677261746f7200815260200192915050565b600061506a601583615970565b7418905cdcd95d08191bd95cc81b9bdd08195e1a5cdd605a1b815260200192915050565b600061509b601f83615970565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b60006150d4602183615970565b7f496e746567726174696f6e2061646472657373206d7573742062652076616c698152601960fa1b602082015260400192915050565b6000615117602783615970565b7f4261736b657420776569676874206d757374206265203e3d20313030202626208152663c3d203430302560c81b602082015260400192915050565b60006151606009836136cb565b682134b6322a37b5b2b760b91b815260090192915050565b6000615185601f83615970565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b60006151be602583615970565b7f624173736574206d7573742068617665206120746172676574207765696768748152640206f6620360dc1b602082015260400192915050565b805160a0808452600091908401906152108282614644565b915050602083015161522560208601826153fc565b506040830151615238604086018261472e565b50606083015161524b606086018261472e565b50608083015161525e6080860182614737565b509392505050565b8051610100830190615278848261529e565b50602082015161528b60c08501826144f9565b50604082015161069760e08501826153fc565b805160c08301906152af84826144f9565b5060208201516152c26020850182614778565b5060408201516152d5604085018261472e565b5060608201516152e86060850182614737565b5060808201516152fb6080850182614737565b5060a082015161069760a0850182614737565b80516000906080840190615322858261472e565b506020830151848203602086015261533a8282614644565b9150506040830151848203604086015261535482826145a8565b91505060608301518482036060860152611d8a82826146e0565b805160009060808401906153228582614737565b805160009060a0840190615396858261472e565b50602083015184820360208601526153ae8282614644565b915050604083015184820360408601526153c88282614644565b915050606083015184820360608601526153e282826145a8565b91505060808301518482036080860152611d8a82826146e0565b6144f3816159ae565b600061348b8284614740565b6000611a8d8261484b565b6000611a8d826148e7565b6000611a8d82614a2a565b6000611a8d82614c49565b6000611a8d82614d21565b6000611a8d82614db6565b6000611a8d82614e15565b6000611a8d82615153565b60208101611a8d82846144f9565b60208101611a8d82846144ea565b6060810161549382866144f9565b6154a060208301856144f9565b61051b6040830184614737565b608081016154bb82876144f9565b6154c860208301866144f9565b6154d56040830185614737565b611d8a606083018461472e565b604081016154f082856144f9565b61348b6020830184614737565b6060810161550b82866144f9565b6155186020830185614737565b61051b604083018461472e565b60408082528101615537818587614502565b905061051b60208301846144f9565b60408082528101615557818561455a565b9050818103602083015261051b8184614692565b6040808252810161557c81856145f6565b905061348b6020830184614737565b60208101611a8d828461472e565b61024081016155a8828761472e565b81810360208301526155ba8186614781565b90506155c96040830185615266565b611d8a610140830184615266565b61012081016155e6828561472e565b61348b6020830184615266565b60208101611a8d8284614737565b60208101611a8d828461476f565b60208101611a8d8284614778565b6020808252810161348b8184614781565b60208082528101611a8d816147b9565b60208082528101611a8d816147ea565b60208082528101611a8d8161481a565b60208082528101611a8d81614875565b60208082528101611a8d816148ae565b60208082528101611a8d8161490a565b60208082528101611a8d81614943565b60208082528101611a8d8161497c565b60208082528101611a8d816149ad565b60208082528101611a8d816149f1565b60208082528101611a8d81614a56565b60208082528101611a8d81614a8f565b60208082528101611a8d81614aba565b60208082528101611a8d81614af3565b60208082528101611a8d81614b2c565b60208082528101611a8d81614b65565b60208082528101611a8d81614b9e565b60208082528101611a8d81614bd7565b60208082528101611a8d81614c1d565b60208082528101611a8d81614c6c565b60208082528101611a8d81614c9d565b60208082528101611a8d81614ce8565b60208082528101611a8d81614d46565b60208082528101611a8d81614d89565b60208082528101611a8d81614ddc565b60208082528101611a8d81614e3b565b60208082528101611a8d81614e74565b60208082528101611a8d81614ec4565b60208082528101611a8d81614efd565b60208082528101611a8d81614f2d565b60208082528101611a8d81614f66565b60208082528101611a8d81614fa9565b60208082528101611a8d81614ff5565b60208082528101611a8d81615024565b60208082528101611a8d8161505d565b60208082528101611a8d8161508e565b60208082528101611a8d816150c7565b60208082528101611a8d8161510a565b60208082528101611a8d81615178565b60208082528101611a8d816151b1565b6020808252810161348b81846151f8565b60c08101611a8d828461529e565b6020808252810161348b818461530e565b6020808252810161348b818461536e565b6020808252810161348b8184615382565b6040810161590e8285614737565b818103602083015261051b8184614692565b60208101611a8d82846153fc565b6080810161593c82876153fc565b615949602083018661472e565b615956604083018561472e565b611d8a6060830184614737565b90565b60200190565b5190565b90815260200190565b600061348b6020840184613f0d565b6000611a8d826159a2565b151590565b806136cb81615a07565b6001600160a01b031690565b60ff1690565b6000611a8d825b6000611a8d82615988565b6000611a8d82615998565b60005b838110156159ec5781810151838201526020016159d4565b838111156106975750506000910152565b601f01601f191690565b600881106105c657fe5b615a1a81615988565b81146105c657600080fd5b615a1a81615993565b615a1a81615963565b615a1a816159ae56fea365627a7a723158209d3ffd689f05a6f336fd6dccfbfb012957c39c575599d9e1ee49afc803038d4d6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101d95760003560e01c8063905e891411610104578063c0e46a2f116100a2578063dc686c8c11610071578063dc686c8c1461042e578063edc832b314610441578063f8085f1014610459578063fc94058e14610461576101d9565b8063c0e46a2f146103d3578063c4a80a2a146103f3578063cd6ef2b014610406578063d5e1d2791461041b576101d9565b8063a3f5c1d2116100de578063a3f5c1d214610377578063a59824c51461038c578063bdfbe29c1461039f578063bf9ca02d146103b2576101d9565b8063905e891414610331578063969642b9146103445780639d01cd3514610357576101d9565b80633f4ba83a1161017c5780636fb3e89c1161014b5780636fb3e89c146102e3578063790bde32146102f65780638456cb591461031657806388a90f511461031e576101d9565b80633f4ba83a1461029e57806343ae78be146102a65780635c975abb146102bb5780635d16cf42146102d0576101d9565b80631d3ce398116101b85780631d3ce3981461022f5780632a2fab22146102455780632bf596cf1461025b5780633e37bcbc1461027e576101d9565b80629e328b146101de57806309f2a983146102075780630b2d85011461021c575b600080fd5b6101f16101ec3660046140df565b610474565b6040516101fe9190615920565b60405180910390f35b61021a610215366004613fad565b610523565b005b61021a61022a366004614223565b6105c9565b61023761069d565b6040516101fe92919061556b565b61024d6106b1565b6040516101fe929190615900565b61026e6102693660046140df565b610a23565b6040516101fe9493929190615599565b61029161028c366004613fad565b610dab565b6040516101fe91906158bf565b61021a610de9565b6102ae610e91565b6040516101fe91906158de565b6102c3611017565b6040516101fe919061558b565b61021a6102de366004614467565b611027565b61021a6102f13660046141d9565b6110fb565b6103096103043660046143ef565b6116fb565b6040516101fe9190615469565b61021a611722565b61021a61032c366004614315565b6117c7565b6102c361033f36600461412c565b6118e5565b61021a610352366004613fad565b611a93565b61036a610365366004614291565b611c04565b6040516101fe91906158cd565b61037f611d93565b6040516101fe9190615601565b61021a61039a366004613fad565b611da2565b61021a6103ad36600461412c565b611e91565b6103c56103c0366004614166565b6120d7565b6040516101fe9291906155d7565b6103e66103e1366004614198565b612193565b6040516101fe91906158ef565b610309610401366004613fad565b612361565b61040e6123bd565b6040516101fe91906158ae565b61021a610429366004614315565b6124dc565b61021a61043c366004614467565b612626565b6104496126c6565b6040516101fe949392919061592e565b6103096126e8565b61021a61046f366004613fe9565b6126f7565b600061047e612906565b6001600160a01b0316336001600160a01b0316146104b75760405162461bcd60e51b81526004016104ae9061572e565b60405180910390fd5b603e5462010000900460ff16156104e05760405162461bcd60e51b81526004016104ae906157ee565b603e54610100900460ff16156105085760405162461bcd60e51b81526004016104ae906156ae565b61051b8484610515612988565b85612990565b949350505050565b603e5462010000900460ff161561054c5760405162461bcd60e51b81526004016104ae906157ee565b603e54610100900460ff16156105745760405162461bcd60e51b81526004016104ae906156ae565b3361057d612cb2565b6001600160a01b031614806105a1575033610596612906565b6001600160a01b0316145b6105bd5760405162461bcd60e51b81526004016104ae9061571e565b6105c681612cfd565b50565b6105d1612906565b6001600160a01b0316336001600160a01b0316146106015760405162461bcd60e51b81526004016104ae9061572e565b603e5462010000900460ff161561062a5760405162461bcd60e51b81526004016104ae906157ee565b61069784848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092018290525092506131c7915050565b50505050565b606060006106a9613385565b915091509091565b603c546000906060906001600160a01b031633146106e15760405162461bcd60e51b81526004016104ae9061564e565b603b54600160a01b900460ff161561070b5760405162461bcd60e51b81526004016104ae9061574e565b603e5462010000900460ff16156107345760405162461bcd60e51b81526004016104ae906157ee565b603b54600160a81b900460ff1661075d5760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b1916905560606000610776613385565b91509150806040519080825280602002602001820160405280156107a4578160200160208202803883390190505b50600094509250835b818160ff161015610a09576107c0613dfc565b838260ff16815181106107cf57fe5b60200260200101519050600081600001519050600060418460ff16815481106107f457fe5b6000918252602082200154604051632fa8a91360e11b81526001600160a01b0390911692508290635f5152269061082f908690600401615469565b602060405180830381600087803b15801561084957600080fd5b505af115801561085d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610881919081019061440d565b604085015190915060009061090f576040516370a0823160e01b81526001600160a01b038516906370a08231906108bc908690600401615469565b60206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061090c919081019061440d565b90505b6000610921838363ffffffff61346616565b60a08701519091508082118015610947575060018760200151600781111561094557fe5b145b156109d85781603d6000018960ff168154811061096057fe5b60009182526020822060036004909202010191909155610986838363ffffffff61349216565b9050808c8a60ff168151811061099857fe5b60200260200101818152505060006109bd8960600151836134d490919063ffffffff16565b90506109cf8e8263ffffffff61346616565b9d5050506109f6565b60008b8960ff16815181106109e957fe5b6020026020010181815250505b5050600190950194506107ad9350505050565b5050603b805460ff60a81b1916600160a81b179055509091565b60006060610a2f613e35565b610a37613e35565b603b54600160a01b900460ff1615610a615760405162461bcd60e51b81526004016104ae9061574e565b610a69613e35565b610a71613e35565b603e5462010000900460ff1680610a8f5750603e54610100900460ff165b15610ad85760408051808201909152601b81527f4261736b657420697320756e646572676f696e67206368616e6765000000000060208201526000965094509092509050610da2565b600080610ae48b6134e5565b9150915081610b3357505060408051808201909152601a81527f496e70757420617373657420646f6573206e6f7420657869737400000000000060208201526000965094509092509050610da2565b6040518060600160405280603d6000018360ff1681548110610b5157fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610b9957fe5b6007811115610ba457fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610bf657fe5b600091825260209182902001546001600160a01b0316825260ff841691015293508815610c3e5750506040805160208101909152600081526001965094509092509050610da2565b600080610c4a8c6134e5565b9150915081610c9d57505060408051808201909152601b81527f4f757470757420617373657420646f6573206e6f7420657869737400000000006020820152600098509650929450909250610da2915050565b6040518060600160405280603d6000018360ff1681548110610cbb57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610d0357fe5b6007811115610d0e57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610d6057fe5b60009182526020808320909101546001600160a01b0316835260ff90941691840191909152604080519384019052825260019a50909850949650939450505050505b93509350935093565b610db3613dfc565b600080610dbf846134e5565b9150915081610de05760405162461bcd60e51b81526004016104ae9061579e565b61051b81613563565b610df1612906565b6001600160a01b0316336001600160a01b031614610e215760405162461bcd60e51b81526004016104ae9061572e565b603b54600160a01b900460ff16610e4a5760405162461bcd60e51b81526004016104ae9061563e565b603b805460ff60a01b191690556040517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90610e87903390615477565b60405180910390a1565b610e99613e5c565b603b54600160a01b900460ff1615610ec35760405162461bcd60e51b81526004016104ae9061574e565b603e54610100900460ff1615610eeb5760405162461bcd60e51b81526004016104ae906156ae565b60606000610ef7613385565b91509150606081604051908082528060200260200182016040528015610f27578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610f56578160200160208202803883390190505b50905060005b838160ff161015610fee5760418160ff1681548110610f7757fe5b9060005260206000200160009054906101000a90046001600160a01b0316838260ff1681518110610fa457fe5b60200260200101906001600160a01b031690816001600160a01b03168152505080828260ff1681518110610fd457fe5b60ff90921660209283029190910190910152600101610f5c565b5060408051608081018252603f5481526020810195909552840191909152606083015250919050565b603b54600160a01b900460ff1690565b603c546001600160a01b031633146110515760405162461bcd60e51b81526004016104ae9061564e565b603b54600160a81b900460ff1661107a5760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b19169055603d80546110be91839160ff871690811061109e57fe5b90600052602060002090600402016003015461349290919063ffffffff16565b603d805460ff86169081106110cf57fe5b60009182526020909120600360049092020101555050603b805460ff60a81b1916600160a81b17905550565b611103612906565b6001600160a01b0316336001600160a01b0316146111335760405162461bcd60e51b81526004016104ae9061572e565b81806111515760405162461bcd60e51b81526004016104ae9061565e565b60005b818110156116b957600085858381811061116a57fe5b905060200201602061117f9190810190613fad565b905060008061118d836134e5565b91509150816111ae5760405162461bcd60e51b81526004016104ae9061584e565b603d805460ff83169081106111bf57fe5b6000918252602090912060049091020154600160a81b900460ff16156111f75760405162461bcd60e51b81526004016104ae9061573e565b600060418260ff168154811061120957fe5b6000918252602090912001546001600160a01b03908116915087168114156112435760405162461bcd60e51b81526004016104ae9061583e565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190611272908590600401615469565b60206040518083038186803b15801561128a57600080fd5b505afa15801561129e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112c2919081019061440d565b90506000826001600160a01b0316635f515226876040518263ffffffff1660e01b81526004016112f29190615469565b602060405180830381600087803b15801561130c57600080fd5b505af1158015611320573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611344919081019061440d565b905080156113b25760405163934785b760e01b81526001600160a01b0384169063934785b79061137f9030908a9086906000906004016154ad565b600060405180830381600087803b15801561139957600080fd5b505af11580156113ad573d6000803e3d6000fd5b505050505b811561141b5760405163a4e2859560e01b81526001600160a01b0384169063a4e28595906113e89030908a908790600401615485565b600060405180830381600087803b15801561140257600080fd5b505af1158015611416573d6000803e3d6000fd5b505050505b600061142d828463ffffffff61346616565b90508960418660ff168154811061144057fe5b600091825260209091200180546001600160a01b0319166001600160a01b039283161790556114729088168b8361360a565b6040516307dba22560e31b81528a906001600160a01b03821690633edd1128906114a5908b9087906000906004016154fd565b602060405180830381600087803b1580156114bf57600080fd5b505af11580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114f7919081019061440d565b50604051632fa8a91360e11b81526000906001600160a01b03831690635f51522690611527908c90600401615469565b602060405180830381600087803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611579919081019061440d565b90506000896001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016115a99190615469565b60206040518083038186803b1580156115c157600080fd5b505afa1580156115d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115f9919081019061440d565b9050670de111a6b7de4000670de05bc096e9c00061161d878263ffffffff61366816565b841015801561163b5750611637878363ffffffff61366816565b8411155b6116575760405162461bcd60e51b81526004016104ae9061570e565b611667888263ffffffff61366816565b83101580156116855750611681888363ffffffff61366816565b8311155b6116a15760405162461bcd60e51b81526004016104ae9061570e565b50506001909a01995061115498505050505050505050565b507f407ca8e939a25b34f290fb7f4d3b0d85d03f13313dc34a6a15bbd91492cfa2498484846040516116ed93929190615525565b60405180910390a150505050565b6041818154811061170857fe5b6000918252602090912001546001600160a01b0316905081565b61172a612906565b6001600160a01b0316336001600160a01b03161461175a5760405162461bcd60e51b81526004016104ae9061572e565b603b54600160a01b900460ff16156117845760405162461bcd60e51b81526004016104ae9061574e565b603b805460ff60a01b1916600160a01b1790556040517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890610e87903390615477565b603c546001600160a01b031633146117f15760405162461bcd60e51b81526004016104ae9061564e565b603b54600160a81b900460ff1661181a5760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b191690558460005b818110156118c85761187c84848381811061184257fe5b90506020020135603d6000018a8a8581811061185a57fe5b905060200201602061186f919081019061442b565b60ff168154811061109e57fe5b603d89898481811061188a57fe5b905060200201602061189f919081019061442b565b60ff16815481106118ac57fe5b600091825260209091206003600490920201015560010161182b565b5050603b805460ff60a81b1916600160a81b179055505050505050565b6000336118f0612cb2565b6001600160a01b03161480611914575033611909612906565b6001600160a01b0316145b6119305760405162461bcd60e51b81526004016104ae9061571e565b603e5462010000900460ff16156119595760405162461bcd60e51b81526004016104ae906157ee565b600080611965856134e5565b60ff1691509150816119895760405162461bcd60e51b81526004016104ae906156fe565b6000603d600001828154811061199b57fe5b6000918252602082206004909102015460ff600160a01b909104169150856119c45760036119c7565b60025b90508060078111156119d557fe5b8260078111156119e157fe5b14806119f157506119f18261367d565b15611a03576001945050505050611a8d565b80603d6000018481548110611a1457fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611a3e57fe5b0217905550866001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e82604051611a7c919061560f565b60405180910390a260009450505050505b92915050565b33611a9c612cb2565b6001600160a01b03161480611ac0575033611ab5612906565b6001600160a01b0316145b611adc5760405162461bcd60e51b81526004016104ae9061571e565b600080611ae8836134e5565b60ff169150915081611b0c5760405162461bcd60e51b81526004016104ae9061579e565b6000603d6000018281548110611b1e57fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611b4957fe5b1480611b6057506003816007811115611b5e57fe5b145b80611b7657506004816007811115611b7457fe5b145b15610697576001603d6000018381548110611b8d57fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611bb757fe5b0217905550836001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e6001604051611bf6919061560f565b60405180910390a250505050565b611c0c613e84565b604080516001808252818301909252606091816020015b611c2b613dfc565b815260200190600190039081611c2357505060408051600180825281830190925291925060609190602080830190803883395050604080516001808252818301909252929350606092915060208083019080388339019050506040805160c08101909152604280546001600160a01b03811683529293509091602083019060ff600160a01b909104166007811115611cbf57fe5b6007811115611cca57fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809091015283518490600090611d0c57fe5b6020026020010181905250600082600081518110611d2657fe5b60200260200101906001600160a01b031690816001600160a01b031681525050600081600081518110611d5557fe5b60ff90921660209283029190910182015260408051608081018252600081529182019490945292830191909152606082015290505b95945050505050565b603b546001600160a01b031681565b611daa612906565b6001600160a01b0316336001600160a01b031614611dda5760405162461bcd60e51b81526004016104ae9061572e565b600080611de6836134e5565b60ff169150915081611e0a5760405162461bcd60e51b81526004016104ae9061579e565b6000603d6000018281548110611e1c57fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611e4757fe5b1480611e5e57506003816007811115611e5c57fe5b145b611e7a5760405162461bcd60e51b81526004016104ae906156ee565b5050603e805462ff00001916620100001790555050565b33611e9a612cb2565b6001600160a01b03161480611ebe575033611eb3612906565b6001600160a01b0316145b611eda5760405162461bcd60e51b81526004016104ae9061571e565b600080611ee6846134e5565b9150915081611f075760405162461bcd60e51b81526004016104ae9061584e565b82603d6000018260ff1681548110611f1b57fe5b600091825260209091206004909102018054911515600160a81b0260ff60a81b19909216919091179055821561209e576000846001600160a01b03166370a0823160418460ff1681548110611f6c57fe5b6000918252602090912001546040516001600160e01b031960e084901b168152611fa2916001600160a01b031690600401615469565b60206040518083038186803b158015611fba57600080fd5b505afa158015611fce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611ff2919081019061440d565b9050801561209c5760418260ff168154811061200a57fe5b6000918252602090912001546040516307dba22560e31b81526001600160a01b0390911690633edd11289061204890889085906001906004016154fd565b602060405180830381600087803b15801561206257600080fd5b505af1158015612076573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061209a919081019061440d565b505b505b836001600160a01b03167ff1d30c51cc85d5f31324e582df608abdbb328479127c2d9c7e70666cbc611c7c84604051611bf6919061558b565b60006120e1613e35565b604080516101208101909152604280546001600160a01b03811660608401908152839290916080840190600160a01b900460ff16600781111561212057fe5b600781111561212b57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160006001600160a01b03168152602001600060ff16815250905060009150935093915050565b61219b613eae565b603b54600160a01b900460ff16156121c55760405162461bcd60e51b81526004016104ae9061574e565b603e54610100900460ff16156121ed5760405162461bcd60e51b81526004016104ae906156ae565b603e5462010000900460ff16156122165760405162461bcd60e51b81526004016104ae906157ee565b60608060606122578686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506136d092505050565b9250925092506040518060a00160405280600115158152602001603d600001805480602002602001604051908101604052809291908181526020016000905b8282101561233d5760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660078111156122e657fe5b60078111156122f157fe5b81526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152505081526020019060010190612296565b50505050815260200184815260200182815260200183815250935050505092915050565b600080600061236f846134e5565b91509150816123905760405162461bcd60e51b81526004016104ae9061579e565b60418160ff16815481106123a057fe5b6000918252602090912001546001600160a01b0316949350505050565b6123c5613edf565b60408051603d805460c0602082028401810190945260a083018181529293919284929091849160009085015b828210156124985760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600781111561244157fe5b600781111561244c57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200190600101906123f1565b50505090825250600182015460ff80821660208401526101008204811615156040840152620100009091041615156060820152600290910154608090910152905090565b603c546001600160a01b031633146125065760405162461bcd60e51b81526004016104ae9061564e565b603e5462010000900460ff161561252f5760405162461bcd60e51b81526004016104ae906157ee565b603b54600160a81b900460ff166125585760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b191690558460005b818110156118c8576125da84848381811061258057fe5b90506020020135603d6000018a8a8581811061259857fe5b90506020020160206125ad919081019061442b565b60ff16815481106125ba57fe5b90600052602060002090600402016003015461346690919063ffffffff16565b603d8989848181106125e857fe5b90506020020160206125fd919081019061442b565b60ff168154811061260a57fe5b6000918252602090912060036004909202010155600101612569565b603c546001600160a01b031633146126505760405162461bcd60e51b81526004016104ae9061564e565b603e5462010000900460ff16156126795760405162461bcd60e51b81526004016104ae906157ee565b603b54600160a81b900460ff166126a25760405162461bcd60e51b81526004016104ae9061585e565b603b805460ff60a81b19169055603d80546110be91839160ff87169081106125ba57fe5b603e54603f5460ff808316926101008104821692620100009091049091169084565b603c546001600160a01b031681565b600054610100900460ff1680612710575061271061397b565b8061271e575060005460ff16155b61273a5760405162461bcd60e51b81526004016104ae906157ce565b600054610100900460ff16158015612765576000805460ff1961ff0019909116610100171660011790555b61276d613981565b6127768b613996565b6001600160a01b038a1661279c5760405162461bcd60e51b81526004016104ae9061582e565b876127b95760405162461bcd60e51b81526004016104ae9061580e565b603c80546001600160a01b038c166001600160a01b0319909116179055603e805460ff1916600a179055670de0b6b3a7640000603f5560005b888110156128765761286d8a8a8381811061280957fe5b905060200201602061281e9190810190613fad565b89898481811061282a57fe5b905060200201602061283f9190810190613fad565b612847612988565b87878681811061285357fe5b905060200201602061286891908101906143b3565b612990565b506001016127f2565b506128e789898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250600192506131c7915050565b80156128f9576000805461ff00191690555b5050505050505050505050565b603b546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b15801561294b57600080fd5b505afa15801561295f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129839190810190613fcb565b905090565b6305f5e10090565b60006001600160a01b0385166129b85760405162461bcd60e51b81526004016104ae906157ae565b6001600160a01b0384166129de5760405162461bcd60e51b81526004016104ae9061586e565b620f424083101580156129f657506402540be4008311155b612a125760405162461bcd60e51b81526004016104ae906156de565b6000612a1d866134e5565b5090508015612a3e5760405162461bcd60e51b81526004016104ae9061577e565b604051632fa8a91360e11b81526001600160a01b03861690635f51522690612a6a908990600401615469565b602060405180830381600087803b158015612a8457600080fd5b505af1158015612a98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612abc919081019061440d565b506000612ac8876139af565b90506000612add60128363ffffffff61349216565b90506000612af587600a84900a63ffffffff613a5616565b603d54603e549192509060ff90811690821610612b245760405162461bcd60e51b81526004016104ae9061575e565b6001600160a01b038a8116600081815260406020818152818320805460ff191660ff88161790556041805460018181018355919094527f7c9785e8241615bc80415d89775984a1337d15dc1bf4ce50f41988b2a2b336a790930180546001600160a01b031916958f1695909517909455805160c08101909152918252603d92820190815289151560208083019190915260408201869052600060608301819052608090920182905283546001810180865594835291819020835160049093020180546001600160a01b0319166001600160a01b03909316929092178083559083015190829060ff60a01b1916600160a01b836007811115612c2157fe5b02179055506040828101518254901515600160a81b0260ff60a81b19909116178255606083015160018301556080830151600283015560a090920151600390910155516001600160a01b038c1691507fc5841a71c957e4395ad5f2efb03673e584498cce9790cce25bf59e92094dbd3090612c9d908c90615469565b60405180910390a29998505050505050505050565b603b546037546040516385acd64160e01b81526000926001600160a01b0316916385acd64191612ce591906004016155f3565b60206040518083038186803b15801561294b57600080fd5b600080612d09836134e5565b9150915081612d2a5760405162461bcd60e51b81526004016104ae9061584e565b603d54612d35613dfc565b603d805460ff8516908110612d4657fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115612d8e57fe5b6007811115612d9957fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809182015281015190915015612df15760405162461bcd60e51b81526004016104ae9061589e565b60a081015115612e135760405162461bcd60e51b81526004016104ae906156be565b600581602001516007811115612e2557fe5b1415612e435760405162461bcd60e51b81526004016104ae9061569e565b6000612e5683600163ffffffff61349216565b90508060ff168460ff161415612efb57603d805480612e7157fe5b6000828152602080822060046000199094019384020180546001600160b01b03191681556001810183905560028101839055600301829055919092556001600160a01b03881682526040908190529020805460ff191690556041805480612ed457fe5b600082815260209020810160001990810180546001600160a01b0319169055019055613188565b603d805460ff8316908110612f0c57fe5b9060005260206000209060040201603d6000018560ff1681548110612f2d57fe5b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b0390921691909117808255825460ff600160a01b918290041691839160ff60a01b1990911690836007811115612f8457fe5b02179055508154815460ff60a81b1916600160a81b9182900460ff1615159091021781556001808301549082015560028083015490820155600391820154910155603d805480612fd057fe5b60008281526020812060046000199093019283020180546001600160b01b0319168155600181018290556002810182905560030155905561300f613dfc565b603d805460ff871690811061302057fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561306857fe5b600781111561307357fe5b81528154600160a81b900460ff90811615156020808401919091526001840154604080850191909152600285015460608501526003909401546080909301929092526001600160a01b038b8116600090815292849052838320805460ff199081169091558551909116835292909120805490921688821617909155604180549293509190841690811061310257fe5b600091825260209091200154604180546001600160a01b039092169160ff881690811061312b57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604180548061316457fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505b81516040516001600160a01b03909116907f1e5281bbecf5c15104f9e35265dbe738c1cd2597613cbf4a0a51713448bc13b990600090a2505050505050565b8251806131e65760405162461bcd60e51b81526004016104ae9061566e565b825181146132065760405162461bcd60e51b81526004016104ae906157fe565b60005b818110156133465760008061323087848151811061322357fe5b60200260200101516134e5565b91509150816132515760405162461bcd60e51b81526004016104ae9061579e565b613259613dfc565b61326282613563565b9050600087858151811061327257fe5b602002602001015190506001600781111561328957fe5b8260200151600781111561329957fe5b14156132f557670de0b6b3a76400008111156132c75760405162461bcd60e51b81526004016104ae9061568e565b80603d6000018460ff16815481106132db57fe5b906000526020600020906004020160020181905550613336565b603d805460ff851690811061330657fe5b90600052602060002090600402016002015481146133365760405162461bcd60e51b81526004016104ae906157be565b5050600190920191506132099050565b508161335457613354613a90565b7fbe2adf2902216365c5c656d48909da65fad401f809e4351cdbcfcac40674566984846040516116ed929190615546565b60606000603d600001805480602002602001604051908101604052809291908181526020016000905b828210156134555760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660078111156133fe57fe5b600781111561340957fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200190600101906133ae565b5050603d5492959294509192505050565b60008282018381101561348b5760405162461bcd60e51b81526004016104ae9061567e565b9392505050565b600061348b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613b1e565b600061348b83836305f5e100613b4a565b6001600160a01b03811660009081526040602081905281205460ff168061355957603d546135185750600090508061355e565b826001600160a01b0316603d60000160008154811061353357fe5b600091825260208220600490910201546001600160a01b0316919091149250905061355e565b600191505b915091565b61356b613dfc565b603d805460ff841690811061357c57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b9091041660078111156135c457fe5b60078111156135cf57fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809091015292915050565b60405161366390849063a9059cbb60e01b9061362c90869086906024016154e2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613b6f565b505050565b600061348b8383670de0b6b3a7640000613b4a565b6000600582600781111561368d57fe5b14806136a4575060068260078111156136a257fe5b145b806136ba575060078260078111156136b857fe5b145b156136c7575060016136cb565b5060005b919050565b60608060606000845190508060ff1660405190808252806020026020018201604052801561371857816020015b613705613dfc565b8152602001906001900390816136fd5790505b5093508060ff16604051908082528060200260200182016040528015613748578160200160208202803883390190505b5091508060ff16604051908082528060200260200182016040528015613778578160200160208202803883390190505b50925060005b8160ff168160ff161015613972576000868260ff168151811061379d57fe5b6020026020010151905060008260010190505b8360ff168160ff16101561380e57878160ff16815181106137cd57fe5b60200260200101516001600160a01b0316826001600160a01b031614156138065760405162461bcd60e51b81526004016104ae906157de565b6001016137b0565b5060008061381b836134e5565b915091508161383c5760405162461bcd60e51b81526004016104ae9061579e565b80878560ff168151811061384c57fe5b60ff9283166020918202929092010152603d80549091831690811061386d57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b9091041660078111156138b557fe5b60078111156138c057fe5b8152815460ff600160a81b909104811615156020830152600183015460408301526002830154606083015260039092015460809091015289518a91871690811061390657fe5b602002602001018190525060418160ff168154811061392157fe5b9060005260206000200160009054906101000a90046001600160a01b0316868560ff168151811061394e57fe5b6001600160a01b03929092166020928302919091019091015250505060010161377e565b50509193909250565b303b1590565b603b805460ff60a81b1916600160a81b179055565b61399f81613c54565b50603b805460ff60a01b19169055565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156139eb57600080fd5b505afa1580156139ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a239190810190614449565b60ff16905060048110158015613a3a575060128111155b611a8d5760405162461bcd60e51b81526004016104ae9061576e565b600082613a6557506000611a8d565b82820282848281613a7257fe5b041461348b5760405162461bcd60e51b81526004016104ae9061578e565b603d546000805b82811015613add57613ad3603d6000018281548110613ab257fe5b9060005260206000209060040201600201548361346690919063ffffffff16565b9150600101613a97565b50670de0b6b3a76400008110158015613afe5750673782dace9d9000008111155b613b1a5760405162461bcd60e51b81526004016104ae9061587e565b5050565b60008184841115613b425760405162461bcd60e51b81526004016104ae919061561d565b505050900390565b600080613b5d858563ffffffff613a5616565b9050611d8a818463ffffffff613c9d16565b613b81826001600160a01b0316613cdf565b613b9d5760405162461bcd60e51b81526004016104ae9061588e565b60006060836001600160a01b031683604051613bb99190615405565b6000604051808303816000865af19150503d8060008114613bf6576040519150601f19603f3d011682016040523d82523d6000602084013e613bfb565b606091505b509150915081613c1d5760405162461bcd60e51b81526004016104ae906156ce565b8051156106975780806020019051613c3891908101906143d1565b6106975760405162461bcd60e51b81526004016104ae9061581e565b6001600160a01b038116613c7a5760405162461bcd60e51b81526004016104ae9061562e565b603b80546001600160a01b0319166001600160a01b0383161790556105c6613d18565b600061348b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613dc5565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061051b575050151592915050565b604051613d2490615448565b604051908190038120603355613d399061541c565b604051908190038120603455613d4e90615453565b604051908190038120603555613d639061543d565b604051908190038120603655613d7890615432565b604051908190038120603755613d8d90615427565b604051908190038120603855613da29061545e565b604051908190038120603955613db790615411565b604051908190039020603a55565b60008183613de65760405162461bcd60e51b81526004016104ae919061561d565b506000838581613df257fe5b0495945050505050565b6040805160c081019091526000808252602082019081526020016000151581526020016000815260200160008152602001600081525090565b6040518060600160405280613e48613dfc565b815260006020820181905260409091015290565b6040518060800160405280600081526020016060815260200160608152602001606081525090565b60405180608001604052806000151581526020016060815260200160608152602001606081525090565b6040518060a00160405280600015158152602001606081526020016060815260200160608152602001606081525090565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b8035611a8d81615a11565b8051611a8d81615a11565b60008083601f840112613f3557600080fd5b5081356001600160401b03811115613f4c57600080fd5b602083019150836020820283011115613f6457600080fd5b9250929050565b8035611a8d81615a25565b8051611a8d81615a25565b8035611a8d81615a2e565b8051611a8d81615a2e565b8035611a8d81615a37565b8051611a8d81615a37565b600060208284031215613fbf57600080fd5b600061051b8484613f0d565b600060208284031215613fdd57600080fd5b600061051b8484613f18565b60008060008060008060008060008060c08b8d03121561400857600080fd5b60006140148d8d613f0d565b9a505060206140258d828e01613f0d565b99505060408b01356001600160401b0381111561404157600080fd5b61404d8d828e01613f23565b985098505060608b01356001600160401b0381111561406b57600080fd5b6140778d828e01613f23565b965096505060808b01356001600160401b0381111561409557600080fd5b6140a18d828e01613f23565b945094505060a08b01356001600160401b038111156140bf57600080fd5b6140cb8d828e01613f23565b92509250509295989b9194979a5092959850565b6000806000606084860312156140f457600080fd5b60006141008686613f0d565b935050602061411186828701613f0d565b925050604061412286828701613f6b565b9150509250925092565b6000806040838503121561413f57600080fd5b600061414b8585613f0d565b925050602061415c85828601613f6b565b9150509250929050565b60008060006060848603121561417b57600080fd5b60006141878686613f0d565b935050602061411186828701613f81565b600080602083850312156141ab57600080fd5b82356001600160401b038111156141c157600080fd5b6141cd85828601613f23565b92509250509250929050565b6000806000604084860312156141ee57600080fd5b83356001600160401b0381111561420457600080fd5b61421086828701613f23565b9350935050602061412286828701613f0d565b6000806000806040858703121561423957600080fd5b84356001600160401b0381111561424f57600080fd5b61425b87828801613f23565b945094505060208501356001600160401b0381111561427957600080fd5b61428587828801613f23565b95989497509550505050565b6000806000806000606086880312156142a957600080fd5b85356001600160401b038111156142bf57600080fd5b6142cb88828901613f23565b955095505060208601356001600160401b038111156142e957600080fd5b6142f588828901613f23565b9350935050604061430888828901613f6b565b9150509295509295909350565b6000806000806000806060878903121561432e57600080fd5b86356001600160401b0381111561434457600080fd5b61435089828a01613f23565b965096505060208701356001600160401b0381111561436e57600080fd5b61437a89828a01613f23565b945094505060408701356001600160401b0381111561439857600080fd5b6143a489828a01613f23565b92509250509295509295509295565b6000602082840312156143c557600080fd5b600061051b8484613f6b565b6000602082840312156143e357600080fd5b600061051b8484613f76565b60006020828403121561440157600080fd5b600061051b8484613f81565b60006020828403121561441f57600080fd5b600061051b8484613f8c565b60006020828403121561443d57600080fd5b600061051b8484613f97565b60006020828403121561445b57600080fd5b600061051b8484613fa2565b60008060006060848603121561447c57600080fd5b60006144888686613f97565b935050602061449986828701613f0d565b925050604061412286828701613f81565b60006144b683836144f9565b505060200190565b60006144ca838361529e565b505060c00190565b60006144b68383614737565b60006144b683836153fc565b6144f3816159b4565b82525050565b6144f381615988565b600061450e8385615970565b935061451982615963565b8060005b8581101561454f5761452f8284615979565b61453988826144aa565b975061454483615966565b92505060010161451d565b509495945050505050565b60006145658261596c565b61456f8185615970565b935061457a83615966565b8060005b8381101561454f57815161459288826144aa565b975061459d83615966565b92505060010161457e565b60006145b38261596c565b6145bd8185615970565b93506145c883615966565b8060005b8381101561454f5781516145e088826144aa565b97506145eb83615966565b9250506001016145cc565b60006146018261596c565b61460b8185615970565b935061461683615966565b8060005b8381101561454f57815161462e88826144be565b975061463983615966565b92505060010161461a565b600061464f8261596c565b6146598185615970565b935061466483615966565b8060005b8381101561454f57815161467c88826144be565b975061468783615966565b925050600101614668565b600061469d8261596c565b6146a78185615970565b93506146b283615966565b8060005b8381101561454f5781516146ca88826144d2565b97506146d583615966565b9250506001016146b6565b60006146eb8261596c565b6146f58185615970565b935061470083615966565b8060005b8381101561454f57815161471888826144de565b975061472383615966565b925050600101614704565b6144f381615993565b6144f381615963565b600061474b8261596c565b61475581856136cb565b93506147658185602086016159d1565b9290920192915050565b6144f3816159bb565b6144f3816159c6565b600061478c8261596c565b6147968185615970565b93506147a68185602086016159d1565b6147af816159fd565b9093019392505050565b60006147c6601583615970565b744e657875732061646472657373206973207a65726f60581b815260200192915050565b60006147f7601483615970565b7314185d5cd8589b194e881b9bdd081c185d5cd95960621b815260200192915050565b6000614827601583615970565b7409aeae6e840c4ca40c6c2d8d8cac840c4f240da92f605b1b815260200192915050565b6000614858600e836136cb565b6d29b0bb34b733b9a6b0b730b3b2b960911b8152600e0192915050565b6000614882601983615970565b7f4d757374206d69677261746520736f6d65206241737365747300000000000000815260200192915050565b60006148bb601a83615970565b7f456d707479206241737365747320617272617920706173736564000000000000815260200192915050565b60006148f46007836136cb565b665374616b696e6760c81b815260070192915050565b6000614917601b83615970565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000614950601c83615970565b7f417373657420776569676874206d757374206265203c3d203130302500000000815260200192915050565b6000614989601583615970565b74624173736574206d7573742062652061637469766560581b815260200192915050565b60006149ba602283615970565b7f4e6f20624173736574732063616e20626520756e646572676f696e67207265638152611bdb60f21b602082015260400192915050565b60006149fe601a83615970565b7f624173736574207661756c74206d75737420626520656d707479000000000000815260200192915050565b6000614a376010836136cb565b6f2932b1b7b63630ba32b930b634b9b2b960811b815260100192915050565b6000614a63602083615970565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000614a9c600f83615970565b6e4d4d206f7574206f662072616e676560881b815260200192915050565b6000614ac7601783615970565b7f624173736574206d757374206265206166666563746564000000000000000000815260200192915050565b6000614b00601b83615970565b7f624173736574206d75737420657869737420696e204261736b65740000000000815260200192915050565b6000614b39601983615970565b7f4d757374207472616e736665722066756c6c20616d6f756e7400000000000000815260200192915050565b6000614b72601b83615970565b7f4d757374206265206d616e61676572206f7220676f7665726e6f720000000000815260200192915050565b6000614bab601983615970565b7f4f6e6c7920676f7665726e6f722063616e206578656375746500000000000000815260200192915050565b6000614be4602483615970565b7f43616e6e6f74206d6967726174652062417373657473207769746820786665728152632066656560e01b602082015260400192915050565b6000614c2a601083615970565b6f14185d5cd8589b194e881c185d5cd95960821b815260200192915050565b6000614c566007836136cb565b6626b0b730b3b2b960c91b815260070192915050565b6000614c79601583615970565b7413585e0818905cdcd95d1cc81a5b8810985cdad95d605a1b815260200192915050565b6000614caa602983615970565b7f546f6b656e206d75737420686176652073756666696369656e7420646563696d815268616c20706c6163657360b81b602082015260400192915050565b6000614cf5601f83615970565b7f62417373657420616c72656164792065786973747320696e204261736b657400815260200192915050565b6000614d2e6009836136cb565b6827b930b1b632a43ab160b91b815260090192915050565b6000614d53602183615970565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614d96601183615970565b7018905cdcd95d081b5d5cdd08195e1a5cdd607a1b815260200192915050565b6000614dc3600a836136cb565b69476f7665726e616e636560b01b8152600a0192915050565b6000614de9601c83615970565b7f6241737365742061646472657373206d7573742062652076616c696400000000815260200192915050565b6000614e22600a836136cb565b69283937bc3ca0b236b4b760b11b8152600a0192915050565b6000614e48601f83615970565b7f41666665637465642062417373657473206d7573742062652073746174696300815260200192915050565b6000614e81602e83615970565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614ed1601783615970565b7f4d7573742068617665206e6f206475706c696361746573000000000000000000815260200192915050565b6000614f0a601483615970565b734261736b6574206d75737420626520616c69766560601b815260200192915050565b6000614f3a601e83615970565b7f4d757374206265206d61746368696e6720624173736574206172726179730000815260200192915050565b6000614f73602183615970565b7f4d75737420696e697469616c697365207769746820736f6d65206241737365748152607360f81b602082015260400192915050565b6000614fb6602a83615970565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000615002601383615970565b726d49782061646472657373206973207a65726f60681b815260200192915050565b6000615031601f83615970565b7f4d757374207472616e7366657220746f206e657720696e7465677261746f7200815260200192915050565b600061506a601583615970565b7418905cdcd95d08191bd95cc81b9bdd08195e1a5cdd605a1b815260200192915050565b600061509b601f83615970565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b60006150d4602183615970565b7f496e746567726174696f6e2061646472657373206d7573742062652076616c698152601960fa1b602082015260400192915050565b6000615117602783615970565b7f4261736b657420776569676874206d757374206265203e3d20313030202626208152663c3d203430302560c81b602082015260400192915050565b60006151606009836136cb565b682134b6322a37b5b2b760b91b815260090192915050565b6000615185601f83615970565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b60006151be602583615970565b7f624173736574206d7573742068617665206120746172676574207765696768748152640206f6620360dc1b602082015260400192915050565b805160a0808452600091908401906152108282614644565b915050602083015161522560208601826153fc565b506040830151615238604086018261472e565b50606083015161524b606086018261472e565b50608083015161525e6080860182614737565b509392505050565b8051610100830190615278848261529e565b50602082015161528b60c08501826144f9565b50604082015161069760e08501826153fc565b805160c08301906152af84826144f9565b5060208201516152c26020850182614778565b5060408201516152d5604085018261472e565b5060608201516152e86060850182614737565b5060808201516152fb6080850182614737565b5060a082015161069760a0850182614737565b80516000906080840190615322858261472e565b506020830151848203602086015261533a8282614644565b9150506040830151848203604086015261535482826145a8565b91505060608301518482036060860152611d8a82826146e0565b805160009060808401906153228582614737565b805160009060a0840190615396858261472e565b50602083015184820360208601526153ae8282614644565b915050604083015184820360408601526153c88282614644565b915050606083015184820360608601526153e282826145a8565b91505060808301518482036080860152611d8a82826146e0565b6144f3816159ae565b600061348b8284614740565b6000611a8d8261484b565b6000611a8d826148e7565b6000611a8d82614a2a565b6000611a8d82614c49565b6000611a8d82614d21565b6000611a8d82614db6565b6000611a8d82614e15565b6000611a8d82615153565b60208101611a8d82846144f9565b60208101611a8d82846144ea565b6060810161549382866144f9565b6154a060208301856144f9565b61051b6040830184614737565b608081016154bb82876144f9565b6154c860208301866144f9565b6154d56040830185614737565b611d8a606083018461472e565b604081016154f082856144f9565b61348b6020830184614737565b6060810161550b82866144f9565b6155186020830185614737565b61051b604083018461472e565b60408082528101615537818587614502565b905061051b60208301846144f9565b60408082528101615557818561455a565b9050818103602083015261051b8184614692565b6040808252810161557c81856145f6565b905061348b6020830184614737565b60208101611a8d828461472e565b61024081016155a8828761472e565b81810360208301526155ba8186614781565b90506155c96040830185615266565b611d8a610140830184615266565b61012081016155e6828561472e565b61348b6020830184615266565b60208101611a8d8284614737565b60208101611a8d828461476f565b60208101611a8d8284614778565b6020808252810161348b8184614781565b60208082528101611a8d816147b9565b60208082528101611a8d816147ea565b60208082528101611a8d8161481a565b60208082528101611a8d81614875565b60208082528101611a8d816148ae565b60208082528101611a8d8161490a565b60208082528101611a8d81614943565b60208082528101611a8d8161497c565b60208082528101611a8d816149ad565b60208082528101611a8d816149f1565b60208082528101611a8d81614a56565b60208082528101611a8d81614a8f565b60208082528101611a8d81614aba565b60208082528101611a8d81614af3565b60208082528101611a8d81614b2c565b60208082528101611a8d81614b65565b60208082528101611a8d81614b9e565b60208082528101611a8d81614bd7565b60208082528101611a8d81614c1d565b60208082528101611a8d81614c6c565b60208082528101611a8d81614c9d565b60208082528101611a8d81614ce8565b60208082528101611a8d81614d46565b60208082528101611a8d81614d89565b60208082528101611a8d81614ddc565b60208082528101611a8d81614e3b565b60208082528101611a8d81614e74565b60208082528101611a8d81614ec4565b60208082528101611a8d81614efd565b60208082528101611a8d81614f2d565b60208082528101611a8d81614f66565b60208082528101611a8d81614fa9565b60208082528101611a8d81614ff5565b60208082528101611a8d81615024565b60208082528101611a8d8161505d565b60208082528101611a8d8161508e565b60208082528101611a8d816150c7565b60208082528101611a8d8161510a565b60208082528101611a8d81615178565b60208082528101611a8d816151b1565b6020808252810161348b81846151f8565b60c08101611a8d828461529e565b6020808252810161348b818461530e565b6020808252810161348b818461536e565b6020808252810161348b8184615382565b6040810161590e8285614737565b818103602083015261051b8184614692565b60208101611a8d82846153fc565b6080810161593c82876153fc565b615949602083018661472e565b615956604083018561472e565b611d8a6060830184614737565b90565b60200190565b5190565b90815260200190565b600061348b6020840184613f0d565b6000611a8d826159a2565b151590565b806136cb81615a07565b6001600160a01b031690565b60ff1690565b6000611a8d825b6000611a8d82615988565b6000611a8d82615998565b60005b838110156159ec5781810151838201526020016159d4565b838111156106975750506000910152565b601f01601f191690565b600881106105c657fe5b615a1a81615988565b81146105c657600080fd5b615a1a81615993565b615a1a81615963565b615a1a816159ae56fea365627a7a723158209d3ffd689f05a6f336fd6dccfbfb012957c39c575599d9e1ee49afc803038d4d6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "1166:1613:73:-;;;612:28:57;;;-1:-1:-1;;;;612:28:57;;;1281:341:73;5:2:-1;;;;30:1;27;20:12;5:2;1281:341:73;;;;;;;;;;;;;;;;;;;;;1340:229;;;;;;;;;-1:-1:-1;;;;;1340:229:73;;;;;;;1498:19;1340:229;;;;1553:5;1340:229;;;;;;1395:26;:24;;;;;:26;;:::i;:::-;1340:229;;1446:1;1340:229;;;;;;;;;;;;1327:242;;:10;:242;;-1:-1:-1;;;;;;1327:242:73;-1:-1:-1;;;;;1327:242:73;;;;;;;;;;;;;;:10;;;;-1:-1:-1;;;;1327:242:73;-1:-1:-1;;;1327:242:73;;;;;;;;;;;;;-1:-1:-1;1327:242:73;;;;;;;;;-1:-1:-1;;;1327:242:73;-1:-1:-1;;;;1327:242:73;;;;;;;;;;-1:-1:-1;1327:242:73;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1611:4:73;1579:29;:36;1166:1613;;1390:92:65;1046:3;1390:92;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;365:9;329:64;;;319:74;223:186;-1:-1;;;;223:186;416:91;;-1:-1;;;;;576:54;;478:24;559:76;642:117;711:24;729:5;711:24;;;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;;;1166:1613:73;;;;;;",
  "deployedSourceMap": "1166:1613:73:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1166:1613:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9976:378:19;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16127:192;;;;;;;;;:::i;:::-;;12761:237;;;;;;;;;:::i;28000:182::-;;;:::i;:::-;;;;;;;;;7800:1605;;;:::i;:::-;;;;;;;;;22259:1421;;;;;;;;;:::i;:::-;;;;;;;;;;;28355:262;;;;;;;;;:::i;:::-;;;;;;;;1883:119:57;;;:::i;25652:682:19:-;;;:::i;:::-;;;;;;;;1507:78:57;;;:::i;:::-;;;;;;;;6432:325:19;;;;;;;;;:::i;18137:2700::-;;;;;;;;;:::i;2249:29::-;;;;;;;;;:::i;:::-;;;;;;;;1676:117:57;;;:::i;6972:477:19:-;;;;;;;;;:::i;31326:756::-;;;;;;;;;:::i;32200:582::-;;;;;;;;;:::i;2141:635:73:-;;;;;;;;;:::i;:::-;;;;;;;;444:19:54;;;:::i;:::-;;;;;;;;32908:472:19;;;;;;;;;:::i;15262:639::-;;;;;;;;;:::i;1775:360:73:-;;;;;;;;;:::i;:::-;;;;;;;;;24780:640:19;;;;;;;;;:::i;:::-;;;;;;;;28812:276;;;;;;;;;:::i;1628:141:73:-;;;:::i;:::-;;;;;;;;5716:505:19;;;;;;;;;:::i;5086:353::-;;;;;;;;;:::i;2055:20::-;;;:::i;:::-;;;;;;;;;;;1993:18;;;:::i;2884:970::-;;;;;;;;;:::i;9976:378::-;10170:11;611::54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;4183:22;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;10205:142;10229:7;10250:12;10276:26;:24;:26::i;:::-;10316:21;10205:10;:142::i;:::-;10197:150;9976:378;-1:-1:-1;;;;9976:378:19:o;16127:192::-;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;4183:22;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;16283:29;16297:14;16283:13;:29::i;:::-;16127:192;:::o;12761:237::-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;12947:44;12965:8;;12947:44;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;12947:44:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12975:8:19;;-1:-1:-1;12975:8:19;;;;12947:44;;;12975:8;;12947:44;12975:8;12947:44;1:33:-1;99:1;81:16;;74:27;;;-1:-1;99:1;-1:-1;12947:17:19;;-1:-1:-1;;12947:44:19:i;:::-;12761:237;;;;:::o;28000:182::-;28082:23;28119:11;28162:13;:11;:13::i;:::-;28155:20;;;;28000:182;;:::o;7800:1605::-;4630:3;;7948:25;;7975:22;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;8044:26:19;2091:5:58;8089:13:19;:11;:13::i;:::-;8043:59;;;;8134:5;8120:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;8120:20:19;-1:-1:-1;8170:1:19;;-1:-1:-1;8112:28:19;-1:-1:-1;8170:1:19;8208:1191;8229:5;8225:1;:9;;;8208:1191;;;8255:15;;:::i;:::-;8273:10;8284:1;8273:13;;;;;;;;;;;;;;;;8255:31;;8300:14;8317:1;:6;;;8300:23;;8424:19;8446:12;8459:1;8446:15;;;;;;;;;;;;;;;;;;;8493:54;;-1:-1:-1;;;8493:54:19;;-1:-1:-1;;;;;8446:15:19;;;;-1:-1:-1;8446:15:19;;8493:46;;:54;;8540:6;;8493:54;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8493:54:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8493:54:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8493:54:19;;;;;;;;;8597:22;;;;8475:72;;-1:-1:-1;8561:13:19;;8592:107;;8647:37;;-1:-1:-1;;;8647:37:19;;-1:-1:-1;;;;;8647:24:19;;;;;:37;;8672:11;;8647:37;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8647:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8647:37:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8647:37:19;;;;;;;;;8639:45;;8592:107;8712:15;8730:18;:7;8742:5;8730:18;:11;:18;:::i;:::-;8789:14;;;;8712:36;;-1:-1:-1;8873:25:19;;;:60;;;;-1:-1:-1;8914:19:19;8902:1;:8;;;:31;;;;;;;;;8873:60;8870:519;;;9020:7;8987:6;:14;;9002:1;8987:17;;;;;;;;;;;;;;;;;:30;:17;;;;;:30;:40;;;;9070:28;:7;9082:15;9070:28;:11;:28;:::i;:::-;9046:52;;9127:13;9116:5;9122:1;9116:8;;;;;;;;;;;;;;;:24;;;;;9188:20;9211:39;9242:1;:7;;;9211:13;:30;;:39;;;;:::i;:::-;9188:62;-1:-1:-1;9288:35:19;:17;9188:62;9288:35;:21;:35;:::i;:::-;9268:55;;8870:519;;;;;9373:1;9362:5;9368:1;9362:8;;;;;;;;;;;;;;;:12;;;;;8870:519;-1:-1:-1;;8236:3:19;;;;;-1:-1:-1;8208:1191:19;;-1:-1:-1;;;;8208:1191:19;;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;7800:1605:19;;:::o;22259:1421::-;22403:4;22409:13;22424:20;;:::i;:::-;22446;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;22482:26:19;;:::i;:::-;22518:27;;:::i;:::-;22604:13;;;;;;;;:39;;-1:-1:-1;22621:22:19;;;;;;;22604:39;22601:128;;;22658:60;;;;;;;;;;;;;;;;;22666:5;;-1:-1:-1;22658:60:19;-1:-1:-1;22704:5:19;;-1:-1:-1;22711:6:19;-1:-1:-1;22658:60:19;;22601:128;22770:16;22788:14;22806:24;22823:6;22806:16;:24::i;:::-;22769:61;;;;22844:11;22840:101;;-1:-1:-1;;22871:59:19;;;;;;;;;;;;;;;;;22879:5;;-1:-1:-1;22871:59:19;-1:-1:-1;22916:5:19;;-1:-1:-1;22923:6:19;-1:-1:-1;22871:59:19;;22840:101;22958:148;;;;;;;;22994:6;:14;;23009:8;22994:24;;;;;;;;;;;;;;;;;;;22958:148;;;;;;;;;22994:24;;;;;22958:148;;-1:-1:-1;;;;;22958:148:19;;;;;;22994:24;;22958:148;;;;;-1:-1:-1;;;22958:148:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23044:12;23057:8;23044:22;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23044:22:19;22958:148;;;;;;;;22950:156;-1:-1:-1;23175:69:19;;;;-1:-1:-1;;23201:32:19;;;;;;;;;-1:-1:-1;23201:32:19;;23209:4;;-1:-1:-1;23201:32:19;-1:-1:-1;23219:5:19;;-1:-1:-1;23226:6:19;-1:-1:-1;23201:32:19;;23175:69;23286:17;23305:15;23324:25;23341:7;23324:16;:25::i;:::-;23285:64;;;;23363:12;23359:103;;-1:-1:-1;;23391:60:19;;;;;;;;;;;;;;;;;23399:5;;-1:-1:-1;23391:60:19;-1:-1:-1;23437:5:19;;-1:-1:-1;23444:6:19;;-1:-1:-1;23391:60:19;;-1:-1:-1;;23391:60:19;23359:103;23480:151;;;;;;;;23516:6;:14;;23531:9;23516:25;;;;;;;;;;;;;;;;;;;23480:151;;;;;;;;;23516:25;;;;;23480:151;;-1:-1:-1;;;;;23480:151:19;;;;;;23516:25;;23480:151;;;;;-1:-1:-1;;;23480:151:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23567:12;23580:9;23567:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23567:23:19;23480:151;;;;;;;;;;;;;23641:32;;;;;;;;;;23567:23;;-1:-1:-1;23641:32:19;;-1:-1:-1;23659:5:19;;-1:-1:-1;23471:160:19;;-1:-1:-1;;;;;832:1:57;22259:1421:19;;;;;;;:::o;28355:262::-;28438:20;;:::i;:::-;28475:11;28488;28503:25;28520:7;28503:16;:25::i;:::-;28474:54;;;;28546:6;28538:36;;;;-1:-1:-1;;;28538:36:19;;;;;;;;;28593:17;28604:5;28593:10;:17::i;1883:119:57:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;985:7:57;;-1:-1:-1;;;985:7:57;;;;977:40;;;;-1:-1:-1;;;977:40:57;;;;;;;;;1945:7;:15;;-1:-1:-1;;;;1945:15:57;;;1975:20;;;;;;1984:10;;1975:20;;;;;;;;;;1883:119::o;25652:682:19:-;25776:29;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;25822:23;25847:11;25862:13;:11;:13::i;:::-;25821:54;;;;25885:35;25937:3;25923:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25923:18:19;;25885:56;;25951:22;25988:3;25976:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25976:16:19;-1:-1:-1;25951:41:19;-1:-1:-1;26006:7:19;26002:122;26023:3;26019:1;:7;;;26002:122;;;26070:12;26083:1;26070:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26070:15:19;26046:18;26065:1;26046:21;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;26046:39:19;;;-1:-1:-1;;;;;26046:39:19;;;;;26112:1;26099:7;26107:1;26099:10;;;;;;;;;;:14;;;;:10;;;;;;;;;;;:14;26028:3;;26002:122;;;-1:-1:-1;26141:186:19;;;;;;;;26182:29;;26141:186;;;;;;;;;;;;;;;;;;;-1:-1:-1;26141:186:19;25652:682;-1:-1:-1;25652:682:19:o;1507:78:57:-;1571:7;;-1:-1:-1;;;1571:7:57;;;;;1507:78::o;6432:325:19:-;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;6688:6:19;:28;;:62;;6734:15;;2077:19:58;6688:28:19;;;;;;;;;;;;;;;;;;;:41;;;:45;;:62;;;;:::i;:::-;6632:6;:28;;;;;;;;;;;;;;;;;;;;:41;:28;;;;;:41;:118;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;6432:325:19:o;18137:2700::-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;18303:8:19;18336:7;18328:45;;;;-1:-1:-1;;;18328:45:19;;;;;;;;;18388:6;18384:2389;18404:3;18400:1;:7;18384:2389;;;18484:14;18501:8;;18510:1;18501:11;;;;;;;;;;;;;;;;;;;;;;18484:28;;18527:13;18542:11;18557:24;18574:6;18557:16;:24::i;:::-;18526:55;;;;18603:8;18595:42;;;;-1:-1:-1;;;18595:42:19;;;;;;;;;18660:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;:42;-1:-1:-1;;;18660:42:19;;;;18659:43;18651:92;;;;-1:-1:-1;;;18651:92:19;;;;;;;;;18830:35;18889:12;18902:5;18889:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18889:19:19;;;;-1:-1:-1;18931:42:19;;;;;18923:86;;;;-1:-1:-1;;;18923:86:19;;;;;;;;;19039:49;;-1:-1:-1;;;19039:49:19;;19023:13;;-1:-1:-1;;;;;19039:24:19;;;;;:49;;19072:14;;19039:49;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19039:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19039:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19039:49:19;;;;;;;;;19023:65;;19155:18;19176:14;-1:-1:-1;;;;;19176:27:19;;19204:6;19176:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19176:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19176:35:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19176:35:19;;;;;;;;;19155:56;-1:-1:-1;19228:14:19;;19225:117;;19262:65;;-1:-1:-1;;;19262:65:19;;-1:-1:-1;;;;;19262:23:19;;;;;:65;;19294:4;;19301:6;;19309:10;;19321:5;;19262:65;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19262:65:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19262:65:19;;;;19225:117;19410:9;;19407:102;;19438:56;;-1:-1:-1;;;19438:56:19;;-1:-1:-1;;;;;19438:26:19;;;;;:56;;19473:4;;19480:6;;19488:5;;19438:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19438:56:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19438:56:19;;;;19407:102;19522:13;19538:21;:10;19553:5;19538:21;:14;:21;:::i;:::-;19522:37;;19661:15;19639:12;19652:5;19639:19;;;;;;;;;;;;;;;;;;;:37;;-1:-1:-1;;;;;;19639:37:19;-1:-1:-1;;;;;19639:37:19;;;;;;19882:51;;:27;;19910:15;19927:5;19882:27;:51::i;:::-;20036:49;;-1:-1:-1;;;20036:49:19;;20006:15;;-1:-1:-1;;;;;20036:22:19;;;;;:49;;20059:6;;20067:10;;19947:35;;20036:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20036:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20036:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20036:49:19;;;;;;;;;-1:-1:-1;20158:35:19;;-1:-1:-1;;;20158:35:19;;20134:21;;-1:-1:-1;;;;;20158:27:19;;;;;:35;;20186:6;;20158:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20158:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20158:35:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20158:35:19;;;;;;;;;20134:59;;20207:16;20233:6;-1:-1:-1;;;;;20226:24:19;;20259:14;20226:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20226:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20226:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20226:49:19;;;;;;;;;20207:68;-1:-1:-1;20311:8:19;20356:7;20420:35;:10;20356:7;20420:35;:22;:35;:::i;:::-;20403:13;:52;;:124;;;;-1:-1:-1;20492:35:19;:10;20515:11;20492:35;:22;:35;:::i;:::-;20475:13;:52;;20403:124;20378:195;;;;-1:-1:-1;;;20378:195:19;;;;;;;;;20624:30;:5;20642:11;20624:30;:17;:30;:::i;:::-;20612:8;:42;;:104;;;;-1:-1:-1;20686:30:19;:5;20704:11;20686:30;:17;:30;:::i;:::-;20674:8;:42;;20612:104;20587:175;;;;-1:-1:-1;;;20587:175:19;;;;;;;;;-1:-1:-1;;18409:3:19;;;;;-1:-1:-1;18384:2389:19;;-1:-1:-1;;;;;;;;;18384:2389:19;;;20788:42;20804:8;;20814:15;20788:42;;;;;;;;;;;;;;;;;662:1:54;18137:2700:19;;;:::o;2249:29::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2249:29:19;;-1:-1:-1;2249:29:19;:::o;1676:117:57:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;1739:7;:14;;-1:-1:-1;;;;1739:14:57;-1:-1:-1;;;1739:14:57;;;1768:18;;;;;;1775:10;;1768:18;;6972:477:19;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;7222:14:19;2091:5:58;7253:190:19;7273:3;7269:1;:7;7253:190;;;7362:70;7413:15;;7429:1;7413:18;;;;;;;;;;;;;7362:6;:14;;7377;;7392:1;7377:17;;;;;;;;;;;;;;;;;;;;;;7362:33;;;;;;;;;:70;7297:6;7312:14;;7327:1;7312:17;;;;;;;;;;;;;;;;;;;;;;7297:33;;;;;;;;;;;;;;;;;;:46;:33;;;;;:46;:135;7278:3;;7253:190;;;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;;;;;;6972:477:19:o;31326:756::-;31470:20;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;31507:11;31520:9;31533:25;31550:7;31533:16;:25::i;:::-;31506:52;;;;;;31576:6;31568:46;;;;-1:-1:-1;;;31568:46:19;;;;;;;;;31625:22;31650:6;:14;;31665:1;31650:17;;;;;;;;;;;;;;;;;;;;:24;;-1:-1:-1;;;31650:24:19;;;;;-1:-1:-1;31721:9:19;:69;;31763:27;31721:69;;;31733:27;31721:69;31684:106;;31817:9;31804:22;;;;;;;;:9;:22;;;;;;;;;:55;;;;31830:29;31849:9;31830:18;:29::i;:::-;31801:96;;;31882:4;31875:11;;;;;;;;31801:96;31990:9;31963:6;:14;;31978:1;31963:17;;;;;;;;;;;;;;;;;;;;;:36;;-1:-1:-1;;;;31963:36:19;-1:-1:-1;;;31963:36:19;;;;;;;;;;;;;;32034:7;-1:-1:-1;;;;;32014:39:19;;32043:9;32014:39;;;;;;;;;;;;;;;32070:5;32063:12;;;;;;4040:1;31326:756;;;;:::o;32200:582::-;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;32300:11;32313:9;32326:25;32343:7;32326:16;:25::i;:::-;32299:52;;;;;;32369:6;32361:36;;;;-1:-1:-1;;;32361:36:19;;;;;;;;;32408:26;32437:6;:14;;32452:1;32437:17;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;32437:24:19;;;;;-1:-1:-1;32491:27:19;32474:13;:44;;;;;;;;;:104;;;-1:-1:-1;32551:27:19;32534:13;:44;;;;;;;;;32474:104;:161;;;-1:-1:-1;32611:24:19;32594:13;:41;;;;;;;;;32474:161;32471:305;;;32678:19;32651:6;:14;;32666:1;32651:17;;;;;;;;;;;;;;;;;;;;;:46;;-1:-1:-1;;;;32651:46:19;-1:-1:-1;;;32651:46:19;;;;;;;;;;;;;;32736:7;-1:-1:-1;;;;;32716:49:19;;32745:19;32716:49;;;;;;;;;;;;;;;4510:1;;;32200:582;:::o;2141:635:73:-;2314:28;;:::i;:::-;2384:15;;;2397:1;2384:15;;;;;;;;;2358:23;;2384:15;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;2440:16:73;;;2454:1;2440:16;;;;;;;;;2358:41;;-1:-1:-1;2409:28:73;;2440:16;;;;;;;105:10:-1;2440:16:73;88:34:-1;-1:-1;;2491:14:73;;;2503:1;2491:14;;;;;;;;;2409:47;;-1:-1:-1;2466:22:73;;2491:14;-1:-1:-1;2491:14:73;;;;;;105:10:-1;2491:14:73;88:34:-1;136:17;;-1:-1;;2515:23:73;;;;;;;;;2528:10;2515:23;;-1:-1:-1;;;;;2515:23:73;;;;2466:39;;-1:-1:-1;2515:23:73;;;;;;;-1:-1:-1;;;2515:23:73;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2515:23:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;;;-1:-1:-1;;2515:10:73;;;;;;;;;:23;;;;2573:1;2548:11;2560:1;2548:14;;;;;;;;;;;;;:27;-1:-1:-1;;;;;2548:27:73;;;-1:-1:-1;;;;;2548:27:73;;;;;2598:1;2585:7;2593:1;2585:10;;;;;;;;:14;;;;:10;;;;;;;;;;:14;2616:153;;;;;;;;-1:-1:-1;2616:153:73;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2141:635:73;;;;;;;;:::o;444:19:54:-;;;-1:-1:-1;;;;;444:19:54;;:::o;32908:472:19:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;32998:11:19;33011:9;33024:25;33041:7;33024:16;:25::i;:::-;32997:52;;;;;;33067:6;33059:36;;;;-1:-1:-1;;;33059:36:19;;;;;;;;;33106:26;33135:6;:14;;33150:1;33135:17;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;33135:24:19;;;;;-1:-1:-1;33207:27:19;33190:13;:44;;;;;;;;;:104;;;-1:-1:-1;33267:27:19;33250:13;:44;;;;;;;;;33190:104;33169:174;;;;-1:-1:-1;;;33169:174:19;;;;;;;;;-1:-1:-1;;33353:13:19;:20;;-1:-1:-1;;33353:20:19;;;;;-1:-1:-1;;32908:472:19:o;15262:639::-;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;15378:10;15390:11;15405:25;15422:7;15405:16;:25::i;:::-;15377:53;;;;15448:5;15440:39;;;;-1:-1:-1;;;15440:39:19;;;;;;;;;15534:5;15489:6;:14;;15504:5;15489:21;;;;;;;;;;;;;;;;;;;;;;;:50;;;;;-1:-1:-1;;;15489:50:19;-1:-1:-1;;;;15489:50:19;;;;;;;;;15550:295;;;;15648:11;15669:7;-1:-1:-1;;;;;15662:25:19;;15688:12;15701:5;15688:19;;;;;;;;;;;;;;;;;;;;15662:46;;-1:-1:-1;;;;;;15662:46:19;;;;;;;;;-1:-1:-1;;;;;15688:19:19;;15662:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15662:46:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15662:46:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15662:46:19;;;;;;;;;15648:60;-1:-1:-1;15725:7:19;;15722:113;;15772:12;15785:5;15772:19;;;;;;;;;;;;;;;;;;;;15751:69;;-1:-1:-1;;;15751:69:19;;-1:-1:-1;;;;;15772:19:19;;;;15751:49;;:69;;15801:7;;15810:3;;15772:19;;15751:69;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15751:69:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15751:69:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15751:69:19;;;;;;;;;;15722:113;15550:295;;15879:7;-1:-1:-1;;;;;15860:34:19;;15888:5;15860:34;;;;;;;1775:360:73;1903:12;1929:26;;:::i;:::-;1988:115;;;;;;;;;2024:10;1988:115;;-1:-1:-1;;;;;1988:115:73;;;;;;;;;;;;;;;;-1:-1:-1;;;1988:115:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2068:1;-1:-1:-1;;;;;1988:115:73;;;;;2091:1;1988:115;;;;;1980:123;;2123:5;2113:15;;1775:360;;;;;;:::o;24780:640:19:-;24975:24;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;25098:23;25123:22;25147:28;25179;25198:8;;25179:28;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;25179:18:19;;-1:-1:-1;;;25179:28:19:i;:::-;25097:110;;;;;;25225:188;;;;;;;;25260:4;25225:188;;;;;;25290:6;:14;;25225:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25225:188:19;;;;;;;;;;;;-1:-1:-1;;;25225:188:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25327:7;25225:188;;;;25361:11;25225:188;;;;25395:7;25225:188;;;25217:196;;4040:1;;;24780:640;;;;:::o;28812:276::-;28905:18;28940:11;28953;28968:25;28985:7;28968:16;:25::i;:::-;28939:54;;;;29011:6;29003:36;;;;-1:-1:-1;;;29003:36:19;;;;;;;;;29062:12;29075:5;29062:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29062:19:19;;28812:276;-1:-1:-1;;;;28812:276:19:o;1628:141:73:-;1709:15;;:::i;:::-;1749:13;;;1756:6;1749:13;;;;;;;;;;;;;;;;;;;;;1756:6;;1749:13;;;;1756:6;;-1:-1:-1;;1749:13:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1749:13:73;;;;;;;;;;;;-1:-1:-1;;;1749:13:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1749:13:73;;;-1:-1:-1;1749:13:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1628:141:73;:::o;5716:505:19:-;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;5994:14:19;2091:5:58;6025:190:19;6045:3;6041:1;:7;6025:190;;;6134:70;6185:15;;6201:1;6185:18;;;;;;;;;;;;;6134:6;:14;;6149;;6164:1;6149:17;;;;;;;;;;;;;;;;;;;;;;6134:33;;;;;;;;;;;;;;;;;;;;:46;;;:50;;:70;;;;:::i;:::-;6069:6;6084:14;;6099:1;6084:17;;;;;;;;;;;;;;;;;;;;;;6069:33;;;;;;;;;;;;;;;;;;:46;:33;;;;;:46;:135;6050:3;;6025:190;;5086:353;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;5370:6:19;:28;;:62;;5416:15;;2077:19:58;5370:28:19;;;;;;;;2055:20;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1993:18::-;;;-1:-1:-1;;;;;1993:18:19;;:::o;2884:970::-;1024:12:127;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:127;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:127;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:127;;;;;1225:18;1213:4;1225:18;;;1170:80;3164:42:19;:40;:42::i;:::-;3216:47;3256:6;3216:39;:47::i;:::-;-1:-1:-1;;;;;3282:18:19;;3274:50;;;;-1:-1:-1;;;3274:50:19;;;;;;;;;3342:19;3334:65;;;;-1:-1:-1;;;3334:65:19;;;;;;;;;3409:3;:10;;-1:-1:-1;;;;;3409:10:19;;-1:-1:-1;;;;;;3409:10:19;;;;;;3450:17;:22;;-1:-1:-1;;3450:22:19;3470:2;3450:22;;;3534:4;3502:29;:36;3409:3;3557:238;3577:19;;;3557:238;;;3617:167;3645:8;;3654:1;3645:11;;;;;;;;;;;;;;;;;;;;;;3674:12;;3687:1;3674:15;;;;;;;;;;;;;;;;;;;;;;3707:26;:24;:26::i;:::-;3751:16;;3768:1;3751:19;;;;;;;;;;;;;;;;;;;;;;3617:10;:167::i;:::-;-1:-1:-1;3598:3:19;;3557:238;;;;3804:43;3822:8;;3804:43;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3804:43:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3832:8:19;;-1:-1:-1;3832:8:19;;;;3804:43;;;3832:8;;3804:43;3832:8;3804:43;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3842:4:19;;-1:-1:-1;3804:17:19;;-1:-1:-1;;3804:43:19:i;:::-;1268:14:127;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:127;;;1264:55;2884:970:19;;;;;;;;;;;:::o;1905:93:54:-;1975:5;;:16;;;-1:-1:-1;;;1975:16:54;;;;1949:7;;-1:-1:-1;;;;;1975:5:54;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;1975:16:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1975:16:54;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1975:16:54;;;;;;;;;1968:23;;1905:93;:::o;1390:92:65:-;1046:3;1390:92;:::o;10914:1618:19:-;11103:11;-1:-1:-1;;;;;11138:21:19;;11130:62;;;;-1:-1:-1;;;11130:62:19;;;;;;;;;-1:-1:-1;;;;;11210:26:19;;11202:72;;;;-1:-1:-1;;;11202:72:19;;;;;;;;;11316:3;11292:20;:27;;:59;;;;;11347:4;11323:20;:28;;11292:59;11284:87;;;;-1:-1:-1;;;11284:87:19;;;;;;;;;11383:20;11409:25;11426:7;11409:16;:25::i;:::-;11382:52;;;11453:15;11452:16;11444:60;;;;-1:-1:-1;;;11444:60:19;;;;;;;;;11673:56;;-1:-1:-1;;;11673:56:19;;-1:-1:-1;;;;;11673:47:19;;;;;:56;;11721:7;;11673:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11673:56:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11673:56:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11673:56:19;;;;;;;;;;11740:23;11766:34;11792:7;11766:25;:34::i;:::-;11740:60;-1:-1:-1;11810:13:19;11826:32;11834:2;11740:60;11826:32;:15;:32;:::i;:::-;11810:48;-1:-1:-1;11869:13:19;11885:37;:20;11910:2;:11;;;11885:37;:24;:37;:::i;:::-;11971:6;:21;12037:17;;11869:53;;-1:-1:-1;11971:21:19;12037:17;;;;12011:43;;;;12003:77;;;;-1:-1:-1;;;12003:77:19;;;;;;;;;-1:-1:-1;;;;;12091:19:19;;;;;;;:10;:19;;;;;;;:45;;-1:-1:-1;;12091:45:19;;;;;;;12147:12;27:10:-1;;-1:-1;23:18;;;45:23;;12147:31:19;;;;;;;;;;-1:-1:-1;;;;;;12147:31:19;;;;;;;;;;;12208:224;;;;;;;;;;;12188:6;;12208:224;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12208:224:19;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;12188:245:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12188:245:19;-1:-1:-1;;;;;12188:245:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12188:245:19;-1:-1:-1;;;12188:245:19;;;;;;;;;;;;;-1:-1:-1;12188:245:19;;;;;;;;;;-1:-1:-1;;;12188:245:19;-1:-1:-1;;;;12188:245:19;;;;;;;;;;-1:-1:-1;12188:245:19;;;;;;;;;;;;;;;;;;;;;12449:34;-1:-1:-1;;;;;12449:34:19;;;-1:-1:-1;12449:34:19;;;;12470:12;;12449:34;;;;;;;;;;12502:23;10914:1618;-1:-1:-1;;;;;;;;;10914:1618:19:o;3354:104:54:-;3423:5;;3439:11;;3423:28;;-1:-1:-1;;;3423:28:54;;3397:7;;-1:-1:-1;;;;;3423:5:54;;:15;;:28;;3439:11;3423:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;16544:1231:19;16611:11;16624;16639:32;16656:14;16639:16;:32::i;:::-;16610:61;;;;16689:6;16681:40;;;;-1:-1:-1;;;16681:40:19;;;;;;;;;16746:6;:21;16777:20;;:::i;:::-;16800:6;:21;;;;;;;;;;;;;;;;;;;;;16777:44;;;;;;;;;16800:21;;;;;16777:44;;-1:-1:-1;;;;;16777:44:19;;;;;;16800:21;;16777:44;;;;;-1:-1:-1;;;16777:44:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16777:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16840:16;;;;;-1:-1:-1;16840:21:19;16832:71;;;;-1:-1:-1;;;16832:71:19;;;;;;;;;16921:19;;;;:24;16913:63;;;;-1:-1:-1;;;16913:63:19;;;;;;;;;17011:24;16994:6;:13;;;:41;;;;;;;;;;16986:75;;;;-1:-1:-1;;;16986:75:19;;;;;;;;;17072:15;17096:10;:3;17104:1;17096:10;:7;:10;:::i;:::-;17072:35;;17129:9;17120:18;;:5;:18;;;17117:610;;;17154:6;:20;;;;;;;;;;;;;;;;-1:-1:-1;;17154:20:19;;;;;;;;;-1:-1:-1;;;;;;17154:20:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17188:26:19;;;;:10;:26;;;;;;:30;;-1:-1:-1;;17188:30:19;;;17232:12;:18;;;;;;;;;;;;;;;;-1:-1:-1;;17232:18:19;;;;;-1:-1:-1;;;;;;17232:18:19;;;;;;17117:610;;;17337:6;:25;;;;;;;;;;;;;;;;;;;;;;17313:6;:14;;17328:5;17313:21;;;;;;;;;;;;;;;;;;:49;;:21;;;;;:49;;-1:-1:-1;;;;;;17313:49:19;-1:-1:-1;;;;;17313:49:19;;;;;;;;;;;;;-1:-1:-1;;;17313:49:19;;;;;;:21;;-1:-1:-1;;;;17313:49:19;;;;;;;;;;;;;;;;;-1:-1:-1;17313:49:19;;;;-1:-1:-1;;;;17313:49:19;-1:-1:-1;;;17313:49:19;;;;;;;;;;;;;;-1:-1:-1;17313:49:19;;;;;;;;;;;;;;;;;;;;;;;;;17376:6;:20;;;;;;;;;;;;;;;-1:-1:-1;;17376:20:19;;;;;;;;;-1:-1:-1;;;;;;17376:20:19;;;;;;;;;;;;;;;;;;;;17410:27;;:::i;:::-;17440:6;:21;;;;;;;;;;;;;;;;;;;;;17410:51;;;;;;;;;17440:21;;;;;17410:51;;-1:-1:-1;;;;;17410:51:19;;;;;;17440:21;;17410:51;;;;;-1:-1:-1;;;17410:51:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17410:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17508:26:19;;;-1:-1:-1;17508:26:19;;;;;;;;;;:30;;-1:-1:-1;;17508:30:19;;;;;;17563:18;;17552:30;;;;;;;;;:38;;;;;;;;;;;;17661:12;:23;;17563:18;;-1:-1:-1;17661:12:19;:23;;;;;;;;;;;;;;;;;;;;17639:12;:19;;-1:-1:-1;;;;;17661:23:19;;;;17639:19;;;;;;;;;;;;;;;;;;:45;;;;;-1:-1:-1;;;;;17639:45:19;;;;;-1:-1:-1;;;;;17639:45:19;;;;;;17698:12;:18;;;;;;;;;;;;;;;;-1:-1:-1;;17698:18:19;;;;;-1:-1:-1;;;;;;17698:18:19;;;;;;-1:-1:-1;17117:610:19;17756:11;;17742:26;;-1:-1:-1;;;;;17742:26:19;;;;;;17756:11;;17742:26;16544:1231;;;;;;:::o;13336:::-;13519:15;;13552;13544:54;;;;-1:-1:-1;;;13544:54:19;;;;;;;;;13631:8;:15;13616:11;:30;13608:73;;;;-1:-1:-1;;;13608:73:19;;;;;;;;;13697:9;13692:738;13716:11;13712:1;:15;13692:738;;;13749:11;13762;13777:29;13794:8;13803:1;13794:11;;;;;;;;;;;;;;13777:16;:29::i;:::-;13748:58;;;;13828:6;13820:36;;;;-1:-1:-1;;;13820:36:19;;;;;;;;;13871:20;;:::i;:::-;13894:17;13905:5;13894:10;:17::i;:::-;13871:40;;13926:20;13949:8;13958:1;13949:11;;;;;;;;;;;;;;13926:34;;13995:19;13978:36;;;;;;;;:6;:13;;;:36;;;;;;;;;13975:445;;;14079:4;14063:12;:20;;14034:119;;;;-1:-1:-1;;;14034:119:19;;;;;;;;;14205:12;14171:6;:14;;14186:5;14171:21;;;;;;;;;;;;;;;;;;;;:31;;:46;;;;13975:445;;;14301:6;:21;;;;;;;;;;;;;;;;;;;;;;:31;;;14285:12;:47;14256:149;;;;-1:-1:-1;;;14256:149:19;;;;;;;;;-1:-1:-1;;13729:3:19;;;;;-1:-1:-1;13692:738:19;;-1:-1:-1;13692:738:19;;;14444:12;14440:65;;14471:23;:21;:23::i;:::-;14520:40;14541:8;14551;14520:40;;;;;;;;29094:224;29177:23;29214:11;29260:6;:14;;29250:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29250:24:19;;;;;;;;;;;;-1:-1:-1;;;29250:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29290:6:19;:21;29250:24;;29290:21;;-1:-1:-1;29094:224:19;;-1:-1:-1;;;29094:224:19:o;834:176:116:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:116;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:116:o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;5166:177:65:-;5265:9;5297:39;5314:1;5317:5;1046:3;5297:16;:39::i;29862:379:19:-;-1:-1:-1;;;;;29999:18:19;;29951:11;29999:18;;;:10;:18;;;;;;;;;30030:10;30027:178;;30059:6;:21;30056:81;;-1:-1:-1;30113:5:19;;-1:-1:-1;30113:5:19;30105:17;;30056:81;30184:6;-1:-1:-1;;;;;30158:32:19;:6;:14;;30173:1;30158:17;;;;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;;;30158:22:19;:32;;;;;-1:-1:-1;30158:17:19;-1:-1:-1;30150:44:19;;30027:178;30222:4;;-1:-1:-1;29862:379:19;;;;:::o;29324:167::-;29411:20;;:::i;:::-;29456:6;:28;;;;;;;;;;;;;;;;;;;;;29447:37;;;;;;;;;29456:28;;;;;29447:37;;-1:-1:-1;;;;;29447:37:19;;;;;;29456:28;;29447:37;;;;;-1:-1:-1;;;29447:37:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29447:37:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29324:167:19:o;662:174:123:-;770:58;;744:85;;763:5;;-1:-1:-1;;;793:23:123;770:58;;818:2;;822:5;;770:58;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;770:58:123;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;770:58:123;;;179:29:-1;;;;160:49;;;744:18:123;:85::i;:::-;662:174;;;:::o;2257:161:65:-;2347:7;2377:34;2394:1;2397;644:4;2377:16;:34::i;30476:317:19:-;30573:4;30607:24;30596:7;:35;;;;;;;;;:85;;;-1:-1:-1;30658:23:19;30647:7;:34;;;;;;;;;30596:85;:131;;;-1:-1:-1;30708:19:19;30697:7;:30;;;;;;;;;30596:131;30593:172;;;-1:-1:-1;30750:4:19;30743:11;;30593:172;-1:-1:-1;30781:5:19;30476:317;;;;:::o;26756:1062::-;26871:23;26908:22;26944:28;26997:9;27015:8;:15;26997:34;;27065:3;27052:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;27042:27;;27107:3;27093:18;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27093:18:19;;27079:32;;27143:3;27131:16;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27131:16:19;-1:-1:-1;27121:26:19;-1:-1:-1;27199:7:19;27195:617;27216:3;27212:7;;:1;:7;;;27195:617;;;27240:15;27258:8;27267:1;27258:11;;;;;;;;;;;;;;;;27240:29;;27383:7;27393:1;27395;27393:3;27383:13;;27379:123;27402:3;27398:7;;:1;:7;;;27379:123;;;27448:8;27457:1;27448:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27437:22:19;:7;-1:-1:-1;;;;;27437:22:19;;;27429:58;;;;-1:-1:-1;;;27429:58:19;;;;;;;;;27407:3;;27379:123;;;;27568:11;27581;27596:25;27613:7;27596:16;:25::i;:::-;27567:54;;;;27643:6;27635:36;;;;-1:-1:-1;;;27635:36:19;;;;;;;;;27698:5;27685:7;27693:1;27685:10;;;;;;;;;;:18;;;;:10;;;;;;;;;:18;27730:6;:21;;:6;;:21;;;;;;;;;;;;;;;;;;27717:34;;;;;;;;;27730:21;;;;;27717:34;;-1:-1:-1;;;;;27717:34:19;;;;;;27730:21;;27717:34;;;;;-1:-1:-1;;;27717:34:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27717:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;:7;;:10;;;;;;;;;;;;;;:34;;;;27782:12;27795:5;27782:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27782:19:19;27765:11;27777:1;27765:14;;;;;;;;;;-1:-1:-1;;;;;27765:36:19;;;;:14;;;;;;;;;;;:36;-1:-1:-1;;;27221:3:19;;27195:617;;;;26756:1062;;;;;;:::o;1409:498:127:-;1820:4;1864:17;1895:7;1409:498;:::o;988:479:58:-;1442:11;:18;;-1:-1:-1;;;;1442:18:58;-1:-1:-1;;;1442:18:58;;;988:479::o;1224:127:57:-;1280:39;1312:6;1280:31;:39::i;:::-;-1:-1:-1;1329:7:57;:15;;-1:-1:-1;;;;1329:15:57;;;1224:127::o;479:268:50:-;551:7;570:16;601:6;-1:-1:-1;;;;;589:28:50;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;589:30:50;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;589:30:50;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;589:30:50;;;;;;;;;570:49;;;;649:1;637:8;:13;;:31;;;;;666:2;654:8;:14;;637:31;629:85;;;;-1:-1:-1;;;629:85:50;;;;;;;;2159:459:116;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:116;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:116;;;;;;;;14669:351:19;14740:6;:21;14726:11;;14802:112;14825:3;14821:1;:7;14802:112;;;14861:42;14875:6;:14;;14890:1;14875:17;;;;;;;;;;;;;;;;;;:27;;;14861:9;:13;;:42;;;;:::i;:::-;14849:54;-1:-1:-1;14830:3:19;;14802:112;;;;14944:4;14931:9;:17;;:38;;;;;14965:4;14952:9;:17;;14931:38;14923:90;;;;-1:-1:-1;;;14923:90:19;;;;;;;;;14669:351;;:::o;1732:187:116:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:116;;;;;;;;;;-1:-1:-1;;;1888:5:116;;;1732:187::o;2880:302:65:-;2990:7;;3101:8;:1;3107;3101:8;:5;:8;:::i;:::-;3089:20;-1:-1:-1;3163:12:65;3089:20;3169:5;3163:12;:5;:12;:::i;2666:1095:123:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:123;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:123;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:123;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:123;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:123;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:123;;;;;;;;1591:196:54;-1:-1:-1;;;;;1655:20:54;;1647:54;;;;-1:-1:-1;;;1647:54:54;;;;;;;;;1711:5;:22;;-1:-1:-1;;;;;;1711:22:54;-1:-1:-1;;;;;1711:22:54;;;;;1743:37;:35;:37::i;3073:130:116:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;686:610:124:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:124;;;686:610;-1:-1:-1;;686:610:124:o;1309:611:56:-;1531:23;;;;;;;;;;;;;;;1514:14;:40;1578:20;;;;;;;;;;;;;1564:11;:34;1626:23;;;;;;;;;;;;;1608:15;:41;1677:22;;;;;;;;;;;;;1660:14;:39;1723:20;;;;;;;;;;;;;1709:11;:34;1776:29;;;;;;;;;;;;;1753:20;:52;1832:22;;;;;;;;;;;;;1815:14;:39;1886:27;;;;;;;;;;;;;1864:19;:49;1309:611::o;3718:338:116:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:116;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:116:o;1166:1613:73:-;;;;;;;;;;-1:-1:-1;1166:1613:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1166:1613:73;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:352;;;431:3;424:4;416:6;412:17;408:27;398:2;;449:1;446;439:12;398:2;-1:-1;469:20;;-1:-1;;;;;498:30;;495:2;;;541:1;538;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;618:4;610:6;606:17;596:8;592:32;589:41;586:2;;;643:1;640;633:12;586:2;391:262;;;;;;1785:124;1849:20;;1874:30;1849:20;1874:30;;1916:128;1991:13;;2009:30;1991:13;2009:30;;2051:130;2118:20;;2143:33;2118:20;2143:33;;2188:134;2266:13;;2284:33;2266:13;2284:33;;2329:126;2394:20;;2419:31;2394:20;2419:31;;2462:130;2538:13;;2556:31;2538:13;2556:31;;2599:241;;2703:2;2691:9;2682:7;2678:23;2674:32;2671:2;;;2719:1;2716;2709:12;2671:2;2754:1;2771:53;2816:7;2796:9;2771:53;;2847:263;;2962:2;2950:9;2941:7;2937:23;2933:32;2930:2;;;2978:1;2975;2968:12;2930:2;3013:1;3030:64;3086:7;3066:9;3030:64;;3117:1487;;;;;;;;;;;3443:3;3431:9;3422:7;3418:23;3414:33;3411:2;;;3460:1;3457;3450:12;3411:2;3495:1;3512:53;3557:7;3537:9;3512:53;;;3502:63;;3474:97;3602:2;3620:53;3665:7;3656:6;3645:9;3641:22;3620:53;;;3610:63;;3581:98;3738:2;3727:9;3723:18;3710:32;-1:-1;;;;;3754:6;3751:30;3748:2;;;3794:1;3791;3784:12;3748:2;3822:80;3894:7;3885:6;3874:9;3870:22;3822:80;;;3812:90;;;;3689:219;3967:2;3956:9;3952:18;3939:32;-1:-1;;;;;3983:6;3980:30;3977:2;;;4023:1;4020;4013:12;3977:2;4051:80;4123:7;4114:6;4103:9;4099:22;4051:80;;;4041:90;;;;3918:219;4196:3;4185:9;4181:19;4168:33;-1:-1;;;;;4213:6;4210:30;4207:2;;;4253:1;4250;4243:12;4207:2;4281:80;4353:7;4344:6;4333:9;4329:22;4281:80;;;4271:90;;;;4147:220;4426:3;4415:9;4411:19;4398:33;-1:-1;;;;;4443:6;4440:30;4437:2;;;4483:1;4480;4473:12;4437:2;4511:77;4580:7;4571:6;4560:9;4556:22;4511:77;;;4501:87;;;;4377:217;3405:1199;;;;;;;;;;;;;;4611:485;;;;4746:2;4734:9;4725:7;4721:23;4717:32;4714:2;;;4762:1;4759;4752:12;4714:2;4797:1;4814:53;4859:7;4839:9;4814:53;;;4804:63;;4776:97;4904:2;4922:53;4967:7;4958:6;4947:9;4943:22;4922:53;;;4912:63;;4883:98;5012:2;5030:50;5072:7;5063:6;5052:9;5048:22;5030:50;;;5020:60;;4991:95;4708:388;;;;;;5103:360;;;5221:2;5209:9;5200:7;5196:23;5192:32;5189:2;;;5237:1;5234;5227:12;5189:2;5272:1;5289:53;5334:7;5314:9;5289:53;;;5279:63;;5251:97;5379:2;5397:50;5439:7;5430:6;5419:9;5415:22;5397:50;;;5387:60;;5358:95;5183:280;;;;;;5470:485;;;;5605:2;5593:9;5584:7;5580:23;5576:32;5573:2;;;5621:1;5618;5611:12;5573:2;5656:1;5673:53;5718:7;5698:9;5673:53;;;5663:63;;5635:97;5763:2;5781:53;5826:7;5817:6;5806:9;5802:22;5781:53;;5962:397;;;6101:2;6089:9;6080:7;6076:23;6072:32;6069:2;;;6117:1;6114;6107:12;6069:2;6152:31;;-1:-1;;;;;6192:30;;6189:2;;;6235:1;6232;6225:12;6189:2;6263:80;6335:7;6326:6;6315:9;6311:22;6263:80;;;6253:90;;;;6131:218;6063:296;;;;;;6366:522;;;;6522:2;6510:9;6501:7;6497:23;6493:32;6490:2;;;6538:1;6535;6528:12;6490:2;6573:31;;-1:-1;;;;;6613:30;;6610:2;;;6656:1;6653;6646:12;6610:2;6684:80;6756:7;6747:6;6736:9;6732:22;6684:80;;;6674:90;;;;6552:218;6801:2;6819:53;6864:7;6855:6;6844:9;6840:22;6819:53;;6895:678;;;;;7086:2;7074:9;7065:7;7061:23;7057:32;7054:2;;;7102:1;7099;7092:12;7054:2;7137:31;;-1:-1;;;;;7177:30;;7174:2;;;7220:1;7217;7210:12;7174:2;7248:80;7320:7;7311:6;7300:9;7296:22;7248:80;;;7238:90;;;;7116:218;7393:2;7382:9;7378:18;7365:32;-1:-1;;;;;7409:6;7406:30;7403:2;;;7449:1;7446;7439:12;7403:2;7477:80;7549:7;7540:6;7529:9;7525:22;7477:80;;;7048:525;;;;-1:-1;7467:90;-1:-1;;;;7048:525;7580:797;;;;;;7785:2;7773:9;7764:7;7760:23;7756:32;7753:2;;;7801:1;7798;7791:12;7753:2;7836:31;;-1:-1;;;;;7876:30;;7873:2;;;7919:1;7916;7909:12;7873:2;7947:80;8019:7;8010:6;7999:9;7995:22;7947:80;;;7937:90;;;;7815:218;8092:2;8081:9;8077:18;8064:32;-1:-1;;;;;8108:6;8105:30;8102:2;;;8148:1;8145;8138:12;8102:2;8176:80;8248:7;8239:6;8228:9;8224:22;8176:80;;;8166:90;;;;8043:219;8293:2;8311:50;8353:7;8344:6;8333:9;8329:22;8311:50;;;8301:60;;8272:95;7747:630;;;;;;;;;8384:955;;;;;;;8625:2;8613:9;8604:7;8600:23;8596:32;8593:2;;;8641:1;8638;8631:12;8593:2;8676:31;;-1:-1;;;;;8716:30;;8713:2;;;8759:1;8756;8749:12;8713:2;8787:78;8857:7;8848:6;8837:9;8833:22;8787:78;;;8777:88;;;;8655:216;8930:2;8919:9;8915:18;8902:32;-1:-1;;;;;8946:6;8943:30;8940:2;;;8986:1;8983;8976:12;8940:2;9014:80;9086:7;9077:6;9066:9;9062:22;9014:80;;;9004:90;;;;8881:219;9159:2;9148:9;9144:18;9131:32;-1:-1;;;;;9175:6;9172:30;9169:2;;;9215:1;9212;9205:12;9169:2;9243:80;9315:7;9306:6;9295:9;9291:22;9243:80;;;9233:90;;;;9110:219;8587:752;;;;;;;;;9346:235;;9447:2;9435:9;9426:7;9422:23;9418:32;9415:2;;;9463:1;9460;9453:12;9415:2;9498:1;9515:50;9557:7;9537:9;9515:50;;9588:257;;9700:2;9688:9;9679:7;9675:23;9671:32;9668:2;;;9716:1;9713;9706:12;9668:2;9751:1;9768:61;9821:7;9801:9;9768:61;;9852:241;;9956:2;9944:9;9935:7;9931:23;9927:32;9924:2;;;9972:1;9969;9962:12;9924:2;10007:1;10024:53;10069:7;10049:9;10024:53;;10100:263;;10215:2;10203:9;10194:7;10190:23;10186:32;10183:2;;;10231:1;10228;10221:12;10183:2;10266:1;10283:64;10339:7;10319:9;10283:64;;10370:237;;10472:2;10460:9;10451:7;10447:23;10443:32;10440:2;;;10488:1;10485;10478:12;10440:2;10523:1;10540:51;10583:7;10563:9;10540:51;;10614:259;;10727:2;10715:9;10706:7;10702:23;10698:32;10695:2;;;10743:1;10740;10733:12;10695:2;10778:1;10795:62;10849:7;10829:9;10795:62;;10880:487;;;;11016:2;11004:9;10995:7;10991:23;10987:32;10984:2;;;11032:1;11029;11022:12;10984:2;11067:1;11084:51;11127:7;11107:9;11084:51;;;11074:61;;11046:95;11172:2;11190:53;11235:7;11226:6;11215:9;11211:22;11190:53;;;11180:63;;11151:98;11280:2;11298:53;11343:7;11334:6;11323:9;11319:22;11298:53;;11375:173;;11462:46;11504:3;11496:6;11462:46;;;-1:-1;;11537:4;11528:14;;11455:93;11557:261;;11686:92;11774:3;11766:6;11686:92;;;-1:-1;;11807:4;11798:14;;11679:139;11827:173;;11914:46;11956:3;11948:6;11914:46;;12009:165;;12092:42;12130:3;12122:6;12092:42;;12182:142;12273:45;12312:5;12273:45;;;12268:3;12261:58;12255:69;;;12331:103;12404:24;12422:5;12404:24;;12592:665;;12746:86;12825:6;12820:3;12746:86;;;12739:93;;12853:58;12905:5;12853:58;;;12931:7;12959:1;12944:291;12969:6;12966:1;12963:13;12944:291;;;13030:42;13065:6;13056:7;13030:42;;;13086:63;13145:3;13130:13;13086:63;;;13079:70;;13166:62;13221:6;13166:62;;;13156:72;-1:-1;;12991:1;12984:9;12944:291;;;-1:-1;13248:3;;12726:531;-1:-1;;;;;12726:531;13296:690;;13441:54;13489:5;13441:54;;;13508:86;13587:6;13582:3;13508:86;;;13501:93;;13615:56;13665:5;13615:56;;;13691:7;13719:1;13704:260;13729:6;13726:1;13723:13;13704:260;;;13796:6;13790:13;13817:63;13876:3;13861:13;13817:63;;;13810:70;;13897:60;13950:6;13897:60;;;13887:70;-1:-1;;13751:1;13744:9;13704:260;;14025:654;;14156:50;14200:5;14156:50;;;14219:76;14288:6;14283:3;14219:76;;;14212:83;;14316:52;14362:5;14316:52;;;14388:7;14416:1;14401:256;14426:6;14423:1;14420:13;14401:256;;;14493:6;14487:13;14514:63;14573:3;14558:13;14514:63;;;14507:70;;14594:56;14643:6;14594:56;;;14584:66;-1:-1;;14448:1;14441:9;14401:256;;14752:858;;14939:75;15008:5;14939:75;;;15027:107;15127:6;15122:3;15027:107;;;15020:114;;15155:77;15226:5;15155:77;;;15252:7;15280:1;15265:323;15290:6;15287:1;15284:13;15265:323;;;15357:6;15351:13;15378:105;15479:3;15464:13;15378:105;;;15371:112;;15500:81;15574:6;15500:81;;;15490:91;-1:-1;;15312:1;15305:9;15265:323;;15683:822;;15856:71;15921:5;15856:71;;;15940:97;16030:6;16025:3;15940:97;;;15933:104;;16058:73;16125:5;16058:73;;;16151:7;16179:1;16164:319;16189:6;16186:1;16183:13;16164:319;;;16256:6;16250:13;16277:105;16378:3;16363:13;16277:105;;;16270:112;;16399:77;16469:6;16399:77;;;16389:87;-1:-1;;16211:1;16204:9;16164:319;;16544:690;;16689:54;16737:5;16689:54;;;16756:86;16835:6;16830:3;16756:86;;;16749:93;;16863:56;16913:5;16863:56;;;16939:7;16967:1;16952:260;16977:6;16974:1;16971:13;16952:260;;;17044:6;17038:13;17065:63;17124:3;17109:13;17065:63;;;17058:70;;17145:60;17198:6;17145:60;;;17135:70;-1:-1;;16999:1;16992:9;16952:260;;17269:638;;17396:48;17438:5;17396:48;;;17457:74;17524:6;17519:3;17457:74;;;17450:81;;17552:50;17596:5;17552:50;;;17622:7;17650:1;17635:250;17660:6;17657:1;17654:13;17635:250;;;17727:6;17721:13;17748:59;17803:3;17788:13;17748:59;;;17741:66;;17824:54;17871:6;17824:54;;;17814:64;-1:-1;;17682:1;17675:9;17635:250;;17915:94;17982:21;17997:5;17982:21;;18127:113;18210:24;18228:5;18210:24;;18247:356;;18375:38;18407:5;18375:38;;;18425:88;18506:6;18501:3;18425:88;;;18418:95;;18518:52;18563:6;18558:3;18551:4;18544:5;18540:16;18518:52;;;18582:16;;;;;18355:248;-1:-1;;18355:248;18610:156;18708:52;18754:5;18708:52;;18773:148;18862:53;18909:5;18862:53;;19093:347;;19205:39;19238:5;19205:39;;;19256:71;19320:6;19315:3;19256:71;;;19249:78;;19332:52;19377:6;19372:3;19365:4;19358:5;19354:16;19332:52;;;19405:29;19427:6;19405:29;;;19396:39;;;;19185:255;-1:-1;;;19185:255;19448:321;;19608:67;19672:2;19667:3;19608:67;;;-1:-1;;;19688:44;;19760:2;19751:12;;19594:175;-1:-1;;19594:175;19778:320;;19938:67;20002:2;19997:3;19938:67;;;-1:-1;;;20018:43;;20089:2;20080:12;;19924:174;-1:-1;;19924:174;20107:321;;20267:67;20331:2;20326:3;20267:67;;;-1:-1;;;20347:44;;20419:2;20410:12;;20253:175;-1:-1;;20253:175;20437:350;;20615:85;20697:2;20692:3;20615:85;;;-1:-1;;;20713:37;;20778:2;20769:12;;20601:186;-1:-1;;20601:186;20796:325;;20956:67;21020:2;21015:3;20956:67;;;21056:27;21036:48;;21112:2;21103:12;;20942:179;-1:-1;;20942:179;21130:326;;21290:67;21354:2;21349:3;21290:67;;;21390:28;21370:49;;21447:2;21438:12;;21276:180;-1:-1;;21276:180;21465:341;;21643:84;21725:1;21720:3;21643:84;;;-1:-1;;;21740:30;;21798:1;21789:11;;21629:177;-1:-1;;21629:177;21815:327;;21975:67;22039:2;22034:3;21975:67;;;22075:29;22055:50;;22133:2;22124:12;;21961:181;-1:-1;;21961:181;22151:328;;22311:67;22375:2;22370:3;22311:67;;;22411:30;22391:51;;22470:2;22461:12;;22297:182;-1:-1;;22297:182;22488:321;;22648:67;22712:2;22707:3;22648:67;;;-1:-1;;;22728:44;;22800:2;22791:12;;22634:175;-1:-1;;22634:175;22818:371;;22978:67;23042:2;23037:3;22978:67;;;23078:34;23058:55;;-1:-1;;;23142:2;23133:12;;23126:26;23180:2;23171:12;;22964:225;-1:-1;;22964:225;23198:326;;23358:67;23422:2;23417:3;23358:67;;;23458:28;23438:49;;23515:2;23506:12;;23344:180;-1:-1;;23344:180;23533:352;;23711:85;23793:2;23788:3;23711:85;;;-1:-1;;;23809:39;;23876:2;23867:12;;23697:188;-1:-1;;23697:188;23894:332;;24054:67;24118:2;24113:3;24054:67;;;24154:34;24134:55;;24217:2;24208:12;;24040:186;-1:-1;;24040:186;24235:315;;24395:67;24459:2;24454:3;24395:67;;;-1:-1;;;24475:38;;24541:2;24532:12;;24381:169;-1:-1;;24381:169;24559:323;;24719:67;24783:2;24778:3;24719:67;;;24819:25;24799:46;;24873:2;24864:12;;24705:177;-1:-1;;24705:177;24891:327;;25051:67;25115:2;25110:3;25051:67;;;25151:29;25131:50;;25209:2;25200:12;;25037:181;-1:-1;;25037:181;25227:325;;25387:67;25451:2;25446:3;25387:67;;;25487:27;25467:48;;25543:2;25534:12;;25373:179;-1:-1;;25373:179;25561:327;;25721:67;25785:2;25780:3;25721:67;;;25821:29;25801:50;;25879:2;25870:12;;25707:181;-1:-1;;25707:181;25897:325;;26057:67;26121:2;26116:3;26057:67;;;26157:27;26137:48;;26213:2;26204:12;;26043:179;-1:-1;;26043:179;26231:373;;26391:67;26455:2;26450:3;26391:67;;;26491:34;26471:55;;-1:-1;;;26555:2;26546:12;;26539:28;26595:2;26586:12;;26377:227;-1:-1;;26377:227;26613:316;;26773:67;26837:2;26832:3;26773:67;;;-1:-1;;;26853:39;;26920:2;26911:12;;26759:170;-1:-1;;26759:170;26938:341;;27116:84;27198:1;27193:3;27116:84;;;-1:-1;;;27213:30;;27271:1;27262:11;;27102:177;-1:-1;;27102:177;27288:321;;27448:67;27512:2;27507:3;27448:67;;;-1:-1;;;27528:44;;27600:2;27591:12;;27434:175;-1:-1;;27434:175;27618:378;;27778:67;27842:2;27837:3;27778:67;;;27878:34;27858:55;;-1:-1;;;27942:2;27933:12;;27926:33;27987:2;27978:12;;27764:232;-1:-1;;27764:232;28005:331;;28165:67;28229:2;28224:3;28165:67;;;28265:33;28245:54;;28327:2;28318:12;;28151:185;-1:-1;;28151:185;28345:343;;28523:84;28605:1;28600:3;28523:84;;;-1:-1;;;28620:32;;28680:1;28671:11;;28509:179;-1:-1;;28509:179;28697:370;;28857:67;28921:2;28916:3;28857:67;;;28957:34;28937:55;;-1:-1;;;29021:2;29012:12;;29005:25;29058:2;29049:12;;28843:224;-1:-1;;28843:224;29076:317;;29236:67;29300:2;29295:3;29236:67;;;-1:-1;;;29316:40;;29384:2;29375:12;;29222:171;-1:-1;;29222:171;29402:346;;29580:85;29662:2;29657:3;29580:85;;;-1:-1;;;29678:33;;29739:2;29730:12;;29566:182;-1:-1;;29566:182;29757:328;;29917:67;29981:2;29976:3;29917:67;;;30017:30;29997:51;;30076:2;30067:12;;29903:182;-1:-1;;29903:182;30094:346;;30272:85;30354:2;30349:3;30272:85;;;-1:-1;;;30370:33;;30431:2;30422:12;;30258:182;-1:-1;;30258:182;30449:331;;30609:67;30673:2;30668:3;30609:67;;;30709:33;30689:54;;30771:2;30762:12;;30595:185;-1:-1;;30595:185;30789:383;;30949:67;31013:2;31008:3;30949:67;;;31049:34;31029:55;;-1:-1;;;31113:2;31104:12;;31097:38;31163:2;31154:12;;30935:237;-1:-1;;30935:237;31181:323;;31341:67;31405:2;31400:3;31341:67;;;31441:25;31421:46;;31495:2;31486:12;;31327:177;-1:-1;;31327:177;31513:320;;31673:67;31737:2;31732:3;31673:67;;;-1:-1;;;31753:43;;31824:2;31815:12;;31659:174;-1:-1;;31659:174;31842:330;;32002:67;32066:2;32061:3;32002:67;;;32102:32;32082:53;;32163:2;32154:12;;31988:184;-1:-1;;31988:184;32181:370;;32341:67;32405:2;32400:3;32341:67;;;32441:34;32421:55;;-1:-1;;;32505:2;32496:12;;32489:25;32542:2;32533:12;;32327:224;-1:-1;;32327:224;32560:379;;32720:67;32784:2;32779:3;32720:67;;;32820:34;32800:55;;-1:-1;;;32884:2;32875:12;;32868:34;32930:2;32921:12;;32706:233;-1:-1;;32706:233;32948:319;;33108:67;33172:2;33167:3;33108:67;;;-1:-1;;;33188:42;;33258:2;33249:12;;33094:173;-1:-1;;33094:173;33276:331;;33436:67;33500:2;33495:3;33436:67;;;33536:33;33516:54;;33598:2;33589:12;;33422:185;-1:-1;;33422:185;33616:321;;33776:67;33840:2;33835:3;33776:67;;;-1:-1;;;33856:44;;33928:2;33919:12;;33762:175;-1:-1;;33762:175;33946:331;;34106:67;34170:2;34165:3;34106:67;;;34206:33;34186:54;;34268:2;34259:12;;34092:185;-1:-1;;34092:185;34286:370;;34446:67;34510:2;34505:3;34446:67;;;34546:34;34526:55;;-1:-1;;;34610:2;34601:12;;34594:25;34647:2;34638:12;;34432:224;-1:-1;;34432:224;34665:376;;34825:67;34889:2;34884:3;34825:67;;;34925:34;34905:55;;-1:-1;;;34989:2;34980:12;;34973:31;35032:2;35023:12;;34811:230;-1:-1;;34811:230;35050:343;;35228:84;35310:1;35305:3;35228:84;;;-1:-1;;;35325:32;;35385:1;35376:11;;35214:179;-1:-1;;35214:179;35402:331;;35562:67;35626:2;35621:3;35562:67;;;35662:33;35642:54;;35724:2;35715:12;;35548:185;-1:-1;;35548:185;35742:374;;35902:67;35966:2;35961:3;35902:67;;;36002:34;35982:55;;-1:-1;;;36066:2;36057:12;;36050:29;36107:2;36098:12;;35888:228;-1:-1;;35888:228;36183:1125;36403:23;;36334:4;36439:38;;;36183:1125;;36325:14;;;;36492:141;36325:14;36403:23;36492:141;;;36484:149;;36354:291;36724:4;36717:5;36713:16;36707:23;36736:59;36789:4;36784:3;36780:14;36766:12;36736:59;;;36655:146;36885:4;36878:5;36874:16;36868:23;36897:57;36948:4;36943:3;36939:14;36925:12;36897:57;;;36811:149;37035:4;37028:5;37024:16;37018:23;37047:57;37098:4;37093:3;37089:14;37075:12;37047:57;;;36970:140;37201:4;37194:5;37190:16;37184:23;37213:63;37270:4;37265:3;37261:14;37247:12;37213:63;;;-1:-1;37299:4;36307:1001;-1:-1;;;36307:1001;37388:697;37615:23;;37545:6;37536:16;;;37644:109;37540:3;37615:23;37644:109;;;37567:192;37838:4;37831:5;37827:16;37821:23;37850:63;37907:4;37902:3;37898:14;37884:12;37850:63;;;37769:150;37993:4;37986:5;37982:16;37976:23;38005:59;38058:4;38053:3;38049:14;38035:12;38005:59;;38151:1134;38360:23;;38294:4;38285:14;;;38389:63;38289:3;38360:23;38389:63;;;38314:144;38533:4;38526:5;38522:16;38516:23;38545:79;38618:4;38613:3;38609:14;38595:12;38545:79;;;38468:162;38719:4;38712:5;38708:16;38702:23;38731:57;38782:4;38777:3;38773:14;38759:12;38731:57;;;38640:154;38868:4;38861:5;38857:16;38851:23;38880:63;38937:4;38932:3;38928:14;38914:12;38880:63;;;38804:145;39027:4;39020:5;39016:16;39010:23;39039:63;39096:4;39091:3;39087:14;39073:12;39039:63;;;38959:149;39189:4;39182:5;39178:16;39172:23;39201:63;39258:4;39253:3;39249:14;39235:12;39201:63;;40555:1175;40793:23;;40555:1175;;40724:4;40715:14;;;40822:57;40719:3;40793:23;40822:57;;;40744:141;40961:4;40954:5;40950:16;40944:23;41013:3;41007:4;41003:14;40996:4;40991:3;40987:14;40980:38;41033:141;41169:4;41155:12;41033:141;;;41025:149;;40895:291;41266:4;41259:5;41255:16;41249:23;41318:3;41312:4;41308:14;41301:4;41296:3;41292:14;41285:38;41338:99;41432:4;41418:12;41338:99;;;41330:107;;41196:253;41525:4;41518:5;41514:16;41508:23;41577:3;41571:4;41567:14;41560:4;41555:3;41551:14;41544:38;41597:95;41687:4;41673:12;41597:95;;41816:1184;42057:23;;41816:1184;;41987:4;41978:14;;;42086:63;41982:3;42057:23;42086:63;;43076:1471;43306:23;;43076:1471;;43237:4;43228:14;;;43335:57;43232:3;43306:23;43335:57;;;43257:141;43477:4;43470:5;43466:16;43460:23;43529:3;43523:4;43519:14;43512:4;43507:3;43503:14;43496:38;43549:141;43685:4;43671:12;43549:141;;;43541:149;;43408:294;43778:4;43771:5;43767:16;43761:23;43830:3;43824:4;43820:14;43813:4;43808:3;43804:14;43797:38;43850:141;43986:4;43972:12;43850:141;;;43842:149;;43712:291;44083:4;44076:5;44072:16;44066:23;44135:3;44129:4;44125:14;44118:4;44113:3;44109:14;44102:38;44155:99;44249:4;44235:12;44155:99;;;44147:107;;44013:253;44342:4;44335:5;44331:16;44325:23;44394:3;44388:4;44384:14;44377:4;44372:3;44368:14;44361:38;44414:95;44504:4;44490:12;44414:95;;44784:97;44853:22;44869:5;44853:22;;45002:262;;45146:93;45235:3;45226:6;45146:93;;45271:372;;45470:148;45614:3;45470:148;;45650:372;;45849:148;45993:3;45849:148;;46029:372;;46228:148;46372:3;46228:148;;46408:372;;46607:148;46751:3;46607:148;;46787:372;;46986:148;47130:3;46986:148;;47166:372;;47365:148;47509:3;47365:148;;47545:372;;47744:148;47888:3;47744:148;;47924:372;;48123:148;48267:3;48123:148;;48303:213;48421:2;48406:18;;48435:71;48410:9;48479:6;48435:71;;48523:229;48649:2;48634:18;;48663:79;48638:9;48715:6;48663:79;;48759:435;48933:2;48918:18;;48947:71;48922:9;48991:6;48947:71;;;49029:72;49097:2;49086:9;49082:18;49073:6;49029:72;;;49112;49180:2;49169:9;49165:18;49156:6;49112:72;;49201:535;49397:3;49382:19;;49412:71;49386:9;49456:6;49412:71;;;49494:72;49562:2;49551:9;49547:18;49538:6;49494:72;;;49577;49645:2;49634:9;49630:18;49621:6;49577:72;;;49660:66;49722:2;49711:9;49707:18;49698:6;49660:66;;49743:324;49889:2;49874:18;;49903:71;49878:9;49947:6;49903:71;;;49985:72;50053:2;50042:9;50038:18;50029:6;49985:72;;50074:423;50242:2;50227:18;;50256:71;50231:9;50300:6;50256:71;;;50338:72;50406:2;50395:9;50391:18;50382:6;50338:72;;;50421:66;50483:2;50472:9;50468:18;50459:6;50421:66;;50504:492;50710:2;50724:47;;;50695:18;;50785:118;50695:18;50889:6;50881;50785:118;;;50777:126;;50914:72;50982:2;50971:9;50967:18;50958:6;50914:72;;51003:620;51249:2;51263:47;;;51234:18;;51324:108;51234:18;51418:6;51324:108;;;51316:116;;51480:9;51474:4;51470:20;51465:2;51454:9;51450:18;51443:48;51505:108;51608:4;51599:6;51505:108;;51630:556;51868:2;51882:47;;;51853:18;;51943:150;51853:18;52079:6;51943:150;;;51935:158;;52104:72;52172:2;52161:9;52157:18;52148:6;52104:72;;52193:201;52305:2;52290:18;;52319:65;52294:9;52357:6;52319:65;;52401:880;52745:3;52730:19;;52760:65;52734:9;52798:6;52760:65;;;52873:9;52867:4;52863:20;52858:2;52847:9;52843:18;52836:48;52898:78;52971:4;52962:6;52898:78;;;52890:86;;52987:136;53119:2;53108:9;53104:18;53095:6;52987:136;;;53134:137;53266:3;53255:9;53251:19;53242:6;53134:137;;53288:441;53492:3;53477:19;;53507:65;53481:9;53545:6;53507:65;;;53583:136;53715:2;53704:9;53700:18;53691:6;53583:136;;53736:213;53854:2;53839:18;;53868:71;53843:9;53912:6;53868:71;;53956:243;54089:2;54074:18;;54103:86;54078:9;54162:6;54103:86;;54206:245;54340:2;54325:18;;54354:87;54329:9;54414:6;54354:87;;54458:301;54596:2;54610:47;;;54581:18;;54671:78;54581:18;54735:6;54671:78;;54766:407;54957:2;54971:47;;;54942:18;;55032:131;54942:18;55032:131;;55180:407;55371:2;55385:47;;;55356:18;;55446:131;55356:18;55446:131;;55594:407;55785:2;55799:47;;;55770:18;;55860:131;55770:18;55860:131;;56008:407;56199:2;56213:47;;;56184:18;;56274:131;56184:18;56274:131;;56422:407;56613:2;56627:47;;;56598:18;;56688:131;56598:18;56688:131;;56836:407;57027:2;57041:47;;;57012:18;;57102:131;57012:18;57102:131;;57250:407;57441:2;57455:47;;;57426:18;;57516:131;57426:18;57516:131;;57664:407;57855:2;57869:47;;;57840:18;;57930:131;57840:18;57930:131;;58078:407;58269:2;58283:47;;;58254:18;;58344:131;58254:18;58344:131;;58492:407;58683:2;58697:47;;;58668:18;;58758:131;58668:18;58758:131;;58906:407;59097:2;59111:47;;;59082:18;;59172:131;59082:18;59172:131;;59320:407;59511:2;59525:47;;;59496:18;;59586:131;59496:18;59586:131;;59734:407;59925:2;59939:47;;;59910:18;;60000:131;59910:18;60000:131;;60148:407;60339:2;60353:47;;;60324:18;;60414:131;60324:18;60414:131;;60562:407;60753:2;60767:47;;;60738:18;;60828:131;60738:18;60828:131;;60976:407;61167:2;61181:47;;;61152:18;;61242:131;61152:18;61242:131;;61390:407;61581:2;61595:47;;;61566:18;;61656:131;61566:18;61656:131;;61804:407;61995:2;62009:47;;;61980:18;;62070:131;61980:18;62070:131;;62218:407;62409:2;62423:47;;;62394:18;;62484:131;62394:18;62484:131;;62632:407;62823:2;62837:47;;;62808:18;;62898:131;62808:18;62898:131;;63046:407;63237:2;63251:47;;;63222:18;;63312:131;63222:18;63312:131;;63460:407;63651:2;63665:47;;;63636:18;;63726:131;63636:18;63726:131;;63874:407;64065:2;64079:47;;;64050:18;;64140:131;64050:18;64140:131;;64288:407;64479:2;64493:47;;;64464:18;;64554:131;64464:18;64554:131;;64702:407;64893:2;64907:47;;;64878:18;;64968:131;64878:18;64968:131;;65116:407;65307:2;65321:47;;;65292:18;;65382:131;65292:18;65382:131;;65530:407;65721:2;65735:47;;;65706:18;;65796:131;65706:18;65796:131;;65944:407;66135:2;66149:47;;;66120:18;;66210:131;66120:18;66210:131;;66358:407;66549:2;66563:47;;;66534:18;;66624:131;66534:18;66624:131;;66772:407;66963:2;66977:47;;;66948:18;;67038:131;66948:18;67038:131;;67186:407;67377:2;67391:47;;;67362:18;;67452:131;67362:18;67452:131;;67600:407;67791:2;67805:47;;;67776:18;;67866:131;67776:18;67866:131;;68014:407;68205:2;68219:47;;;68190:18;;68280:131;68190:18;68280:131;;68428:407;68619:2;68633:47;;;68604:18;;68694:131;68604:18;68694:131;;68842:407;69033:2;69047:47;;;69018:18;;69108:131;69018:18;69108:131;;69256:407;69447:2;69461:47;;;69432:18;;69522:131;69432:18;69522:131;;69670:407;69861:2;69875:47;;;69846:18;;69936:131;69846:18;69936:131;;70084:407;70275:2;70289:47;;;70260:18;;70350:131;70260:18;70350:131;;70498:407;70689:2;70703:47;;;70674:18;;70764:131;70674:18;70764:131;;70912:407;71103:2;71117:47;;;71088:18;;71178:131;71088:18;71178:131;;71326:361;71494:2;71508:47;;;71479:18;;71569:108;71479:18;71663:6;71569:108;;71694:314;71862:3;71847:19;;71877:121;71851:9;71971:6;71877:121;;72015:397;72201:2;72215:47;;;72186:18;;72276:126;72186:18;72388:6;72276:126;;72419:401;72607:2;72621:47;;;72592:18;;72682:128;72592:18;72796:6;72682:128;;72827:381;73005:2;73019:47;;;72990:18;;73080:118;72990:18;73184:6;73080:118;;73215:472;73411:2;73396:18;;73425:71;73400:9;73469:6;73425:71;;;73544:9;73538:4;73534:20;73529:2;73518:9;73514:18;73507:48;73569:108;73672:4;73663:6;73569:108;;73694:205;73808:2;73793:18;;73822:67;73797:9;73862:6;73822:67;;73906:515;74092:3;74077:19;;74107:67;74081:9;74147:6;74107:67;;;74185:66;74247:2;74236:9;74232:18;74223:6;74185:66;;;74262;74324:2;74313:9;74309:18;74300:6;74262:66;;;74339:72;74407:2;74396:9;74392:18;74383:6;74339:72;;74428:118;74516:3;74502:44;74553:147;74673:4;74664:14;;74621:79;75529:133;75628:12;;75599:63;77514:168;77622:19;;;77671:4;77662:14;;77615:67;79125:119;;79199:39;79234:2;79229:3;79225:12;79220:3;79199:39;;79252:91;;79314:24;79332:5;79314:24;;79350:85;79416:13;79409:21;;79392:43;79521:142;79601:5;79607:51;79601:5;79607:51;;79670:121;-1:-1;;;;;79732:54;;79715:76;79877:81;79948:4;79937:16;;79920:38;79965:129;;80052:37;80083:5;80101:151;;80195:52;80241:5;80195:52;;80389:142;;80484:42;80520:5;80484:42;;80782:268;80847:1;80854:101;80868:6;80865:1;80862:13;80854:101;;;80935:11;;;80929:18;80916:11;;;80909:39;80890:2;80883:10;80854:101;;;80970:6;80967:1;80964:13;80961:2;;;-1:-1;;81035:1;81017:16;;81010:27;80831:219;81058:97;81146:2;81126:14;-1:-1;;81122:28;;81106:49;81163:109;81250:1;81243:5;81240:12;81230:2;;81256:9;81279:117;81348:24;81366:5;81348:24;;;81341:5;81338:35;81328:2;;81387:1;81384;81377:12;81403:111;81469:21;81484:5;81469:21;;81521:117;81590:24;81608:5;81590:24;;81645:113;81712:22;81728:5;81712:22;",
  "source": "pragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { BasketManager } from \"../../mix/BasketManager.sol\";\nimport { MixStructs } from \"../../mix/shared/MixStructs.sol\";\nimport { BasketManager } from \"../../mix/BasketManager.sol\";\nimport { StableMath } from \"../../shared/StableMath.sol\";\n\n// This mock allows the direct setting of basket properties\ncontract MockBasketManager is BasketManager {\n\n    function setBasket(bool failed, uint256 colRatio)\n        external\n    {\n        basket.failed = failed;\n        basket.collateralisationRatio = colRatio;\n    }\n    function setBassetStatus(address bAsset, BassetStatus newStatus)\n        external\n    {\n        (, uint8 index) = _isAssetInBasket(bAsset);\n        basket.bassets[index].status = newStatus;\n    }\n    function setBassetRatio(address bAsset, uint256 _newRatio)\n        external\n    {\n        (, uint8 index) = _isAssetInBasket(bAsset);\n        basket.bassets[index].ratio = _newRatio;\n    }\n    function setRecol(bool undergoingRecol)\n        external\n    {\n        basket.undergoingRecol = undergoingRecol;\n    }\n}\n\n\n\n// This mock returns an invalid forge from the prepareForgeBasset call\ncontract MockBasketManager1 is BasketManager {\n\n    Basset private testBasset;\n    Basket private testBasket;\n\n    constructor(address _bAsset) public {\n        testBasset = Basset({\n            addr: _bAsset,\n            ratio: StableMath.getRatioScale(),\n            maxWeight: 0,\n            vaultBalance: 0,\n            status: BassetStatus.Normal,\n            isTransferFeeCharged: false\n        });\n        basket.collateralisationRatio = 1e18;\n    }\n\n    function getBasket()\n        external\n        view\n        returns (\n            Basket memory b\n        )\n    {\n        return basket;\n    }\n\n    function prepareForgeBasset(address /*_amts*/, uint256 /*_amt*/, bool /*_mint*/)\n        external\n        returns (\n            bool isValid,\n            BassetDetails memory bInfo\n        )\n    {\n        bInfo = BassetDetails({\n            bAsset: testBasset,\n            integrator: address(0),\n            index: 0\n        });\n        isValid = false;\n    }\n\n    function prepareForgeBassets(\n        address[] calldata /*_amts*/,\n        uint256[] calldata /*_amts*/,\n        bool /* _isMint */\n    )\n        external\n        returns (ForgePropsMulti memory props)\n    {\n        Basset[] memory bAssets = new Basset[](1);\n        address[] memory integrators = new address[](1);\n        uint8[] memory indexes = new uint8[](1);\n        bAssets[0] = testBasset;\n        integrators[0] = address(0);\n        indexes[0] = 0;\n        return ForgePropsMulti({\n            isValid: false,\n            bAssets: bAssets,\n            integrators: integrators,\n            indexes: indexes\n        });\n    }\n\n}\n\n\n// This mock returns an invalid integrator from the prepareForgeBasset call\ncontract MockBasketManager2 is MixStructs {\n\n    Basset private testBasset;\n\n    constructor(address _bAsset) public {\n        testBasset = Basset({\n            addr: _bAsset,\n            ratio: StableMath.getRatioScale(),\n            maxWeight: 0,\n            vaultBalance: 0,\n            status: BassetStatus.Normal,\n            isTransferFeeCharged: false\n        });\n    }\n\n    function prepareForgeBasset(address /*_token*/, uint256 /*_amt*/, bool /*_mint*/)\n        external\n        returns (\n            bool isValid,\n            BassetDetails memory bInfo\n        )\n    {\n        bInfo = BassetDetails({\n            bAsset: testBasset,\n            integrator: address(0),\n            index: 0\n        });\n        isValid = true;\n    }\n\n    function prepareForgeBassets(\n        address[] calldata /*bassets*/,\n        uint256[] calldata /*_amts*/,\n        bool /* _isMint */\n    )\n        external\n        returns (ForgePropsMulti memory props)\n    {\n        Basset[] memory bAssets = new Basset[](1);\n        address[] memory integrators = new address[](1);\n        uint8[] memory indexes = new uint8[](1);\n        bAssets[0] = testBasset;\n        integrators[0] = address(0);\n        indexes[0] = 0;\n        return ForgePropsMulti({\n            isValid: true,\n            bAssets: bAssets,\n            integrators: integrators,\n            indexes: indexes\n        });\n    }\n}\n\ncontract MockBasketManager3 is BasketManager {\n    function failBasket() public {\n        basket.failed = true;\n    }\n\n    function setBassetStatus(address _bAsset, BassetStatus _status) public {\n        (bool exists, uint8 index) = _isAssetInBasket(_bAsset);\n        require(exists, \"bAsset does not exist\");\n        basket.bassets[index].status = _status;\n    }\n\n}\n\n",
  "sourcePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
  "ast": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
    "exportedSymbols": {
      "MockBasketManager": [
        23476
      ],
      "MockBasketManager1": [
        23616
      ],
      "MockBasketManager2": [
        23740
      ],
      "MockBasketManager3": [
        23783
      ]
    },
    "id": 23784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23386,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:73"
      },
      {
        "id": 23387,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:73"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23389,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "59:60:73",
        "symbolAliases": [
          {
            "foreign": 23388,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol",
        "file": "../../mix/shared/MixStructs.sol",
        "id": 23391,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 13644,
        "src": "120:61:73",
        "symbolAliases": [
          {
            "foreign": 23390,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23393,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "182:60:73",
        "symbolAliases": [
          {
            "foreign": 23392,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol",
        "file": "../../shared/StableMath.sol",
        "id": 23395,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 22201,
        "src": "243:57:73",
        "symbolAliases": [
          {
            "foreign": 23394,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23396,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "392:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23397,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23476,
        "linearizedBaseContracts": [
          23476,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23416,
              "nodeType": "Block",
              "src": "484:89:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23404,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "494:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "494:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23407,
                      "name": "failed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23399,
                      "src": "510:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "494:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23409,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23410,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "526:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "526:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23413,
                      "name": "colRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23401,
                      "src": "558:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "526:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23415,
                  "nodeType": "ExpressionStatement",
                  "src": "526:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23399,
                  "name": "failed",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "432:11:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "name": "colRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "445:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:31:73"
            },
            "returnParameters": {
              "id": 23403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:73"
            },
            "scope": 23476,
            "src": "413:160:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23439,
              "nodeType": "Block",
              "src": "664:109:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23425
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23425,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23439,
                      "src": "677:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23424,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23427,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "709:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23426,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "692:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23430,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "726:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "726:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23434,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23432,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23425,
                          "src": "741:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "726:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "726:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23436,
                      "name": "newStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23421,
                      "src": "757:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "726:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23438,
                  "nodeType": "ExpressionStatement",
                  "src": "726:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "603:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "newStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "619:22:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "619:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:40:73"
            },
            "returnParameters": {
              "id": 23423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:73"
            },
            "scope": 23476,
            "src": "578:195:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23462,
              "nodeType": "Block",
              "src": "858:108:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23448
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23448,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23462,
                      "src": "871:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23450,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23442,
                        "src": "903:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23449,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "886:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23453,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "920:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23456,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "920:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23457,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23455,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23448,
                          "src": "935:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "920:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ratio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "920:27:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23459,
                      "name": "_newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23444,
                      "src": "950:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:39:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23461,
                  "nodeType": "ExpressionStatement",
                  "src": "920:39:73"
                }
              ]
            },
            "documentation": null,
            "id": 23463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23442,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "802:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23444,
                  "name": "_newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "818:17:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:35:73"
            },
            "returnParameters": {
              "id": 23446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:73"
            },
            "scope": 23476,
            "src": "778:188:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23474,
              "nodeType": "Block",
              "src": "1032:57:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23468,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1042:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "undergoingRecol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13569,
                      "src": "1042:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23471,
                      "name": "undergoingRecol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23465,
                      "src": "1067:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1042:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23473,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRecol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23465,
                  "name": "undergoingRecol",
                  "nodeType": "VariableDeclaration",
                  "scope": 23475,
                  "src": "989:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "988:22:73"
            },
            "returnParameters": {
              "id": 23467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:73"
            },
            "scope": 23476,
            "src": "971:118:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "362:729:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23477,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "1197:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23478,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23616,
        "linearizedBaseContracts": [
          23616,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23480,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1218:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23479,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "1218:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23482,
            "name": "testBasket",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1249:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basket_$13574_storage",
              "typeString": "struct MixStructs.Basket"
            },
            "typeName": {
              "contractScope": null,
              "id": 23481,
              "name": "Basket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13574,
              "src": "1249:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                "typeString": "struct MixStructs.Basket"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23507,
              "nodeType": "Block",
              "src": "1317:305:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23487,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "1327:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23489,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23484,
                          "src": "1367:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23490,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "1395:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "1395:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23495,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "1498:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1553:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23488,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "1340:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1340:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "1327:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23500,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:242:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23501,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1579:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "1579:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 23504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1579:36:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23506,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:36:73"
                }
              ]
            },
            "documentation": null,
            "id": 23508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23484,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23508,
                  "src": "1293:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:17:73"
            },
            "returnParameters": {
              "id": 23486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:73"
            },
            "scope": 23616,
            "src": "1281:341:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23515,
              "nodeType": "Block",
              "src": "1739:30:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23513,
                    "name": "basket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4148,
                    "src": "1756:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage",
                      "typeString": "struct MixStructs.Basket storage ref"
                    }
                  },
                  "functionReturnParameters": 23512,
                  "id": 23514,
                  "nodeType": "Return",
                  "src": "1749:13:73"
                }
              ]
            },
            "documentation": null,
            "id": 23516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:73"
            },
            "returnParameters": {
              "id": 23512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23511,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 23516,
                  "src": "1709:15:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Basket_$13574_memory_ptr",
                    "typeString": "struct MixStructs.Basket"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23510,
                    "name": "Basket",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13574,
                    "src": "1709:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                      "typeString": "struct MixStructs.Basket"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:39:73"
            },
            "scope": 23616,
            "src": "1628:141:73",
            "stateMutability": "view",
            "superFunction": 5469,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23543,
              "nodeType": "Block",
              "src": "1970:165:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23529,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23527,
                      "src": "1980:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23531,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23480,
                          "src": "2024:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23530,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "1988:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1988:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "1980:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23539,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23525,
                      "src": "2113:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 23540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:5:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2113:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:15:73"
                }
              ]
            },
            "documentation": null,
            "id": 23544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1803:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1822:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1840:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:53:73"
            },
            "returnParameters": {
              "id": 23528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1903:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1929:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23526,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "1929:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1889:76:73"
            },
            "scope": 23616,
            "src": "1775:360:73",
            "stateMutability": "nonpayable",
            "superFunction": 5517,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23614,
              "nodeType": "Block",
              "src": "2348:428:73",
              "statements": [
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2358:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23558,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2358:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23559,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2358:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2384:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23561,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2388:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2388:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:41:73"
                },
                {
                  "assignments": [
                    23570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23570,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2409:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23569,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2409:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2440:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23572,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2444:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:47:73"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2466:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23579,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2466:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23586,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2491:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23581,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2495:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23582,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2495:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23587,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2515:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23589,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23590,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "2528:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "2515:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23592,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2548:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23595,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2560:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2548:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2548:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23601,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2585:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2585:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2585:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23606,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 23608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:5:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23609,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2683:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2717:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23611,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2751:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23607,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "2616:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2616:153:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23556,
                  "id": 23613,
                  "nodeType": "Return",
                  "src": "2609:160:73"
                }
              ]
            },
            "documentation": null,
            "id": 23615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2179:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2179:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2217:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2217:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2217:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2255:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2169:110:73"
            },
            "returnParameters": {
              "id": 23556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23555,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2314:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23554,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "2314:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2313:30:73"
            },
            "scope": 23616,
            "src": "2141:635:73",
            "stateMutability": "nonpayable",
            "superFunction": 5674,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "1166:1613:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23617,
              "name": "MixStructs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13643,
              "src": "2889:10:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixStructs_$13643",
                "typeString": "contract MixStructs"
              }
            },
            "id": 23618,
            "nodeType": "InheritanceSpecifier",
            "src": "2889:10:73"
          }
        ],
        "contractDependencies": [
          13643
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23740,
        "linearizedBaseContracts": [
          23740,
          13643
        ],
        "name": "MockBasketManager2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23620,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23740,
            "src": "2907:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23619,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "2907:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23639,
              "nodeType": "Block",
              "src": "2975:259:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23625,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "2985:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23627,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23622,
                          "src": "3025:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23628,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "3053:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "3053:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3133:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23633,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "3156:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3156:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23626,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "2998:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2998:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "2985:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23638,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:242:73"
                }
              ]
            },
            "documentation": null,
            "id": 23640,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23622,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23640,
                  "src": "2951:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:17:73"
            },
            "returnParameters": {
              "id": 23624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:73"
            },
            "scope": 23740,
            "src": "2939:295:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23667,
              "nodeType": "Block",
              "src": "3436:164:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23653,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23651,
                      "src": "3446:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23655,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23620,
                          "src": "3490:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3526:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23654,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "3454:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3454:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "3446:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23662,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23663,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23649,
                      "src": "3579:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3579:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23666,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:14:73"
                }
              ]
            },
            "documentation": null,
            "id": 23668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3288:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3306:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3267:54:73"
            },
            "returnParameters": {
              "id": 23652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23649,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3369:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23651,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3395:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23650,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "3395:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3355:76:73"
            },
            "scope": 23740,
            "src": "3240:360:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23738,
              "nodeType": "Block",
              "src": "3815:427:73",
              "statements": [
                {
                  "assignments": [
                    23684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23684,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3825:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23682,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3825:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23683,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3825:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3851:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23685,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3855:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23686,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3855:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:41:73"
                },
                {
                  "assignments": [
                    23694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23694,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3876:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3876:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23693,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3876:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3907:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23696,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:47:73"
                },
                {
                  "assignments": [
                    23704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23704,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3933:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23702,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3933:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23703,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3933:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3958:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23705,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23706,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3962:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23711,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "3982:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23713,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23714,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "3995:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "3982:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23716,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23717,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4015:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4027:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4015:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4040:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4015:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23725,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4052:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23727,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4065:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4052:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:4:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23733,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "4149:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23734,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4183:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23735,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23731,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "4083:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4083:152:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23680,
                  "id": 23737,
                  "nodeType": "Return",
                  "src": "4076:159:73"
                }
              ]
            },
            "documentation": null,
            "id": 23739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3644:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23670,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3684:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3684:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23673,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3684:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3722:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3634:112:73"
            },
            "returnParameters": {
              "id": 23680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23679,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3781:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23678,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "3781:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:30:73"
            },
            "scope": 23740,
            "src": "3606:636:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "2858:1386:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23741,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "4277:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "4277:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23783,
        "linearizedBaseContracts": [
          23783,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23751,
              "nodeType": "Block",
              "src": "4326:37:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23745,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4336:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "4336:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4352:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4336:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23750,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:20:73"
                }
              ]
            },
            "documentation": null,
            "id": 23752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:73"
            },
            "returnParameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:73"
            },
            "scope": 23783,
            "src": "4297:66:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23781,
              "nodeType": "Block",
              "src": "4440:169:73",
              "statements": [
                {
                  "assignments": [
                    23760,
                    23762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23760,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4451:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23759,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4451:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23762,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4464:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23761,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23764,
                        "name": "_bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23754,
                        "src": "4496:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23763,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "4479:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:25:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4450:54:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23768,
                        "name": "exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23760,
                        "src": "4522:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62417373657420646f6573206e6f74206578697374",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:23:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        },
                        "value": "bAsset does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        }
                      ],
                      "id": 23767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        36235,
                        36236
                      ],
                      "referencedDeclaration": 36236,
                      "src": "4514:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:40:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23772,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "4564:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "4564:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23774,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23762,
                          "src": "4579:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "4564:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23778,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23756,
                      "src": "4595:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "4564:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23780,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:73"
                }
              ]
            },
            "documentation": null,
            "id": 23782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4394:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23756,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4411:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23755,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "4411:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:73"
            },
            "returnParameters": {
              "id": 23758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:73"
            },
            "scope": 23783,
            "src": "4369:240:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23784,
        "src": "4246:366:73"
      }
    ],
    "src": "0:4614:73"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
    "exportedSymbols": {
      "MockBasketManager": [
        23476
      ],
      "MockBasketManager1": [
        23616
      ],
      "MockBasketManager2": [
        23740
      ],
      "MockBasketManager3": [
        23783
      ]
    },
    "id": 23784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23386,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:73"
      },
      {
        "id": 23387,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:73"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23389,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "59:60:73",
        "symbolAliases": [
          {
            "foreign": 23388,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol",
        "file": "../../mix/shared/MixStructs.sol",
        "id": 23391,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 13644,
        "src": "120:61:73",
        "symbolAliases": [
          {
            "foreign": 23390,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23393,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "182:60:73",
        "symbolAliases": [
          {
            "foreign": 23392,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol",
        "file": "../../shared/StableMath.sol",
        "id": 23395,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 22201,
        "src": "243:57:73",
        "symbolAliases": [
          {
            "foreign": 23394,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23396,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "392:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23397,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23476,
        "linearizedBaseContracts": [
          23476,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23416,
              "nodeType": "Block",
              "src": "484:89:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23404,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "494:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "494:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23407,
                      "name": "failed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23399,
                      "src": "510:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "494:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23409,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23410,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "526:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "526:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23413,
                      "name": "colRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23401,
                      "src": "558:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "526:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23415,
                  "nodeType": "ExpressionStatement",
                  "src": "526:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23399,
                  "name": "failed",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "432:11:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "name": "colRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "445:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:31:73"
            },
            "returnParameters": {
              "id": 23403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:73"
            },
            "scope": 23476,
            "src": "413:160:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23439,
              "nodeType": "Block",
              "src": "664:109:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23425
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23425,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23439,
                      "src": "677:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23424,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23427,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "709:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23426,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "692:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23430,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "726:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "726:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23434,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23432,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23425,
                          "src": "741:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "726:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "726:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23436,
                      "name": "newStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23421,
                      "src": "757:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "726:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23438,
                  "nodeType": "ExpressionStatement",
                  "src": "726:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "603:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "newStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "619:22:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "619:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:40:73"
            },
            "returnParameters": {
              "id": 23423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:73"
            },
            "scope": 23476,
            "src": "578:195:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23462,
              "nodeType": "Block",
              "src": "858:108:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23448
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23448,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23462,
                      "src": "871:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23450,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23442,
                        "src": "903:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23449,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "886:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23453,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "920:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23456,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "920:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23457,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23455,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23448,
                          "src": "935:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "920:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ratio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "920:27:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23459,
                      "name": "_newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23444,
                      "src": "950:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:39:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23461,
                  "nodeType": "ExpressionStatement",
                  "src": "920:39:73"
                }
              ]
            },
            "documentation": null,
            "id": 23463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23442,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "802:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23444,
                  "name": "_newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "818:17:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:35:73"
            },
            "returnParameters": {
              "id": 23446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:73"
            },
            "scope": 23476,
            "src": "778:188:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23474,
              "nodeType": "Block",
              "src": "1032:57:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23468,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1042:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "undergoingRecol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13569,
                      "src": "1042:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23471,
                      "name": "undergoingRecol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23465,
                      "src": "1067:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1042:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23473,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRecol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23465,
                  "name": "undergoingRecol",
                  "nodeType": "VariableDeclaration",
                  "scope": 23475,
                  "src": "989:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "988:22:73"
            },
            "returnParameters": {
              "id": 23467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:73"
            },
            "scope": 23476,
            "src": "971:118:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "362:729:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23477,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "1197:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23478,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23616,
        "linearizedBaseContracts": [
          23616,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23480,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1218:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23479,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "1218:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23482,
            "name": "testBasket",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1249:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basket_$13574_storage",
              "typeString": "struct MixStructs.Basket"
            },
            "typeName": {
              "contractScope": null,
              "id": 23481,
              "name": "Basket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13574,
              "src": "1249:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                "typeString": "struct MixStructs.Basket"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23507,
              "nodeType": "Block",
              "src": "1317:305:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23487,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "1327:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23489,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23484,
                          "src": "1367:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23490,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "1395:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "1395:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23495,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "1498:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1553:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23488,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "1340:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1340:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "1327:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23500,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:242:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23501,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1579:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "1579:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 23504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1579:36:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23506,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:36:73"
                }
              ]
            },
            "documentation": null,
            "id": 23508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23484,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23508,
                  "src": "1293:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:17:73"
            },
            "returnParameters": {
              "id": 23486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:73"
            },
            "scope": 23616,
            "src": "1281:341:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23515,
              "nodeType": "Block",
              "src": "1739:30:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23513,
                    "name": "basket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4148,
                    "src": "1756:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage",
                      "typeString": "struct MixStructs.Basket storage ref"
                    }
                  },
                  "functionReturnParameters": 23512,
                  "id": 23514,
                  "nodeType": "Return",
                  "src": "1749:13:73"
                }
              ]
            },
            "documentation": null,
            "id": 23516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:73"
            },
            "returnParameters": {
              "id": 23512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23511,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 23516,
                  "src": "1709:15:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Basket_$13574_memory_ptr",
                    "typeString": "struct MixStructs.Basket"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23510,
                    "name": "Basket",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13574,
                    "src": "1709:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                      "typeString": "struct MixStructs.Basket"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:39:73"
            },
            "scope": 23616,
            "src": "1628:141:73",
            "stateMutability": "view",
            "superFunction": 5469,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23543,
              "nodeType": "Block",
              "src": "1970:165:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23529,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23527,
                      "src": "1980:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23531,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23480,
                          "src": "2024:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23530,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "1988:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1988:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "1980:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23539,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23525,
                      "src": "2113:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 23540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:5:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2113:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:15:73"
                }
              ]
            },
            "documentation": null,
            "id": 23544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1803:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1822:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1840:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:53:73"
            },
            "returnParameters": {
              "id": 23528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1903:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1929:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23526,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "1929:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1889:76:73"
            },
            "scope": 23616,
            "src": "1775:360:73",
            "stateMutability": "nonpayable",
            "superFunction": 5517,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23614,
              "nodeType": "Block",
              "src": "2348:428:73",
              "statements": [
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2358:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23558,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2358:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23559,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2358:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2384:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23561,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2388:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2388:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:41:73"
                },
                {
                  "assignments": [
                    23570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23570,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2409:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23569,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2409:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2440:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23572,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2444:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:47:73"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2466:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23579,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2466:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23586,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2491:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23581,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2495:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23582,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2495:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23587,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2515:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23589,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23590,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "2528:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "2515:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23592,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2548:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23595,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2560:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2548:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2548:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23601,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2585:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2585:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2585:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23606,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 23608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:5:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23609,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2683:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2717:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23611,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2751:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23607,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "2616:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2616:153:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23556,
                  "id": 23613,
                  "nodeType": "Return",
                  "src": "2609:160:73"
                }
              ]
            },
            "documentation": null,
            "id": 23615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2179:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2179:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2217:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2217:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2217:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2255:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2169:110:73"
            },
            "returnParameters": {
              "id": 23556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23555,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2314:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23554,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "2314:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2313:30:73"
            },
            "scope": 23616,
            "src": "2141:635:73",
            "stateMutability": "nonpayable",
            "superFunction": 5674,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "1166:1613:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23617,
              "name": "MixStructs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13643,
              "src": "2889:10:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixStructs_$13643",
                "typeString": "contract MixStructs"
              }
            },
            "id": 23618,
            "nodeType": "InheritanceSpecifier",
            "src": "2889:10:73"
          }
        ],
        "contractDependencies": [
          13643
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23740,
        "linearizedBaseContracts": [
          23740,
          13643
        ],
        "name": "MockBasketManager2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23620,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23740,
            "src": "2907:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23619,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "2907:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23639,
              "nodeType": "Block",
              "src": "2975:259:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23625,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "2985:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23627,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23622,
                          "src": "3025:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23628,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "3053:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "3053:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3133:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23633,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "3156:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3156:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23626,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "2998:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2998:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "2985:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23638,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:242:73"
                }
              ]
            },
            "documentation": null,
            "id": 23640,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23622,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23640,
                  "src": "2951:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:17:73"
            },
            "returnParameters": {
              "id": 23624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:73"
            },
            "scope": 23740,
            "src": "2939:295:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23667,
              "nodeType": "Block",
              "src": "3436:164:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23653,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23651,
                      "src": "3446:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23655,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23620,
                          "src": "3490:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3526:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23654,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "3454:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3454:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "3446:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23662,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23663,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23649,
                      "src": "3579:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3579:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23666,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:14:73"
                }
              ]
            },
            "documentation": null,
            "id": 23668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3288:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3306:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3267:54:73"
            },
            "returnParameters": {
              "id": 23652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23649,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3369:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23651,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3395:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23650,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "3395:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3355:76:73"
            },
            "scope": 23740,
            "src": "3240:360:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23738,
              "nodeType": "Block",
              "src": "3815:427:73",
              "statements": [
                {
                  "assignments": [
                    23684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23684,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3825:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23682,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3825:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23683,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3825:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3851:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23685,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3855:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23686,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3855:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:41:73"
                },
                {
                  "assignments": [
                    23694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23694,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3876:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3876:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23693,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3876:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3907:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23696,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:47:73"
                },
                {
                  "assignments": [
                    23704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23704,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3933:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23702,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3933:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23703,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3933:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3958:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23705,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23706,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3962:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23711,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "3982:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23713,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23714,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "3995:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "3982:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23716,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23717,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4015:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4027:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4015:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4040:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4015:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23725,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4052:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23727,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4065:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4052:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:4:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23733,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "4149:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23734,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4183:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23735,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23731,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "4083:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4083:152:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23680,
                  "id": 23737,
                  "nodeType": "Return",
                  "src": "4076:159:73"
                }
              ]
            },
            "documentation": null,
            "id": 23739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3644:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23670,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3684:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3684:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23673,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3684:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3722:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3634:112:73"
            },
            "returnParameters": {
              "id": 23680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23679,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3781:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23678,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "3781:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:30:73"
            },
            "scope": 23740,
            "src": "3606:636:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "2858:1386:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23741,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "4277:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "4277:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23783,
        "linearizedBaseContracts": [
          23783,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23751,
              "nodeType": "Block",
              "src": "4326:37:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23745,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4336:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "4336:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4352:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4336:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23750,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:20:73"
                }
              ]
            },
            "documentation": null,
            "id": 23752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:73"
            },
            "returnParameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:73"
            },
            "scope": 23783,
            "src": "4297:66:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23781,
              "nodeType": "Block",
              "src": "4440:169:73",
              "statements": [
                {
                  "assignments": [
                    23760,
                    23762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23760,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4451:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23759,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4451:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23762,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4464:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23761,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23764,
                        "name": "_bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23754,
                        "src": "4496:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23763,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "4479:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:25:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4450:54:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23768,
                        "name": "exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23760,
                        "src": "4522:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62417373657420646f6573206e6f74206578697374",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:23:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        },
                        "value": "bAsset does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        }
                      ],
                      "id": 23767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        36235,
                        36236
                      ],
                      "referencedDeclaration": 36236,
                      "src": "4514:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:40:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23772,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "4564:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "4564:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23774,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23762,
                          "src": "4579:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "4564:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23778,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23756,
                      "src": "4595:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "4564:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23780,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:73"
                }
              ]
            },
            "documentation": null,
            "id": 23782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4394:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23756,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4411:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23755,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "4411:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:73"
            },
            "returnParameters": {
              "id": 23758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:73"
            },
            "scope": 23783,
            "src": "4369:240:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23784,
        "src": "4246:366:73"
      }
    ],
    "src": "0:4614:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-11T05:43:16.545Z",
  "devdoc": {
    "methods": {
      "addBasset(address,address,bool)": {
        "details": "External func to allow the Governor to conduct add operations on the Basket",
        "params": {
          "_bAsset": "Address of the ERC20 token to add to the Basket",
          "_integration": "Address of the vault integration to deposit and withdraw",
          "_isTransferFeeCharged": "Bool - are transfer fees charged on this bAsset"
        },
        "return": "index                Position of the bAsset in the Basket"
      },
      "collectInterest()": {
        "details": "Called by mIx to calculate how much interest has been generated in the basket     and withdraw it. Cycles through the connected platforms to check the balances.",
        "return": "interestCollected   Total amount of interest collected, in mIx termsgains               Array of bAsset units gained"
      },
      "decreaseVaultBalance(uint8,address,uint256)": {
        "details": "Called by mIx after redeeming tokens. Simply reduce the balance in the vault",
        "params": {
          "_bAssetIndex": "Index of the bAsset",
          "_decreaseAmount": "Units withdrawn"
        }
      },
      "decreaseVaultBalances(uint8[],address[],uint256[])": {
        "details": "Called by mIx after redeeming tokens. Simply reduce the balance in the vault",
        "params": {
          "_bAssetIndices": "Array of bAsset indexes",
          "_decreaseAmount": "Units withdrawn"
        }
      },
      "failBasset(address)": {
        "details": "Marks a bAsset as permanently deviated from peg",
        "params": {
          "_bAsset": "Address of the bAsset"
        }
      },
      "getBasset(address)": {
        "details": "Get data for a specific bAsset, if it exists",
        "params": {
          "_bAsset": "Address of bAsset"
        },
        "return": "bAsset  Struct with full bAsset data"
      },
      "getBassetIntegrator(address)": {
        "details": "Get current integrator for a specific bAsset, if it exists",
        "params": {
          "_bAsset": "Address of bAsset"
        },
        "return": "integrator  Address of current integrator"
      },
      "getBassets()": {
        "details": "Get data for a all bAssets in basket",
        "return": "bAssets  Struct[] with full bAsset datalen      Number of bAssets in the Basket"
      },
      "handlePegLoss(address,bool)": {
        "details": "Executes the Auto Redistribution event by isolating the bAsset from the Basket",
        "params": {
          "_bAsset": "Address of the ERC20 token to isolate",
          "_belowPeg": "Bool to describe whether the bAsset deviated below peg (t)                        or above (f)"
        },
        "return": "alreadyActioned Bool to show whether a bAsset had already been actioned"
      },
      "increaseVaultBalance(uint8,address,uint256)": {
        "details": "Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault",
        "params": {
          "_bAssetIndex": "Index of the bAsset",
          "_increaseAmount": "Units deposited"
        }
      },
      "increaseVaultBalances(uint8[],address[],uint256[])": {
        "details": "Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault",
        "params": {
          "_bAssetIndices": "Array of bAsset indexes",
          "_increaseAmount": "Units deposited"
        }
      },
      "initialize(address,address,address[],address[],uint256[],bool[])": {
        "details": "Initialization function for upgradable proxy contract.     This function should be called via Proxy just after contract deployment.",
        "params": {
          "_bAssets": "Array of erc20 bAsset addresses",
          "_hasTransferFees": "Bool signifying if this bAsset has xfer fees",
          "_integrators": "Matching array of the platform intergations for bAssets",
          "_mIx": "Address of the mIx whose Basket to manage",
          "_nexus": "Address of system Nexus",
          "_weights": "Weightings of each bAsset, summing to 1e18"
        }
      },
      "migrateBassets(address[],address)": {
        "details": "Transfers all collateral from one lending market to another - used initially     to handle the migration between Aave V1 and Aave V2. Note - only supports non     tx fee enabled assets",
        "params": {
          "_bAssets": "Array of basket assets to migrate",
          "_newIntegration": "Address of the new platform integration"
        }
      },
      "negateIsolation(address)": {
        "details": "Negates the isolation of a given bAsset",
        "params": {
          "_bAsset": "Address of the bAsset"
        }
      },
      "pause()": {
        "details": "Called by the Governor to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise.",
        "return": "Returns `true` when paused, otherwise `false`"
      },
      "prepareRedeemBassets(address[])": {
        "details": "Fetch the array of bAssets for redemption, and pass back all basket info.",
        "params": {
          "_bAssets": "Array of bAsset addresses to redeem"
        }
      },
      "prepareRedeemMulti()": {
        "details": "Prepare given bAsset addresses for RedeemMulti. Currently returns integrator     and essential minting info for each bAsset",
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareSwapBassets(address,address,bool)": {
        "details": "Prepare given bAssets for swapping",
        "params": {
          "_input": "Address of the input bAsset",
          "_isMint": "Is this swap actually a mint? i.e. output == address(mIx)",
          "_output": "Address of the output bAsset"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "removeBasset(address)": {
        "details": "Removes a specific Asset from the Basket, given that its target/collateral     level is already 0, throws if invalid.",
        "params": {
          "_assetToRemove": "The asset to remove from the basket"
        }
      },
      "setBasketWeights(address[],uint256[])": {
        "details": "External call for the governor to set weightings of all bAssets",
        "params": {
          "_bAssets": "Array of bAsset addresses",
          "_weights": "Array of bAsset weights - summing 100% where 100% == 1e18"
        }
      },
      "setTransferFeesFlag(address,bool)": {
        "details": "Update transfer fee flag for a given bAsset, should it change its fee practice",
        "params": {
          "_bAsset": "bAsset address",
          "_flag": "Charge transfer fee when its set to 'true', otherwise 'false'"
        }
      },
      "unpause()": {
        "details": "Called by Governor to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}