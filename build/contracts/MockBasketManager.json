{
  "contractName": "MockBasketManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "BasketStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "bAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "maxWeights",
          "type": "uint256[]"
        }
      ],
      "name": "BasketWeightsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "integrator",
          "type": "address"
        }
      ],
      "name": "BassetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        }
      ],
      "name": "BassetRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum MixStructs.BassetStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "BassetStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "bAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newIntegrator",
          "type": "address"
        }
      ],
      "name": "BassetsMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "TransferFeeEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_integration",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isTransferFeeCharged",
          "type": "bool"
        }
      ],
      "name": "addBasset",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "basket",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "maxBassets",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "undergoingRecol",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "failed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralisationRatio",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "collectInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "interestCollected",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "gains",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_bAssetIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_decreaseAmount",
          "type": "uint256"
        }
      ],
      "name": "decreaseVaultBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_bAssetIndices",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_decreaseAmount",
          "type": "uint256[]"
        }
      ],
      "name": "decreaseVaultBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "failBasset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBasket",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bassets",
              "type": "tuple[]"
            },
            {
              "internalType": "uint8",
              "name": "maxBassets",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "undergoingRecol",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "failed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "collateralisationRatio",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basket",
          "name": "b",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "getBasset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MixStructs.BassetStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isTransferFeeCharged",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ratio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basset",
          "name": "bAsset",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "getBassetIntegrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "integrator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MixStructs.BassetStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isTransferFeeCharged",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ratio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basset[]",
          "name": "bAssets",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_belowPeg",
          "type": "bool"
        }
      ],
      "name": "handlePegLoss",
      "outputs": [
        {
          "internalType": "bool",
          "name": "alreadyActioned",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_bAssetIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_increaseAmount",
          "type": "uint256"
        }
      ],
      "name": "increaseVaultBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_bAssetIndices",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_increaseAmount",
          "type": "uint256[]"
        }
      ],
      "name": "increaseVaultBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_nexus",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mIx",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_integrators",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_weights",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "_hasTransferFees",
          "type": "bool[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "integrations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mIx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_newIntegration",
          "type": "address"
        }
      ],
      "name": "migrateBassets",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "negateIsolation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nexus",
      "outputs": [
        {
          "internalType": "contract INexus",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "prepareForgeBasset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "bInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "prepareForgeBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.ForgePropsMulti",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        }
      ],
      "name": "prepareRedeemBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "allBassets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.RedeemProps",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "prepareRedeemMulti",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "colRatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.RedeemPropsMulti",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_input",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_output",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMint",
          "type": "bool"
        }
      ],
      "name": "prepareSwapBassets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetToRemove",
          "type": "address"
        }
      ],
      "name": "removeBasset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_weights",
          "type": "uint256[]"
        }
      ],
      "name": "setBasketWeights",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_flag",
          "type": "bool"
        }
      ],
      "name": "setTransferFeesFlag",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "failed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "colRatio",
          "type": "uint256"
        }
      ],
      "name": "setBasket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "internalType": "enum MixStructs.BassetStatus",
          "name": "newStatus",
          "type": "uint8"
        }
      ],
      "name": "setBassetStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newRatio",
          "type": "uint256"
        }
      ],
      "name": "setBassetRatio",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "undergoingRecol",
          "type": "bool"
        }
      ],
      "name": "setRecol",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"BasketStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"maxWeights\",\"type\":\"uint256[]\"}],\"name\":\"BasketWeightsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"}],\"name\":\"BassetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"}],\"name\":\"BassetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"BassetStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newIntegrator\",\"type\":\"address\"}],\"name\":\"BassetsMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"TransferFeeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_integration\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isTransferFeeCharged\",\"type\":\"bool\"}],\"name\":\"addBasset\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basket\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"maxBassets\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralisationRatio\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interestCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"gains\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_bAssetIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decreaseAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseVaultBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_bAssetIndices\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_decreaseAmount\",\"type\":\"uint256[]\"}],\"name\":\"decreaseVaultBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"failBasset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBasket\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bassets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"maxBassets\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralisationRatio\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basket\",\"name\":\"b\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"getBasset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"getBassetIntegrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_belowPeg\",\"type\":\"bool\"}],\"name\":\"handlePegLoss\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"alreadyActioned\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_bAssetIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_increaseAmount\",\"type\":\"uint256\"}],\"name\":\"increaseVaultBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_bAssetIndices\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_increaseAmount\",\"type\":\"uint256[]\"}],\"name\":\"increaseVaultBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nexus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mIx\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_hasTransferFees\",\"type\":\"bool[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"integrations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mIx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_newIntegration\",\"type\":\"address\"}],\"name\":\"migrateBassets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"negateIsolation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"prepareForgeBasset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"bInfo\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"prepareForgeBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.ForgePropsMulti\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"}],\"name\":\"prepareRedeemBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"allBassets\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.RedeemProps\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prepareRedeemMulti\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"colRatio\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.RedeemPropsMulti\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_input\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_output\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMint\",\"type\":\"bool\"}],\"name\":\"prepareSwapBassets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetToRemove\",\"type\":\"address\"}],\"name\":\"removeBasset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"colRatio\",\"type\":\"uint256\"}],\"name\":\"setBasket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"}],\"name\":\"setBasketWeights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newRatio\",\"type\":\"uint256\"}],\"name\":\"setBassetRatio\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"setBassetStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"}],\"name\":\"setRecol\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setTransferFeesFlag\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addBasset(address,address,bool)\":{\"details\":\"External func to allow the Governor to conduct add operations on the Basket\",\"params\":{\"_bAsset\":\"Address of the ERC20 token to add to the Basket\",\"_integration\":\"Address of the vault integration to deposit and withdraw\",\"_isTransferFeeCharged\":\"Bool - are transfer fees charged on this bAsset\"},\"return\":\"index                Position of the bAsset in the Basket\"},\"collectInterest()\":{\"details\":\"Called by mIx to calculate how much interest has been generated in the basket     and withdraw it. Cycles through the connected platforms to check the balances.\",\"return\":\"interestCollected   Total amount of interest collected, in mIx termsgains               Array of bAsset units gained\"},\"decreaseVaultBalance(uint8,address,uint256)\":{\"details\":\"Called by mIx after redeeming tokens. Simply reduce the balance in the vault\",\"params\":{\"_bAssetIndex\":\"Index of the bAsset\",\"_decreaseAmount\":\"Units withdrawn\"}},\"decreaseVaultBalances(uint8[],address[],uint256[])\":{\"details\":\"Called by mIx after redeeming tokens. Simply reduce the balance in the vault\",\"params\":{\"_bAssetIndices\":\"Array of bAsset indexes\",\"_decreaseAmount\":\"Units withdrawn\"}},\"failBasset(address)\":{\"details\":\"Marks a bAsset as permanently deviated from peg\",\"params\":{\"_bAsset\":\"Address of the bAsset\"}},\"getBasket()\":{\"details\":\"Get basket details for `MixStructs.Basket`\",\"return\":\"b   Basket struct\"},\"getBasset(address)\":{\"details\":\"Get data for a specific bAsset, if it exists\",\"params\":{\"_bAsset\":\"Address of bAsset\"},\"return\":\"bAsset  Struct with full bAsset data\"},\"getBassetIntegrator(address)\":{\"details\":\"Get current integrator for a specific bAsset, if it exists\",\"params\":{\"_bAsset\":\"Address of bAsset\"},\"return\":\"integrator  Address of current integrator\"},\"getBassets()\":{\"details\":\"Get data for a all bAssets in basket\",\"return\":\"bAssets  Struct[] with full bAsset datalen      Number of bAssets in the Basket\"},\"handlePegLoss(address,bool)\":{\"details\":\"Executes the Auto Redistribution event by isolating the bAsset from the Basket\",\"params\":{\"_bAsset\":\"Address of the ERC20 token to isolate\",\"_belowPeg\":\"Bool to describe whether the bAsset deviated below peg (t)                        or above (f)\"},\"return\":\"alreadyActioned Bool to show whether a bAsset had already been actioned\"},\"increaseVaultBalance(uint8,address,uint256)\":{\"details\":\"Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault\",\"params\":{\"_bAssetIndex\":\"Index of the bAsset\",\"_increaseAmount\":\"Units deposited\"}},\"increaseVaultBalances(uint8[],address[],uint256[])\":{\"details\":\"Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault\",\"params\":{\"_bAssetIndices\":\"Array of bAsset indexes\",\"_increaseAmount\":\"Units deposited\"}},\"initialize(address,address,address[],address[],uint256[],bool[])\":{\"details\":\"Initialization function for upgradable proxy contract.     This function should be called via Proxy just after contract deployment.\",\"params\":{\"_bAssets\":\"Array of erc20 bAsset addresses\",\"_hasTransferFees\":\"Bool signifying if this bAsset has xfer fees\",\"_integrators\":\"Matching array of the platform intergations for bAssets\",\"_mIx\":\"Address of the mIx whose Basket to manage\",\"_nexus\":\"Address of system Nexus\",\"_weights\":\"Weightings of each bAsset, summing to 1e18\"}},\"migrateBassets(address[],address)\":{\"details\":\"Transfers all collateral from one lending market to another - used initially     to handle the migration between Aave V1 and Aave V2. Note - only supports non     tx fee enabled assets\",\"params\":{\"_bAssets\":\"Array of basket assets to migrate\",\"_newIntegration\":\"Address of the new platform integration\"}},\"negateIsolation(address)\":{\"details\":\"Negates the isolation of a given bAsset\",\"params\":{\"_bAsset\":\"Address of the bAsset\"}},\"pause()\":{\"details\":\"Called by the Governor to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\",\"return\":\"Returns `true` when paused, otherwise `false`\"},\"prepareForgeBasset(address,uint256,bool)\":{\"details\":\"Prepare given bAsset for Forging. Currently returns integrator     and essential minting info.\",\"params\":{\"_bAsset\":\"Address of the bAsset\"},\"return\":\"props     Struct of all relevant Forge information\"},\"prepareForgeBassets(address[],uint256[],bool)\":{\"details\":\"Prepare given bAsset addresses for Forging. Currently returns integrator     and essential minting info for each bAsset\",\"params\":{\"_bAssets\":\"Array of bAsset addresses with which to forge\"},\"return\":\"props     Struct of all relevant Forge information\"},\"prepareRedeemBassets(address[])\":{\"details\":\"Fetch the array of bAssets for redemption, and pass back all basket info.\",\"params\":{\"_bAssets\":\"Array of bAsset addresses to redeem\"}},\"prepareRedeemMulti()\":{\"details\":\"Prepare given bAsset addresses for RedeemMulti. Currently returns integrator     and essential minting info for each bAsset\",\"return\":\"props     Struct of all relevant Forge information\"},\"prepareSwapBassets(address,address,bool)\":{\"details\":\"Prepare given bAssets for swapping\",\"params\":{\"_input\":\"Address of the input bAsset\",\"_isMint\":\"Is this swap actually a mint? i.e. output == address(mIx)\",\"_output\":\"Address of the output bAsset\"},\"return\":\"props     Struct of all relevant Forge information\"},\"removeBasset(address)\":{\"details\":\"Removes a specific Asset from the Basket, given that its target/collateral     level is already 0, throws if invalid.\",\"params\":{\"_assetToRemove\":\"The asset to remove from the basket\"}},\"setBasketWeights(address[],uint256[])\":{\"details\":\"External call for the governor to set weightings of all bAssets\",\"params\":{\"_bAssets\":\"Array of bAsset addresses\",\"_weights\":\"Array of bAsset weights - summing 100% where 100% == 1e18\"}},\"setTransferFeesFlag(address,bool)\":{\"details\":\"Update transfer fee flag for a given bAsset, should it change its fee practice\",\"params\":{\"_bAsset\":\"bAsset address\",\"_flag\":\"Charge transfer fee when its set to 'true', otherwise 'false'\"}},\"unpause()\":{\"details\":\"Called by Governor to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol\":\"MockBasketManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/IBasketManager.sol\":{\"keccak256\":\"0x6a1ac0981fd20fbdf0f9825411b841e907264853e9c6e7c778d6adb02f6e8a4a\",\"urls\":[\"bzz-raw://2b2bf64fa6cb679b5f6718ddfc3b40be827894eaad5ce2600c79e1de76c535ab\",\"dweb:/ipfs/Qmc6ggbSkDVyZfA5T8pAHy1mFcHaLZ8bE2sRTpiKb1QQem\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/IPlatformIntegration.sol\":{\"keccak256\":\"0x3a6353d05674c582b0f7e9de6aa57d3ee2354e3d6c27e9d74adeb3a3271a07ba\",\"urls\":[\"bzz-raw://03c81a8a973d9bdde92646aa4943a1e69e6206b16bfd10f21b8af844c5161ce9\",\"dweb:/ipfs/QmYcLX95PPBcFTmSBHcPAzvQHpzQyM2aHQWyvVGdBgxdbP\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol\":{\"keccak256\":\"0x3853b66a78639050b59b353bc2bc53fa0ca9eb41ebc79e644bd201419c27d8a1\",\"urls\":[\"bzz-raw://72d391b1d72575b87a8f8d3cce7f7abc06867acd463d2c22796e71ce2914b5c1\",\"dweb:/ipfs/QmWdQ2hw1HcJFbT8gNrTWSpgfmm9ds79JpDWpQpGSCo5Ez\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol\":{\"keccak256\":\"0xc8d3ed27e2aa2a4e880b1650b9e1327a44a228349ed1c80c29b7ae3eae4c1306\",\"urls\":[\"bzz-raw://f3688f28d8ff87e3c156a432b56535422ad75fe179a249fcbce04df6a1c04fa4\",\"dweb:/ipfs/QmfNZU6L52QkuYf66smbWHpXZMhfXjEyLgYffuhaJKa5jq\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/CommonHelpers.sol\":{\"keccak256\":\"0x33e809b4367d394ea2122f363d3c4f82a036fd459e21e0c54f80003055ab9670\",\"urls\":[\"bzz-raw://14a31f4bb72d23a18e3a49ac330114199c0c69ced7d452fbf088c42ef233f636\",\"dweb:/ipfs/QmSD6rjG91CJn4eriTQR9FjLAnn8nD84BFdjgYrrBgM9QX\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/IBasicToken.sol\":{\"keccak256\":\"0x7d505a6f3c24d5da06858f6da65ca04e15e2798c9ca9bb24624311fc10c35825\",\"urls\":[\"bzz-raw://937dd232b4bd4e49718279c406ba9c98627a38980dbb26d2f932f66815dd67b9\",\"dweb:/ipfs/Qmbg2N2PX46VCqBe224vmuNHv3YvaJBrH1gguspnz4acLd\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableModule.sol\":{\"keccak256\":\"0xa9b455fd1f9dcce943e46563ce872cb6910f414f061a624b538cb965dccb74d1\",\"urls\":[\"bzz-raw://ea08022306fd741ec6007d5cea2c4493f23240c0317045fa40b4eb442fa15152\",\"dweb:/ipfs/QmfXoLRmbto8dhkGy8bjZJ73PZhKxjVs8ooHVsXVV5wdtG\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x6e30ee844194c37d586269196cc4c6d32718baec2cad7f64c9e1470759060f19\",\"urls\":[\"bzz-raw://d2313e50e8002b63eb8279834946fdbfa93684b98cebd21e0ea6d7cb71e92a76\",\"dweb:/ipfs/QmbGtNGqvRn6T9jMvuHRHcTkdTe8gxyJzgGc6SibVZqAsM\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializablePausableModule.sol\":{\"keccak256\":\"0x5187c682082a7e393d61be9a618a177adf89e99aefc0c490ac6b1d22bcd46f88\",\"urls\":[\"bzz-raw://6ee686b80b345615e77caf027f3b99927ef647f23a334339aaf59c5b21d8d157\",\"dweb:/ipfs/Qmf6AUkTDpPAra9pnEpmTsu3yVpHM5mMWhn3PZ2mjwoCgT\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableReentrancyGuard.sol\":{\"keccak256\":\"0xc98017e147aea529e44443fdd07f755b68119a92ee844446816dbd04f9aacd81\",\"urls\":[\"bzz-raw://abe71a4925c88f58c7ae230dfe560249617c37ff428a5fb5a28b62776ea845cc\",\"dweb:/ipfs/QmdsrozhcTXaD18oTru9qkrb5vsHZaiHyuL4nmBDp738gd\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol\":{\"keccak256\":\"0x08d17d7581628d72ac3233f042e1b6d4e6cbc050a991672f9b69a85380a6158f\",\"urls\":[\"bzz-raw://a0305949a756551cd30719caf13465bdfa17dbcfdba67955c16152e3a5e89a93\",\"dweb:/ipfs/QmZmX1FuaArqk3MCfUBFoDTJTVZfFnhteAnMPpA3AMbTom\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol\":{\"keccak256\":\"0x6aa82828de8660662af9fde0901d763f61b28eaff8f32199223110d7690717da\",\"urls\":[\"bzz-raw://fdce5d0a5f29d5ecf19c69cc14296e5c9a50e8a9b91981fb1d8e269668ad990b\",\"dweb:/ipfs/QmR7JmNGGhbRh5c37vSmTPV2iPBmTBJQe9ET9TvidwQ8GT\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "362:729:73:-;;;612:28:57;;;-1:-1:-1;;;;612:28:57;;;362:729:73;5:2:-1;;;;30:1;27;20:12;5:2;362:729:73;;;;;;;",
  "deployedSourceMap": "362:729:73:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;362:729:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9976:378:19;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16127:192;;;;;;;;;:::i;:::-;;12761:237;;;;;;;;;:::i;28000:182::-;;;:::i;:::-;;;;;;;;;7800:1605;;;:::i;:::-;;;;;;;;;22259:1421;;;;;;;;;:::i;:::-;;;;;;;;;;;778:188:73;;;;;;;;;:::i;28355:262:19:-;;;;;;;;;:::i;:::-;;;;;;;;1883:119:57;;;:::i;25652:682:19:-;;;:::i;:::-;;;;;;;;1507:78:57;;;:::i;:::-;;;;;;;;6432:325:19;;;;;;;;;:::i;18137:2700::-;;;;;;;;;:::i;2249:29::-;;;;;;;;;:::i;:::-;;;;;;;;1676:117:57;;;:::i;6972:477:19:-;;;;;;;;;:::i;31326:756::-;;;;;;;;;:::i;32200:582::-;;;;;;;;;:::i;23979:632::-;;;;;;;;;:::i;:::-;;;;;;;;444:19:54;;;:::i;:::-;;;;;;;;32908:472:19;;;;;;;;;:::i;15262:639::-;;;;;;;;;:::i;21434:500::-;;;;;;;;;:::i;:::-;;;;;;;;;24780:640;;;;;;;;;:::i;:::-;;;;;;;;28812:276;;;;;;;;;:::i;21068:116::-;;;:::i;:::-;;;;;;;;413:160:73;;;;;;;;;:::i;5716:505:19:-;;;;;;;;;:::i;5086:353::-;;;;;;;;;:::i;578:195:73:-;;;;;;;;;:::i;2055:20:19:-;;;:::i;:::-;;;;;;;;;;;971:118:73;;;;;;;;;:::i;1993:18:19:-;;;:::i;2884:970::-;;;;;;;;;:::i;9976:378::-;10170:11;611::54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;4183:22;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;10205:142;10229:7;10250:12;10276:26;:24;:26::i;:::-;10316:21;10205:10;:142::i;:::-;10197:150;9976:378;-1:-1:-1;;;;9976:378:19:o;16127:192::-;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;4183:22;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;16283:29;16297:14;16283:13;:29::i;:::-;16127:192;:::o;12761:237::-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;12947:44;12965:8;;12947:44;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;12947:44:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12975:8:19;;-1:-1:-1;12975:8:19;;;;12947:44;;;12975:8;;12947:44;12975:8;12947:44;1:33:-1;99:1;81:16;;74:27;;;-1:-1;99:1;-1:-1;12947:17:19;;-1:-1:-1;;12947:44:19:i;:::-;12761:237;;;;:::o;28000:182::-;28082:23;28119:11;28162:13;:11;:13::i;:::-;28155:20;;;;28000:182;;:::o;7800:1605::-;4630:3;;7948:25;;7975:22;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;8044:26:19;2091:5:58;8089:13:19;:11;:13::i;:::-;8043:59;;;;8134:5;8120:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;8120:20:19;-1:-1:-1;8170:1:19;;-1:-1:-1;8112:28:19;-1:-1:-1;8170:1:19;8208:1191;8229:5;8225:1;:9;;;8208:1191;;;8255:15;;:::i;:::-;8273:10;8284:1;8273:13;;;;;;;;;;;;;;;;8255:31;;8300:14;8317:1;:6;;;8300:23;;8424:19;8446:12;8459:1;8446:15;;;;;;;;;;;;;;;;;;;8493:54;;-1:-1:-1;;;8493:54:19;;-1:-1:-1;;;;;8446:15:19;;;;-1:-1:-1;8446:15:19;;8493:46;;:54;;8540:6;;8493:54;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8493:54:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8493:54:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8493:54:19;;;;;;;;;8597:22;;;;8475:72;;-1:-1:-1;8561:13:19;;8592:107;;8647:37;;-1:-1:-1;;;8647:37:19;;-1:-1:-1;;;;;8647:24:19;;;;;:37;;8672:11;;8647:37;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8647:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8647:37:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8647:37:19;;;;;;;;;8639:45;;8592:107;8712:15;8730:18;:7;8742:5;8730:18;:11;:18;:::i;:::-;8789:14;;;;8712:36;;-1:-1:-1;8873:25:19;;;:60;;;;-1:-1:-1;8914:19:19;8902:1;:8;;;:31;;;;;;;;;8873:60;8870:519;;;9020:7;8987:6;:14;;9002:1;8987:17;;;;;;;;;;;;;;;;;:30;:17;;;;;:30;:40;;;;9070:28;:7;9082:15;9070:28;:11;:28;:::i;:::-;9046:52;;9127:13;9116:5;9122:1;9116:8;;;;;;;;;;;;;;;:24;;;;;9188:20;9211:39;9242:1;:7;;;9211:13;:30;;:39;;;;:::i;:::-;9188:62;-1:-1:-1;9288:35:19;:17;9188:62;9288:35;:21;:35;:::i;:::-;9268:55;;8870:519;;;;;9373:1;9362:5;9368:1;9362:8;;;;;;;;;;;;;;;:12;;;;;8870:519;-1:-1:-1;;8236:3:19;;;;;-1:-1:-1;8208:1191:19;;-1:-1:-1;;;;8208:1191:19;;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;7800:1605:19;;:::o;22259:1421::-;22403:4;22409:13;22424:20;;:::i;:::-;22446;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;22482:26:19;;:::i;:::-;22518:27;;:::i;:::-;22604:13;;;;;;;;:39;;-1:-1:-1;22621:22:19;;;;;;;22604:39;22601:128;;;22658:60;;;;;;;;;;;;;;;;;22666:5;;-1:-1:-1;22658:60:19;-1:-1:-1;22704:5:19;;-1:-1:-1;22711:6:19;-1:-1:-1;22658:60:19;;22601:128;22770:16;22788:14;22806:24;22823:6;22806:16;:24::i;:::-;22769:61;;;;22844:11;22840:101;;-1:-1:-1;;22871:59:19;;;;;;;;;;;;;;;;;22879:5;;-1:-1:-1;22871:59:19;-1:-1:-1;22916:5:19;;-1:-1:-1;22923:6:19;-1:-1:-1;22871:59:19;;22840:101;22958:148;;;;;;;;22994:6;:14;;23009:8;22994:24;;;;;;;;;;;;;;;;;;;22958:148;;;;;;;;;22994:24;;;;;22958:148;;-1:-1:-1;;;;;22958:148:19;;;;;;22994:24;;22958:148;;;;;-1:-1:-1;;;22958:148:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23044:12;23057:8;23044:22;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23044:22:19;22958:148;;;;;;;;22950:156;-1:-1:-1;23175:69:19;;;;-1:-1:-1;;23201:32:19;;;;;;;;;-1:-1:-1;23201:32:19;;23209:4;;-1:-1:-1;23201:32:19;-1:-1:-1;23219:5:19;;-1:-1:-1;23226:6:19;-1:-1:-1;23201:32:19;;23175:69;23286:17;23305:15;23324:25;23341:7;23324:16;:25::i;:::-;23285:64;;;;23363:12;23359:103;;-1:-1:-1;;23391:60:19;;;;;;;;;;;;;;;;;23399:5;;-1:-1:-1;23391:60:19;-1:-1:-1;23437:5:19;;-1:-1:-1;23444:6:19;;-1:-1:-1;23391:60:19;;-1:-1:-1;;23391:60:19;23359:103;23480:151;;;;;;;;23516:6;:14;;23531:9;23516:25;;;;;;;;;;;;;;;;;;;23480:151;;;;;;;;;23516:25;;;;;23480:151;;-1:-1:-1;;;;;23480:151:19;;;;;;23516:25;;23480:151;;;;;-1:-1:-1;;;23480:151:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23567:12;23580:9;23567:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23567:23:19;23480:151;;;;;;;;;;;;;23641:32;;;;;;;;;;23567:23;;-1:-1:-1;23641:32:19;;-1:-1:-1;23659:5:19;;-1:-1:-1;23471:160:19;;-1:-1:-1;;;;;832:1:57;22259:1421:19;;;;;;;:::o;778:188:73:-;871:11;886:24;903:6;886:16;:24::i;:::-;868:42;;;950:9;920:6;:14;;935:5;920:21;;;;;;;;;;;;;;;;;;;;:27;;:39;;;;778:188;;;:::o;28355:262:19:-;28438:20;;:::i;:::-;28475:11;28488;28503:25;28520:7;28503:16;:25::i;:::-;28474:54;;;;28546:6;28538:36;;;;-1:-1:-1;;;28538:36:19;;;;;;;;;28593:17;28604:5;28593:10;:17::i;1883:119:57:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;985:7:57;;-1:-1:-1;;;985:7:57;;;;977:40;;;;-1:-1:-1;;;977:40:57;;;;;;;;;1945:7;:15;;-1:-1:-1;;;;1945:15:57;;;1975:20;;;;;;1984:10;;1975:20;;;;;;;;;;1883:119::o;25652:682:19:-;25776:29;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;25822:23;25847:11;25862:13;:11;:13::i;:::-;25821:54;;;;25885:35;25937:3;25923:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25923:18:19;;25885:56;;25951:22;25988:3;25976:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25976:16:19;-1:-1:-1;25951:41:19;-1:-1:-1;26006:7:19;26002:122;26023:3;26019:1;:7;;;26002:122;;;26070:12;26083:1;26070:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26070:15:19;26046:18;26065:1;26046:21;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;26046:39:19;;;-1:-1:-1;;;;;26046:39:19;;;;;26112:1;26099:7;26107:1;26099:10;;;;;;;;;;:14;;;;:10;;;;;;;;;;;:14;26028:3;;26002:122;;;-1:-1:-1;26141:186:19;;;;;;;;26182:29;;26141:186;;;;;;;;;;;;;;;;;;;-1:-1:-1;26141:186:19;25652:682;-1:-1:-1;25652:682:19:o;1507:78:57:-;1571:7;;-1:-1:-1;;;1571:7:57;;;;;1507:78::o;6432:325:19:-;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;6688:6:19;:28;;:62;;6734:15;;2077:19:58;6688:28:19;;;;;;;;;;;;;;;;;;;:41;;;:45;;:62;;;;:::i;:::-;6632:6;:28;;;;;;;;;;;;;;;;;;;;:41;:28;;;;;:41;:118;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;6432:325:19:o;18137:2700::-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;18303:8:19;18336:7;18328:45;;;;-1:-1:-1;;;18328:45:19;;;;;;;;;18388:6;18384:2389;18404:3;18400:1;:7;18384:2389;;;18484:14;18501:8;;18510:1;18501:11;;;;;;;;;;;;;;;;;;;;;;18484:28;;18527:13;18542:11;18557:24;18574:6;18557:16;:24::i;:::-;18526:55;;;;18603:8;18595:42;;;;-1:-1:-1;;;18595:42:19;;;;;;;;;18660:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;:42;-1:-1:-1;;;18660:42:19;;;;18659:43;18651:92;;;;-1:-1:-1;;;18651:92:19;;;;;;;;;18830:35;18889:12;18902:5;18889:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18889:19:19;;;;-1:-1:-1;18931:42:19;;;;;18923:86;;;;-1:-1:-1;;;18923:86:19;;;;;;;;;19039:49;;-1:-1:-1;;;19039:49:19;;19023:13;;-1:-1:-1;;;;;19039:24:19;;;;;:49;;19072:14;;19039:49;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19039:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19039:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19039:49:19;;;;;;;;;19023:65;;19155:18;19176:14;-1:-1:-1;;;;;19176:27:19;;19204:6;19176:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19176:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19176:35:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19176:35:19;;;;;;;;;19155:56;-1:-1:-1;19228:14:19;;19225:117;;19262:65;;-1:-1:-1;;;19262:65:19;;-1:-1:-1;;;;;19262:23:19;;;;;:65;;19294:4;;19301:6;;19309:10;;19321:5;;19262:65;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19262:65:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19262:65:19;;;;19225:117;19410:9;;19407:102;;19438:56;;-1:-1:-1;;;19438:56:19;;-1:-1:-1;;;;;19438:26:19;;;;;:56;;19473:4;;19480:6;;19488:5;;19438:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19438:56:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19438:56:19;;;;19407:102;19522:13;19538:21;:10;19553:5;19538:21;:14;:21;:::i;:::-;19522:37;;19661:15;19639:12;19652:5;19639:19;;;;;;;;;;;;;;;;;;;:37;;-1:-1:-1;;;;;;19639:37:19;-1:-1:-1;;;;;19639:37:19;;;;;;19882:51;;:27;;19910:15;19927:5;19882:27;:51::i;:::-;20036:49;;-1:-1:-1;;;20036:49:19;;20006:15;;-1:-1:-1;;;;;20036:22:19;;;;;:49;;20059:6;;20067:10;;19947:35;;20036:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20036:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20036:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20036:49:19;;;;;;;;;-1:-1:-1;20158:35:19;;-1:-1:-1;;;20158:35:19;;20134:21;;-1:-1:-1;;;;;20158:27:19;;;;;:35;;20186:6;;20158:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20158:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20158:35:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20158:35:19;;;;;;;;;20134:59;;20207:16;20233:6;-1:-1:-1;;;;;20226:24:19;;20259:14;20226:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20226:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20226:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20226:49:19;;;;;;;;;20207:68;-1:-1:-1;20311:8:19;20356:7;20420:35;:10;20356:7;20420:35;:22;:35;:::i;:::-;20403:13;:52;;:124;;;;-1:-1:-1;20492:35:19;:10;20515:11;20492:35;:22;:35;:::i;:::-;20475:13;:52;;20403:124;20378:195;;;;-1:-1:-1;;;20378:195:19;;;;;;;;;20624:30;:5;20642:11;20624:30;:17;:30;:::i;:::-;20612:8;:42;;:104;;;;-1:-1:-1;20686:30:19;:5;20704:11;20686:30;:17;:30;:::i;:::-;20674:8;:42;;20612:104;20587:175;;;;-1:-1:-1;;;20587:175:19;;;;;;;;;-1:-1:-1;;18409:3:19;;;;;-1:-1:-1;18384:2389:19;;-1:-1:-1;;;;;;;;;18384:2389:19;;;20788:42;20804:8;;20814:15;20788:42;;;;;;;;;;;;;;;;;662:1:54;18137:2700:19;;;:::o;2249:29::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2249:29:19;;-1:-1:-1;2249:29:19;:::o;1676:117:57:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;1739:7;:14;;-1:-1:-1;;;;1739:14:57;-1:-1:-1;;;1739:14:57;;;1768:18;;;;;;1775:10;;1768:18;;6972:477:19;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;7222:14:19;2091:5:58;7253:190:19;7273:3;7269:1;:7;7253:190;;;7362:70;7413:15;;7429:1;7413:18;;;;;;;;;;;;;7362:6;:14;;7377;;7392:1;7377:17;;;;;;;;;;;;;;;;;;;;;;7362:33;;;;;;;;;:70;7297:6;7312:14;;7327:1;7312:17;;;;;;;;;;;;;;;;;;;;;;7297:33;;;;;;;;;;;;;;;;;;:46;:33;;;;;:46;:135;7278:3;;7253:190;;;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;;;;;;6972:477:19:o;31326:756::-;31470:20;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;31507:11;31520:9;31533:25;31550:7;31533:16;:25::i;:::-;31506:52;;;;;;31576:6;31568:46;;;;-1:-1:-1;;;31568:46:19;;;;;;;;;31625:22;31650:6;:14;;31665:1;31650:17;;;;;;;;;;;;;;;;;;;;:24;;-1:-1:-1;;;31650:24:19;;;;;-1:-1:-1;31721:9:19;:69;;31763:27;31721:69;;;31733:27;31721:69;31684:106;;31817:9;31804:22;;;;;;;;:9;:22;;;;;;;;;:55;;;;31830:29;31849:9;31830:18;:29::i;:::-;31801:96;;;31882:4;31875:11;;;;;;;;31801:96;31990:9;31963:6;:14;;31978:1;31963:17;;;;;;;;;;;;;;;;;;;;;:36;;-1:-1:-1;;;;31963:36:19;-1:-1:-1;;;31963:36:19;;;;;;;;;;;;;;32034:7;-1:-1:-1;;;;;32014:39:19;;32043:9;32014:39;;;;;;;;;;;;;;;32070:5;32063:12;;;;;;4040:1;31326:756;;;;:::o;32200:582::-;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;32300:11;32313:9;32326:25;32343:7;32326:16;:25::i;:::-;32299:52;;;;;;32369:6;32361:36;;;;-1:-1:-1;;;32361:36:19;;;;;;;;;32408:26;32437:6;:14;;32452:1;32437:17;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;32437:24:19;;;;;-1:-1:-1;32491:27:19;32474:13;:44;;;;;;;;;:104;;;-1:-1:-1;32551:27:19;32534:13;:44;;;;;;;;;32474:104;:161;;;-1:-1:-1;32611:24:19;32594:13;:41;;;;;;;;;32474:161;32471:305;;;32678:19;32651:6;:14;;32666:1;32651:17;;;;;;;;;;;;;;;;;;;;;:46;;-1:-1:-1;;;;32651:46:19;-1:-1:-1;;;32651:46:19;;;;;;;;;;;;;;32736:7;-1:-1:-1;;;;;32716:49:19;;32745:19;32716:49;;;;;;;;;;;;;;;4510:1;;;32200:582;:::o;23979:632::-;24198:28;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;24325:23;24350:22;24374:28;24406;24425:8;;24406:28;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;24406:18:19;;-1:-1:-1;;;24406:28:19:i;:::-;24452:152;;;;;;;;24491:4;24452:152;;;;;;;;;;;;;;;;;23979:632;-1:-1:-1;;;;;;;;;23979:632:19:o;444:19:54:-;;;-1:-1:-1;;;;;444:19:54;;:::o;32908:472:19:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;32998:11:19;33011:9;33024:25;33041:7;33024:16;:25::i;:::-;32997:52;;;;;;33067:6;33059:36;;;;-1:-1:-1;;;33059:36:19;;;;;;;;;33106:26;33135:6;:14;;33150:1;33135:17;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;33135:24:19;;;;;-1:-1:-1;33207:27:19;33190:13;:44;;;;;;;;;:104;;;-1:-1:-1;33267:27:19;33250:13;:44;;;;;;;;;33190:104;33169:174;;;;-1:-1:-1;;;33169:174:19;;;;;;;;;-1:-1:-1;;33353:13:19;:20;;-1:-1:-1;;33353:20:19;;;;;-1:-1:-1;;32908:472:19:o;15262:639::-;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;15378:10;15390:11;15405:25;15422:7;15405:16;:25::i;:::-;15377:53;;;;15448:5;15440:39;;;;-1:-1:-1;;;15440:39:19;;;;;;;;;15534:5;15489:6;:14;;15504:5;15489:21;;;;;;;;;;;;;;;;;;;;;;;:50;;;;;-1:-1:-1;;;15489:50:19;-1:-1:-1;;;;15489:50:19;;;;;;;;;15550:295;;;;15648:11;15669:7;-1:-1:-1;;;;;15662:25:19;;15688:12;15701:5;15688:19;;;;;;;;;;;;;;;;;;;;15662:46;;-1:-1:-1;;;;;;15662:46:19;;;;;;;;;-1:-1:-1;;;;;15688:19:19;;15662:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15662:46:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15662:46:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15662:46:19;;;;;;;;;15648:60;-1:-1:-1;15725:7:19;;15722:113;;15772:12;15785:5;15772:19;;;;;;;;;;;;;;;;;;;;15751:69;;-1:-1:-1;;;15751:69:19;;-1:-1:-1;;;;;15772:19:19;;;;15751:49;;:69;;15801:7;;15810:3;;15772:19;;15751:69;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15751:69:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15751:69:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15751:69:19;;;;;;;;;;15722:113;15550:295;;15879:7;-1:-1:-1;;;;;15860:34:19;;15888:5;15860:34;;;;;;;21434:500;21594:12;21608:26;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;21651:11;21664:9;21677:25;21694:7;21677:16;:25::i;:::-;21650:52;;;;21720:6;21712:40;;;;-1:-1:-1;;;21712:40:19;;;;;;;;;21772:4;21762:14;;21794:133;;;;;;;;21830:6;:14;;21845:3;21830:19;;;;;;;;;;;;;;;;;;;21794:133;;;;;;;;;21830:19;;;;;21794:133;;-1:-1:-1;;;;;21794:133:19;;;;;;21830:19;;21794:133;;;;;-1:-1:-1;;;21794:133:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21875:12;21888:3;21875:17;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21875:17:19;21794:133;;;;;;;;;;;;21434:500;;21786:141;;-1:-1:-1;21434:500:19;;-1:-1:-1;;;;21434:500:19:o;24780:640::-;24975:24;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;25098:23;25123:22;25147:28;25179;25198:8;;25179:28;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;25179:18:19;;-1:-1:-1;;;25179:28:19:i;:::-;25097:110;;;;;;25225:188;;;;;;;;25260:4;25225:188;;;;;;25290:6;:14;;25225:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25225:188:19;;;;;;;;;;;;-1:-1:-1;;;25225:188:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25327:7;25225:188;;;;25361:11;25225:188;;;;25395:7;25225:188;;;25217:196;;4040:1;;;24780:640;;;;:::o;28812:276::-;28905:18;28940:11;28953;28968:25;28985:7;28968:16;:25::i;:::-;28939:54;;;;29011:6;29003:36;;;;-1:-1:-1;;;29003:36:19;;;;;;;;;29062:12;29075:5;29062:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29062:19:19;;28812:276;-1:-1:-1;;;;28812:276:19:o;21068:116::-;21136:15;;:::i;:::-;21167:10;;;21171:6;21167:10;;;;;;;;;;;;;;;;;;;;;21171:6;;21167:10;;;;21171:6;;-1:-1:-1;;21167:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21167:10:19;;;;;;;;;;;;-1:-1:-1;;;21167:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21167:10:19;;;-1:-1:-1;21167:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21068:116;-1:-1:-1;21068:116:19:o;413:160:73:-;494:13;:22;;;;;;;-1:-1:-1;;494:22:73;;;;;;;;;;526:29;:40;413:160::o;5716:505:19:-;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;5994:14:19;2091:5:58;6025:190:19;6045:3;6041:1;:7;6025:190;;;6134:70;6185:15;;6201:1;6185:18;;;;;;;;;;;;;6134:6;:14;;6149;;6164:1;6149:17;;;;;;;;;;;;;;;;;;;;;;6134:33;;;;;;;;;;;;;;;;;;;;:46;;;:50;;:70;;;;:::i;:::-;6069:6;6084:14;;6099:1;6084:17;;;;;;;;;;;;;;;;;;;;;;6069:33;;;;;;;;;;;;;;;;;;:46;:33;;;;;:46;:135;6050:3;;6025:190;;5086:353;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;5370:6:19;:28;;:62;;5416:15;;2077:19:58;5370:28:19;;;;;;;;578:195:73;677:11;692:24;709:6;692:16;:24::i;:::-;674:42;;;757:9;726:6;:14;;741:5;726:21;;;;;;;;;;;;;;;;;;;;;;;:40;;-1:-1:-1;;;;726:40:73;-1:-1:-1;;;726:40:73;;;;;;;;;;;;;;578:195;;;:::o;2055:20:19:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;971:118:73:-;1042:22;:40;;;;;;;-1:-1:-1;;1042:40:73;;;;;;;;;971:118::o;1993:18:19:-;;;-1:-1:-1;;;;;1993:18:19;;:::o;2884:970::-;1024:12:127;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:127;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:127;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:127;;;;;1225:18;1213:4;1225:18;;;1170:80;3164:42:19;:40;:42::i;:::-;3216:47;3256:6;3216:39;:47::i;:::-;-1:-1:-1;;;;;3282:18:19;;3274:50;;;;-1:-1:-1;;;3274:50:19;;;;;;;;;3342:19;3334:65;;;;-1:-1:-1;;;3334:65:19;;;;;;;;;3409:3;:10;;-1:-1:-1;;;;;3409:10:19;;-1:-1:-1;;;;;;3409:10:19;;;;;;3450:17;:22;;-1:-1:-1;;3450:22:19;3470:2;3450:22;;;3534:4;3502:29;:36;3409:3;3557:238;3577:19;;;3557:238;;;3617:167;3645:8;;3654:1;3645:11;;;;;;;;;;;;;;;;;;;;;;3674:12;;3687:1;3674:15;;;;;;;;;;;;;;;;;;;;;;3707:26;:24;:26::i;:::-;3751:16;;3768:1;3751:19;;;;;;;;;;;;;;;;;;;;;;3617:10;:167::i;:::-;-1:-1:-1;3598:3:19;;3557:238;;;;3804:43;3822:8;;3804:43;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3804:43:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3832:8:19;;-1:-1:-1;3832:8:19;;;;3804:43;;;3832:8;;3804:43;3832:8;3804:43;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3842:4:19;;-1:-1:-1;3804:17:19;;-1:-1:-1;;3804:43:19:i;:::-;1268:14:127;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:127;;;1264:55;2884:970:19;;;;;;;;;;;:::o;1905:93:54:-;1975:5;;:16;;;-1:-1:-1;;;1975:16:54;;;;1949:7;;-1:-1:-1;;;;;1975:5:54;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;1975:16:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1975:16:54;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1975:16:54;;;;;;;;;1968:23;;1905:93;:::o;1390:92:65:-;1046:3;1390:92;:::o;10914:1618:19:-;11103:11;-1:-1:-1;;;;;11138:21:19;;11130:62;;;;-1:-1:-1;;;11130:62:19;;;;;;;;;-1:-1:-1;;;;;11210:26:19;;11202:72;;;;-1:-1:-1;;;11202:72:19;;;;;;;;;11316:3;11292:20;:27;;:59;;;;;11347:4;11323:20;:28;;11292:59;11284:87;;;;-1:-1:-1;;;11284:87:19;;;;;;;;;11383:20;11409:25;11426:7;11409:16;:25::i;:::-;11382:52;;;11453:15;11452:16;11444:60;;;;-1:-1:-1;;;11444:60:19;;;;;;;;;11673:56;;-1:-1:-1;;;11673:56:19;;-1:-1:-1;;;;;11673:47:19;;;;;:56;;11721:7;;11673:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11673:56:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11673:56:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11673:56:19;;;;;;;;;;11740:23;11766:34;11792:7;11766:25;:34::i;:::-;11740:60;-1:-1:-1;11810:13:19;11826:32;11834:2;11740:60;11826:32;:15;:32;:::i;:::-;11810:48;-1:-1:-1;11869:13:19;11885:37;:20;11910:2;:11;;;11885:37;:24;:37;:::i;:::-;11971:6;:21;12037:17;;11869:53;;-1:-1:-1;11971:21:19;12037:17;;;;12011:43;;;;12003:77;;;;-1:-1:-1;;;12003:77:19;;;;;;;;;-1:-1:-1;;;;;12091:19:19;;;;;;;:10;:19;;;;;;;:45;;-1:-1:-1;;12091:45:19;;;;;;;12147:12;27:10:-1;;-1:-1;23:18;;;45:23;;12147:31:19;;;;;;;;;;-1:-1:-1;;;;;;12147:31:19;;;;;;;;;;;12208:224;;;;;;;;;;;12188:6;;12208:224;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12208:224:19;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;12188:245:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12188:245:19;-1:-1:-1;;;;;12188:245:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12188:245:19;-1:-1:-1;;;12188:245:19;;;;;;;;;;;;;-1:-1:-1;12188:245:19;;;;;;;;;;-1:-1:-1;;;12188:245:19;-1:-1:-1;;;;12188:245:19;;;;;;;;;;-1:-1:-1;12188:245:19;;;;;;;;;;;;;;;;;;;;;12449:34;-1:-1:-1;;;;;12449:34:19;;;-1:-1:-1;12449:34:19;;;;12470:12;;12449:34;;;;;;;;;;12502:23;10914:1618;-1:-1:-1;;;;;;;;;10914:1618:19:o;3354:104:54:-;3423:5;;3439:11;;3423:28;;-1:-1:-1;;;3423:28:54;;3397:7;;-1:-1:-1;;;;;3423:5:54;;:15;;:28;;3439:11;3423:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;16544:1231:19;16611:11;16624;16639:32;16656:14;16639:16;:32::i;:::-;16610:61;;;;16689:6;16681:40;;;;-1:-1:-1;;;16681:40:19;;;;;;;;;16746:6;:21;16777:20;;:::i;:::-;16800:6;:21;;;;;;;;;;;;;;;;;;;;;16777:44;;;;;;;;;16800:21;;;;;16777:44;;-1:-1:-1;;;;;16777:44:19;;;;;;16800:21;;16777:44;;;;;-1:-1:-1;;;16777:44:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16777:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16840:16;;;;;-1:-1:-1;16840:21:19;16832:71;;;;-1:-1:-1;;;16832:71:19;;;;;;;;;16921:19;;;;:24;16913:63;;;;-1:-1:-1;;;16913:63:19;;;;;;;;;17011:24;16994:6;:13;;;:41;;;;;;;;;;16986:75;;;;-1:-1:-1;;;16986:75:19;;;;;;;;;17072:15;17096:10;:3;17104:1;17096:10;:7;:10;:::i;:::-;17072:35;;17129:9;17120:18;;:5;:18;;;17117:610;;;17154:6;:20;;;;;;;;;;;;;;;;-1:-1:-1;;17154:20:19;;;;;;;;;-1:-1:-1;;;;;;17154:20:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17188:26:19;;;;:10;:26;;;;;;:30;;-1:-1:-1;;17188:30:19;;;17232:12;:18;;;;;;;;;;;;;;;;-1:-1:-1;;17232:18:19;;;;;-1:-1:-1;;;;;;17232:18:19;;;;;;17117:610;;;17337:6;:25;;;;;;;;;;;;;;;;;;;;;;17313:6;:14;;17328:5;17313:21;;;;;;;;;;;;;;;;;;:49;;:21;;;;;:49;;-1:-1:-1;;;;;;17313:49:19;-1:-1:-1;;;;;17313:49:19;;;;;;;;;;;;;-1:-1:-1;;;17313:49:19;;;;;;:21;;-1:-1:-1;;;;17313:49:19;;;;;;;;;;;;;;;;;-1:-1:-1;17313:49:19;;;;-1:-1:-1;;;;17313:49:19;-1:-1:-1;;;17313:49:19;;;;;;;;;;;;;;-1:-1:-1;17313:49:19;;;;;;;;;;;;;;;;;;;;;;;;;17376:6;:20;;;;;;;;;;;;;;;-1:-1:-1;;17376:20:19;;;;;;;;;-1:-1:-1;;;;;;17376:20:19;;;;;;;;;;;;;;;;;;;;17410:27;;:::i;:::-;17440:6;:21;;;;;;;;;;;;;;;;;;;;;17410:51;;;;;;;;;17440:21;;;;;17410:51;;-1:-1:-1;;;;;17410:51:19;;;;;;17440:21;;17410:51;;;;;-1:-1:-1;;;17410:51:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17410:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17508:26:19;;;-1:-1:-1;17508:26:19;;;;;;;;;;:30;;-1:-1:-1;;17508:30:19;;;;;;17563:18;;17552:30;;;;;;;;;:38;;;;;;;;;;;;17661:12;:23;;17563:18;;-1:-1:-1;17661:12:19;:23;;;;;;;;;;;;;;;;;;;;17639:12;:19;;-1:-1:-1;;;;;17661:23:19;;;;17639:19;;;;;;;;;;;;;;;;;;:45;;;;;-1:-1:-1;;;;;17639:45:19;;;;;-1:-1:-1;;;;;17639:45:19;;;;;;17698:12;:18;;;;;;;;;;;;;;;;-1:-1:-1;;17698:18:19;;;;;-1:-1:-1;;;;;;17698:18:19;;;;;;-1:-1:-1;17117:610:19;17756:11;;17742:26;;-1:-1:-1;;;;;17742:26:19;;;;;;17756:11;;17742:26;16544:1231;;;;;;:::o;13336:::-;13519:15;;13552;13544:54;;;;-1:-1:-1;;;13544:54:19;;;;;;;;;13631:8;:15;13616:11;:30;13608:73;;;;-1:-1:-1;;;13608:73:19;;;;;;;;;13697:9;13692:738;13716:11;13712:1;:15;13692:738;;;13749:11;13762;13777:29;13794:8;13803:1;13794:11;;;;;;;;;;;;;;13777:16;:29::i;:::-;13748:58;;;;13828:6;13820:36;;;;-1:-1:-1;;;13820:36:19;;;;;;;;;13871:20;;:::i;:::-;13894:17;13905:5;13894:10;:17::i;:::-;13871:40;;13926:20;13949:8;13958:1;13949:11;;;;;;;;;;;;;;13926:34;;13995:19;13978:36;;;;;;;;:6;:13;;;:36;;;;;;;;;13975:445;;;14079:4;14063:12;:20;;14034:119;;;;-1:-1:-1;;;14034:119:19;;;;;;;;;14205:12;14171:6;:14;;14186:5;14171:21;;;;;;;;;;;;;;;;;;;;:31;;:46;;;;13975:445;;;14301:6;:21;;;;;;;;;;;;;;;;;;;;;;:31;;;14285:12;:47;14256:149;;;;-1:-1:-1;;;14256:149:19;;;;;;;;;-1:-1:-1;;13729:3:19;;;;;-1:-1:-1;13692:738:19;;-1:-1:-1;13692:738:19;;;14444:12;14440:65;;14471:23;:21;:23::i;:::-;14520:40;14541:8;14551;14520:40;;;;;;;;29094:224;29177:23;29214:11;29260:6;:14;;29250:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29250:24:19;;;;;;;;;;;;-1:-1:-1;;;29250:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29290:6:19;:21;29250:24;;29290:21;;-1:-1:-1;29094:224:19;;-1:-1:-1;;;29094:224:19:o;834:176:116:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:116;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:116:o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;5166:177:65:-;5265:9;5297:39;5314:1;5317:5;1046:3;5297:16;:39::i;29862:379:19:-;-1:-1:-1;;;;;29999:18:19;;29951:11;29999:18;;;:10;:18;;;;;;;;;30030:10;30027:178;;30059:6;:21;30056:81;;-1:-1:-1;30113:5:19;;-1:-1:-1;30113:5:19;30105:17;;30056:81;30184:6;-1:-1:-1;;;;;30158:32:19;:6;:14;;30173:1;30158:17;;;;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;;;30158:22:19;:32;;;;;-1:-1:-1;30158:17:19;-1:-1:-1;30150:44:19;;30027:178;30222:4;;-1:-1:-1;29862:379:19;;;;:::o;29324:167::-;29411:20;;:::i;:::-;29456:6;:28;;;;;;;;;;;;;;;;;;;;;29447:37;;;;;;;;;29456:28;;;;;29447:37;;-1:-1:-1;;;;;29447:37:19;;;;;;29456:28;;29447:37;;;;;-1:-1:-1;;;29447:37:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29447:37:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29324:167:19:o;662:174:123:-;770:58;;744:85;;763:5;;-1:-1:-1;;;793:23:123;770:58;;818:2;;822:5;;770:58;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;770:58:123;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;770:58:123;;;179:29:-1;;;;160:49;;;744:18:123;:85::i;:::-;662:174;;;:::o;2257:161:65:-;2347:7;2377:34;2394:1;2397;644:4;2377:16;:34::i;30476:317:19:-;30573:4;30607:24;30596:7;:35;;;;;;;;;:85;;;-1:-1:-1;30658:23:19;30647:7;:34;;;;;;;;;30596:85;:131;;;-1:-1:-1;30708:19:19;30697:7;:30;;;;;;;;;30596:131;30593:172;;;-1:-1:-1;30750:4:19;30743:11;;30593:172;-1:-1:-1;30781:5:19;30476:317;;;;:::o;26756:1062::-;26871:23;26908:22;26944:28;26997:9;27015:8;:15;26997:34;;27065:3;27052:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;27042:27;;27107:3;27093:18;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27093:18:19;;27079:32;;27143:3;27131:16;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27131:16:19;-1:-1:-1;27121:26:19;-1:-1:-1;27199:7:19;27195:617;27216:3;27212:7;;:1;:7;;;27195:617;;;27240:15;27258:8;27267:1;27258:11;;;;;;;;;;;;;;;;27240:29;;27383:7;27393:1;27395;27393:3;27383:13;;27379:123;27402:3;27398:7;;:1;:7;;;27379:123;;;27448:8;27457:1;27448:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27437:22:19;:7;-1:-1:-1;;;;;27437:22:19;;;27429:58;;;;-1:-1:-1;;;27429:58:19;;;;;;;;;27407:3;;27379:123;;;;27568:11;27581;27596:25;27613:7;27596:16;:25::i;:::-;27567:54;;;;27643:6;27635:36;;;;-1:-1:-1;;;27635:36:19;;;;;;;;;27698:5;27685:7;27693:1;27685:10;;;;;;;;;;:18;;;;:10;;;;;;;;;:18;27730:6;:21;;:6;;:21;;;;;;;;;;;;;;;;;;27717:34;;;;;;;;;27730:21;;;;;27717:34;;-1:-1:-1;;;;;27717:34:19;;;;;;27730:21;;27717:34;;;;;-1:-1:-1;;;27717:34:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27717:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;:7;;:10;;;;;;;;;;;;;;:34;;;;27782:12;27795:5;27782:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27782:19:19;27765:11;27777:1;27765:14;;;;;;;;;;-1:-1:-1;;;;;27765:36:19;;;;:14;;;;;;;;;;;:36;-1:-1:-1;;;27221:3:19;;27195:617;;;;26756:1062;;;;;;:::o;1409:498:127:-;1820:4;1864:17;1895:7;1409:498;:::o;988:479:58:-;1442:11;:18;;-1:-1:-1;;;;1442:18:58;-1:-1:-1;;;1442:18:58;;;988:479::o;1224:127:57:-;1280:39;1312:6;1280:31;:39::i;:::-;-1:-1:-1;1329:7:57;:15;;-1:-1:-1;;;;1329:15:57;;;1224:127::o;479:268:50:-;551:7;570:16;601:6;-1:-1:-1;;;;;589:28:50;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;589:30:50;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;589:30:50;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;589:30:50;;;;;;;;;570:49;;;;649:1;637:8;:13;;:31;;;;;666:2;654:8;:14;;637:31;629:85;;;;-1:-1:-1;;;629:85:50;;;;;;;;2159:459:116;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:116;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:116;;;;;;;;14669:351:19;14740:6;:21;14726:11;;14802:112;14825:3;14821:1;:7;14802:112;;;14861:42;14875:6;:14;;14890:1;14875:17;;;;;;;;;;;;;;;;;;:27;;;14861:9;:13;;:42;;;;:::i;:::-;14849:54;-1:-1:-1;14830:3:19;;14802:112;;;;14944:4;14931:9;:17;;:38;;;;;14965:4;14952:9;:17;;14931:38;14923:90;;;;-1:-1:-1;;;14923:90:19;;;;;;;;;14669:351;;:::o;1732:187:116:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:116;;;;;;;;;;-1:-1:-1;;;1888:5:116;;;1732:187::o;2880:302:65:-;2990:7;;3101:8;:1;3107;3101:8;:5;:8;:::i;:::-;3089:20;-1:-1:-1;3163:12:65;3089:20;3169:5;3163:12;:5;:12;:::i;:::-;3156:19;2880:302;-1:-1:-1;;;;;2880:302:65:o;2666:1095:123:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:123;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:123;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:123;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:123;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:123;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:123;;;;;;;;1591:196:54;-1:-1:-1;;;;;1655:20:54;;1647:54;;;;-1:-1:-1;;;1647:54:54;;;;;;;;;1711:5;:22;;-1:-1:-1;;;;;;1711:22:54;-1:-1:-1;;;;;1711:22:54;;;;;1743:37;:35;:37::i;3073:130:116:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;686:610:124:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:124;;;686:610;-1:-1:-1;;686:610:124:o;1309:611:56:-;1531:23;;;;;;;;;;;;;;;1514:14;:40;1578:20;;;;;;;;;;;;;1564:11;:34;1626:23;;;;;;;;;;;;;1608:15;:41;1677:22;;;;;;;;;;;;;1660:14;:39;1723:20;;;;;;;;;;;;;1709:11;:34;1776:29;;;;;;;;;;;;;1753:20;:52;1832:22;;;;;;;;;;;;;1815:14;:39;1886:27;;;;;;;;;;;;;1864:19;:49;1309:611::o;3718:338:116:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:116;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:116:o;362:729:73:-;;;;;;;;;;-1:-1:-1;362:729:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;362:729:73;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:352;;;431:3;424:4;416:6;412:17;408:27;398:2;;449:1;446;439:12;398:2;-1:-1;469:20;;-1:-1;;;;;498:30;;495:2;;;541:1;538;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;618:4;610:6;606:17;596:8;592:32;589:41;586:2;;;643:1;640;633:12;586:2;391:262;;;;;;1785:124;1849:20;;1874:30;1849:20;1874:30;;1916:128;1991:13;;2009:30;1991:13;2009:30;;2051:166;2136:20;;2161:51;2136:20;2161:51;;2224:130;2291:20;;2316:33;2291:20;2316:33;;2361:134;2439:13;;2457:33;2439:13;2457:33;;2502:126;2567:20;;2592:31;2567:20;2592:31;;2635:130;2711:13;;2729:31;2711:13;2729:31;;2772:241;;2876:2;2864:9;2855:7;2851:23;2847:32;2844:2;;;2892:1;2889;2882:12;2844:2;2927:1;2944:53;2989:7;2969:9;2944:53;;3020:263;;3135:2;3123:9;3114:7;3110:23;3106:32;3103:2;;;3151:1;3148;3141:12;3103:2;3186:1;3203:64;3259:7;3239:9;3203:64;;3290:1487;;;;;;;;;;;3616:3;3604:9;3595:7;3591:23;3587:33;3584:2;;;3633:1;3630;3623:12;3584:2;3668:1;3685:53;3730:7;3710:9;3685:53;;;3675:63;;3647:97;3775:2;3793:53;3838:7;3829:6;3818:9;3814:22;3793:53;;;3783:63;;3754:98;3911:2;3900:9;3896:18;3883:32;-1:-1;;;;;3927:6;3924:30;3921:2;;;3967:1;3964;3957:12;3921:2;3995:80;4067:7;4058:6;4047:9;4043:22;3995:80;;;3985:90;;;;3862:219;4140:2;4129:9;4125:18;4112:32;-1:-1;;;;;4156:6;4153:30;4150:2;;;4196:1;4193;4186:12;4150:2;4224:80;4296:7;4287:6;4276:9;4272:22;4224:80;;;4214:90;;;;4091:219;4369:3;4358:9;4354:19;4341:33;-1:-1;;;;;4386:6;4383:30;4380:2;;;4426:1;4423;4416:12;4380:2;4454:80;4526:7;4517:6;4506:9;4502:22;4454:80;;;4444:90;;;;4320:220;4599:3;4588:9;4584:19;4571:33;-1:-1;;;;;4616:6;4613:30;4610:2;;;4656:1;4653;4646:12;4610:2;4684:77;4753:7;4744:6;4733:9;4729:22;4684:77;;;4674:87;;;;4550:217;3578:1199;;;;;;;;;;;;;;4784:485;;;;4919:2;4907:9;4898:7;4894:23;4890:32;4887:2;;;4935:1;4932;4925:12;4887:2;4970:1;4987:53;5032:7;5012:9;4987:53;;;4977:63;;4949:97;5077:2;5095:53;5140:7;5131:6;5120:9;5116:22;5095:53;;;5085:63;;5056:98;5185:2;5203:50;5245:7;5236:6;5225:9;5221:22;5203:50;;;5193:60;;5164:95;4881:388;;;;;;5276:360;;;5394:2;5382:9;5373:7;5369:23;5365:32;5362:2;;;5410:1;5407;5400:12;5362:2;5445:1;5462:53;5507:7;5487:9;5462:53;;;5452:63;;5424:97;5552:2;5570:50;5612:7;5603:6;5592:9;5588:22;5570:50;;;5560:60;;5531:95;5356:280;;;;;;5643:402;;;5782:2;5770:9;5761:7;5757:23;5753:32;5750:2;;;5798:1;5795;5788:12;5750:2;5833:1;5850:53;5895:7;5875:9;5850:53;;;5840:63;;5812:97;5940:2;5958:71;6021:7;6012:6;6001:9;5997:22;5958:71;;6052:366;;;6173:2;6161:9;6152:7;6148:23;6144:32;6141:2;;;6189:1;6186;6179:12;6141:2;6224:1;6241:53;6286:7;6266:9;6241:53;;;6231:63;;6203:97;6331:2;6349:53;6394:7;6385:6;6374:9;6370:22;6349:53;;6425:485;;;;6560:2;6548:9;6539:7;6535:23;6531:32;6528:2;;;6576:1;6573;6566:12;6528:2;6611:1;6628:53;6673:7;6653:9;6628:53;;;6618:63;;6590:97;6718:2;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;;6917:397;;;7056:2;7044:9;7035:7;7031:23;7027:32;7024:2;;;7072:1;7069;7062:12;7024:2;7107:31;;-1:-1;;;;;7147:30;;7144:2;;;7190:1;7187;7180:12;7144:2;7218:80;7290:7;7281:6;7270:9;7266:22;7218:80;;;7208:90;;;;7086:218;7018:296;;;;;;7321:522;;;;7477:2;7465:9;7456:7;7452:23;7448:32;7445:2;;;7493:1;7490;7483:12;7445:2;7528:31;;-1:-1;;;;;7568:30;;7565:2;;;7611:1;7608;7601:12;7565:2;7639:80;7711:7;7702:6;7691:9;7687:22;7639:80;;;7629:90;;;;7507:218;7756:2;7774:53;7819:7;7810:6;7799:9;7795:22;7774:53;;7850:678;;;;;8041:2;8029:9;8020:7;8016:23;8012:32;8009:2;;;8057:1;8054;8047:12;8009:2;8092:31;;-1:-1;;;;;8132:30;;8129:2;;;8175:1;8172;8165:12;8129:2;8203:80;8275:7;8266:6;8255:9;8251:22;8203:80;;;8193:90;;;;8071:218;8348:2;8337:9;8333:18;8320:32;-1:-1;;;;;8364:6;8361:30;8358:2;;;8404:1;8401;8394:12;8358:2;8432:80;8504:7;8495:6;8484:9;8480:22;8432:80;;;8003:525;;;;-1:-1;8422:90;-1:-1;;;;8003:525;8535:797;;;;;;8740:2;8728:9;8719:7;8715:23;8711:32;8708:2;;;8756:1;8753;8746:12;8708:2;8791:31;;-1:-1;;;;;8831:30;;8828:2;;;8874:1;8871;8864:12;8828:2;8902:80;8974:7;8965:6;8954:9;8950:22;8902:80;;;8892:90;;;;8770:218;9047:2;9036:9;9032:18;9019:32;-1:-1;;;;;9063:6;9060:30;9057:2;;;9103:1;9100;9093:12;9057:2;9131:80;9203:7;9194:6;9183:9;9179:22;9131:80;;;9121:90;;;;8998:219;9248:2;9266:50;9308:7;9299:6;9288:9;9284:22;9266:50;;;9256:60;;9227:95;8702:630;;;;;;;;;9339:955;;;;;;;9580:2;9568:9;9559:7;9555:23;9551:32;9548:2;;;9596:1;9593;9586:12;9548:2;9631:31;;-1:-1;;;;;9671:30;;9668:2;;;9714:1;9711;9704:12;9668:2;9742:78;9812:7;9803:6;9792:9;9788:22;9742:78;;;9732:88;;;;9610:216;9885:2;9874:9;9870:18;9857:32;-1:-1;;;;;9901:6;9898:30;9895:2;;;9941:1;9938;9931:12;9895:2;9969:80;10041:7;10032:6;10021:9;10017:22;9969:80;;;9959:90;;;;9836:219;10114:2;10103:9;10099:18;10086:32;-1:-1;;;;;10130:6;10127:30;10124:2;;;10170:1;10167;10160:12;10124:2;10198:80;10270:7;10261:6;10250:9;10246:22;10198:80;;;10188:90;;;;10065:219;9542:752;;;;;;;;;10301:235;;10402:2;10390:9;10381:7;10377:23;10373:32;10370:2;;;10418:1;10415;10408:12;10370:2;10453:1;10470:50;10512:7;10492:9;10470:50;;10543:257;;10655:2;10643:9;10634:7;10630:23;10626:32;10623:2;;;10671:1;10668;10661:12;10623:2;10706:1;10723:61;10776:7;10756:9;10723:61;;10807:360;;;10925:2;10913:9;10904:7;10900:23;10896:32;10893:2;;;10941:1;10938;10931:12;10893:2;10976:1;10993:50;11035:7;11015:9;10993:50;;11174:241;;11278:2;11266:9;11257:7;11253:23;11249:32;11246:2;;;11294:1;11291;11284:12;11246:2;11329:1;11346:53;11391:7;11371:9;11346:53;;11422:263;;11537:2;11525:9;11516:7;11512:23;11508:32;11505:2;;;11553:1;11550;11543:12;11505:2;11588:1;11605:64;11661:7;11641:9;11605:64;;11692:237;;11794:2;11782:9;11773:7;11769:23;11765:32;11762:2;;;11810:1;11807;11800:12;11762:2;11845:1;11862:51;11905:7;11885:9;11862:51;;11936:259;;12049:2;12037:9;12028:7;12024:23;12020:32;12017:2;;;12065:1;12062;12055:12;12017:2;12100:1;12117:62;12171:7;12151:9;12117:62;;12202:487;;;;12338:2;12326:9;12317:7;12313:23;12309:32;12306:2;;;12354:1;12351;12344:12;12306:2;12389:1;12406:51;12449:7;12429:9;12406:51;;;12396:61;;12368:95;12494:2;12512:53;12557:7;12548:6;12537:9;12533:22;12512:53;;;12502:63;;12473:98;12602:2;12620:53;12665:7;12656:6;12645:9;12641:22;12620:53;;12697:173;;12784:46;12826:3;12818:6;12784:46;;;-1:-1;;12859:4;12850:14;;12777:93;12879:261;;13008:92;13096:3;13088:6;13008:92;;;-1:-1;;13129:4;13120:14;;13001:139;13149:173;;13236:46;13278:3;13270:6;13236:46;;13331:165;;13414:42;13452:3;13444:6;13414:42;;13504:142;13595:45;13634:5;13595:45;;;13590:3;13583:58;13577:69;;;13653:103;13726:24;13744:5;13726:24;;13914:665;;14068:86;14147:6;14142:3;14068:86;;;14061:93;;14175:58;14227:5;14175:58;;;14253:7;14281:1;14266:291;14291:6;14288:1;14285:13;14266:291;;;14352:42;14387:6;14378:7;14352:42;;;14408:63;14467:3;14452:13;14408:63;;;14401:70;;14488:62;14543:6;14488:62;;;14478:72;-1:-1;;14313:1;14306:9;14266:291;;;-1:-1;14570:3;;14048:531;-1:-1;;;;;14048:531;14618:690;;14763:54;14811:5;14763:54;;;14830:86;14909:6;14904:3;14830:86;;;14823:93;;14937:56;14987:5;14937:56;;;15013:7;15041:1;15026:260;15051:6;15048:1;15045:13;15026:260;;;15118:6;15112:13;15139:63;15198:3;15183:13;15139:63;;;15132:70;;15219:60;15272:6;15219:60;;;15209:70;-1:-1;;15073:1;15066:9;15026:260;;15347:654;;15478:50;15522:5;15478:50;;;15541:76;15610:6;15605:3;15541:76;;;15534:83;;15638:52;15684:5;15638:52;;;15710:7;15738:1;15723:256;15748:6;15745:1;15742:13;15723:256;;;15815:6;15809:13;15836:63;15895:3;15880:13;15836:63;;;15829:70;;15916:56;15965:6;15916:56;;;15906:66;-1:-1;;15770:1;15763:9;15723:256;;16074:858;;16261:75;16330:5;16261:75;;;16349:107;16449:6;16444:3;16349:107;;;16342:114;;16477:77;16548:5;16477:77;;;16574:7;16602:1;16587:323;16612:6;16609:1;16606:13;16587:323;;;16679:6;16673:13;16700:105;16801:3;16786:13;16700:105;;;16693:112;;16822:81;16896:6;16822:81;;;16812:91;-1:-1;;16634:1;16627:9;16587:323;;17005:822;;17178:71;17243:5;17178:71;;;17262:97;17352:6;17347:3;17262:97;;;17255:104;;17380:73;17447:5;17380:73;;;17473:7;17501:1;17486:319;17511:6;17508:1;17505:13;17486:319;;;17578:6;17572:13;17599:105;17700:3;17685:13;17599:105;;;17592:112;;17721:77;17791:6;17721:77;;;17711:87;-1:-1;;17533:1;17526:9;17486:319;;17866:690;;18011:54;18059:5;18011:54;;;18078:86;18157:6;18152:3;18078:86;;;18071:93;;18185:56;18235:5;18185:56;;;18261:7;18289:1;18274:260;18299:6;18296:1;18293:13;18274:260;;;18366:6;18360:13;18387:63;18446:3;18431:13;18387:63;;;18380:70;;18467:60;18520:6;18467:60;;;18457:70;-1:-1;;18321:1;18314:9;18274:260;;18591:638;;18718:48;18760:5;18718:48;;;18779:74;18846:6;18841:3;18779:74;;;18772:81;;18874:50;18918:5;18874:50;;;18944:7;18972:1;18957:250;18982:6;18979:1;18976:13;18957:250;;;19049:6;19043:13;19070:59;19125:3;19110:13;19070:59;;;19063:66;;19146:54;19193:6;19146:54;;;19136:64;-1:-1;;19004:1;18997:9;18957:250;;19237:94;19304:21;19319:5;19304:21;;19449:113;19532:24;19550:5;19532:24;;19569:356;;19697:38;19729:5;19697:38;;;19747:88;19828:6;19823:3;19747:88;;;19740:95;;19840:52;19885:6;19880:3;19873:4;19866:5;19862:16;19840:52;;;19904:16;;;;;19677:248;-1:-1;;19677:248;19932:156;20030:52;20076:5;20030:52;;20095:148;20184:53;20231:5;20184:53;;20415:347;;20527:39;20560:5;20527:39;;;20578:71;20642:6;20637:3;20578:71;;;20571:78;;20654:52;20699:6;20694:3;20687:4;20680:5;20676:16;20654:52;;;20727:29;20749:6;20727:29;;;20718:39;;;;20507:255;-1:-1;;;20507:255;20770:321;;20930:67;20994:2;20989:3;20930:67;;;-1:-1;;;21010:44;;21082:2;21073:12;;20916:175;-1:-1;;20916:175;21100:320;;21260:67;21324:2;21319:3;21260:67;;;-1:-1;;;21340:43;;21411:2;21402:12;;21246:174;-1:-1;;21246:174;21429:321;;21589:67;21653:2;21648:3;21589:67;;;-1:-1;;;21669:44;;21741:2;21732:12;;21575:175;-1:-1;;21575:175;21759:350;;21937:85;22019:2;22014:3;21937:85;;;-1:-1;;;22035:37;;22100:2;22091:12;;21923:186;-1:-1;;21923:186;22118:325;;22278:67;22342:2;22337:3;22278:67;;;22378:27;22358:48;;22434:2;22425:12;;22264:179;-1:-1;;22264:179;22452:326;;22612:67;22676:2;22671:3;22612:67;;;22712:28;22692:49;;22769:2;22760:12;;22598:180;-1:-1;;22598:180;22787:341;;22965:84;23047:1;23042:3;22965:84;;;-1:-1;;;23062:30;;23120:1;23111:11;;22951:177;-1:-1;;22951:177;23137:327;;23297:67;23361:2;23356:3;23297:67;;;23397:29;23377:50;;23455:2;23446:12;;23283:181;-1:-1;;23283:181;23473:328;;23633:67;23697:2;23692:3;23633:67;;;23733:30;23713:51;;23792:2;23783:12;;23619:182;-1:-1;;23619:182;23810:321;;23970:67;24034:2;24029:3;23970:67;;;-1:-1;;;24050:44;;24122:2;24113:12;;23956:175;-1:-1;;23956:175;24140:371;;24300:67;24364:2;24359:3;24300:67;;;24400:34;24380:55;;-1:-1;;;24464:2;24455:12;;24448:26;24502:2;24493:12;;24286:225;-1:-1;;24286:225;24520:326;;24680:67;24744:2;24739:3;24680:67;;;24780:28;24760:49;;24837:2;24828:12;;24666:180;-1:-1;;24666:180;24855:352;;25033:85;25115:2;25110:3;25033:85;;;-1:-1;;;25131:39;;25198:2;25189:12;;25019:188;-1:-1;;25019:188;25216:332;;25376:67;25440:2;25435:3;25376:67;;;25476:34;25456:55;;25539:2;25530:12;;25362:186;-1:-1;;25362:186;25557:315;;25717:67;25781:2;25776:3;25717:67;;;-1:-1;;;25797:38;;25863:2;25854:12;;25703:169;-1:-1;;25703:169;25881:323;;26041:67;26105:2;26100:3;26041:67;;;26141:25;26121:46;;26195:2;26186:12;;26027:177;-1:-1;;26027:177;26213:327;;26373:67;26437:2;26432:3;26373:67;;;26473:29;26453:50;;26531:2;26522:12;;26359:181;-1:-1;;26359:181;26549:325;;26709:67;26773:2;26768:3;26709:67;;;26809:27;26789:48;;26865:2;26856:12;;26695:179;-1:-1;;26695:179;26883:327;;27043:67;27107:2;27102:3;27043:67;;;27143:29;27123:50;;27201:2;27192:12;;27029:181;-1:-1;;27029:181;27219:325;;27379:67;27443:2;27438:3;27379:67;;;27479:27;27459:48;;27535:2;27526:12;;27365:179;-1:-1;;27365:179;27553:373;;27713:67;27777:2;27772:3;27713:67;;;27813:34;27793:55;;-1:-1;;;27877:2;27868:12;;27861:28;27917:2;27908:12;;27699:227;-1:-1;;27699:227;27935:316;;28095:67;28159:2;28154:3;28095:67;;;-1:-1;;;28175:39;;28242:2;28233:12;;28081:170;-1:-1;;28081:170;28260:341;;28438:84;28520:1;28515:3;28438:84;;;-1:-1;;;28535:30;;28593:1;28584:11;;28424:177;-1:-1;;28424:177;28610:321;;28770:67;28834:2;28829:3;28770:67;;;-1:-1;;;28850:44;;28922:2;28913:12;;28756:175;-1:-1;;28756:175;28940:378;;29100:67;29164:2;29159:3;29100:67;;;29200:34;29180:55;;-1:-1;;;29264:2;29255:12;;29248:33;29309:2;29300:12;;29086:232;-1:-1;;29086:232;29327:331;;29487:67;29551:2;29546:3;29487:67;;;29587:33;29567:54;;29649:2;29640:12;;29473:185;-1:-1;;29473:185;29667:343;;29845:84;29927:1;29922:3;29845:84;;;-1:-1;;;29942:32;;30002:1;29993:11;;29831:179;-1:-1;;29831:179;30019:370;;30179:67;30243:2;30238:3;30179:67;;;30279:34;30259:55;;-1:-1;;;30343:2;30334:12;;30327:25;30380:2;30371:12;;30165:224;-1:-1;;30165:224;30398:317;;30558:67;30622:2;30617:3;30558:67;;;-1:-1;;;30638:40;;30706:2;30697:12;;30544:171;-1:-1;;30544:171;30724:346;;30902:85;30984:2;30979:3;30902:85;;;-1:-1;;;31000:33;;31061:2;31052:12;;30888:182;-1:-1;;30888:182;31079:328;;31239:67;31303:2;31298:3;31239:67;;;31339:30;31319:51;;31398:2;31389:12;;31225:182;-1:-1;;31225:182;31416:346;;31594:85;31676:2;31671:3;31594:85;;;-1:-1;;;31692:33;;31753:2;31744:12;;31580:182;-1:-1;;31580:182;31771:331;;31931:67;31995:2;31990:3;31931:67;;;32031:33;32011:54;;32093:2;32084:12;;31917:185;-1:-1;;31917:185;32111:383;;32271:67;32335:2;32330:3;32271:67;;;32371:34;32351:55;;-1:-1;;;32435:2;32426:12;;32419:38;32485:2;32476:12;;32257:237;-1:-1;;32257:237;32503:323;;32663:67;32727:2;32722:3;32663:67;;;32763:25;32743:46;;32817:2;32808:12;;32649:177;-1:-1;;32649:177;32835:320;;32995:67;33059:2;33054:3;32995:67;;;-1:-1;;;33075:43;;33146:2;33137:12;;32981:174;-1:-1;;32981:174;33164:330;;33324:67;33388:2;33383:3;33324:67;;;33424:32;33404:53;;33485:2;33476:12;;33310:184;-1:-1;;33310:184;33503:370;;33663:67;33727:2;33722:3;33663:67;;;33763:34;33743:55;;-1:-1;;;33827:2;33818:12;;33811:25;33864:2;33855:12;;33649:224;-1:-1;;33649:224;33882:379;;34042:67;34106:2;34101:3;34042:67;;;34142:34;34122:55;;-1:-1;;;34206:2;34197:12;;34190:34;34252:2;34243:12;;34028:233;-1:-1;;34028:233;34270:319;;34430:67;34494:2;34489:3;34430:67;;;-1:-1;;;34510:42;;34580:2;34571:12;;34416:173;-1:-1;;34416:173;34598:331;;34758:67;34822:2;34817:3;34758:67;;;34858:33;34838:54;;34920:2;34911:12;;34744:185;-1:-1;;34744:185;34938:321;;35098:67;35162:2;35157:3;35098:67;;;-1:-1;;;35178:44;;35250:2;35241:12;;35084:175;-1:-1;;35084:175;35268:331;;35428:67;35492:2;35487:3;35428:67;;;35528:33;35508:54;;35590:2;35581:12;;35414:185;-1:-1;;35414:185;35608:370;;35768:67;35832:2;35827:3;35768:67;;;35868:34;35848:55;;-1:-1;;;35932:2;35923:12;;35916:25;35969:2;35960:12;;35754:224;-1:-1;;35754:224;35987:376;;36147:67;36211:2;36206:3;36147:67;;;36247:34;36227:55;;-1:-1;;;36311:2;36302:12;;36295:31;36354:2;36345:12;;36133:230;-1:-1;;36133:230;36372:343;;36550:84;36632:1;36627:3;36550:84;;;-1:-1;;;36647:32;;36707:1;36698:11;;36536:179;-1:-1;;36536:179;36724:331;;36884:67;36948:2;36943:3;36884:67;;;36984:33;36964:54;;37046:2;37037:12;;36870:185;-1:-1;;36870:185;37064:374;;37224:67;37288:2;37283:3;37224:67;;;37324:34;37304:55;;-1:-1;;;37388:2;37379:12;;37372:29;37429:2;37420:12;;37210:228;-1:-1;;37210:228;37505:1125;37725:23;;37656:4;37761:38;;;37505:1125;;37647:14;;;;37814:141;37647:14;37725:23;37814:141;;;37806:149;;37676:291;38046:4;38039:5;38035:16;38029:23;38058:59;38111:4;38106:3;38102:14;38088:12;38058:59;;;37977:146;38207:4;38200:5;38196:16;38190:23;38219:57;38270:4;38265:3;38261:14;38247:12;38219:57;;;38133:149;38357:4;38350:5;38346:16;38340:23;38369:57;38420:4;38415:3;38411:14;38397:12;38369:57;;;38292:140;38523:4;38516:5;38512:16;38506:23;38535:63;38592:4;38587:3;38583:14;38569:12;38535:63;;;-1:-1;38621:4;37629:1001;-1:-1;;;37629:1001;38710:697;38937:23;;38867:6;38858:16;;;38966:109;38862:3;38937:23;38966:109;;;38889:192;39160:4;39153:5;39149:16;39143:23;39172:63;39229:4;39224:3;39220:14;39206:12;39172:63;;;39091:150;39315:4;39308:5;39304:16;39298:23;39327:59;39380:4;39375:3;39371:14;39357:12;39327:59;;39473:1134;39682:23;;39616:4;39607:14;;;39711:63;39611:3;39682:23;39711:63;;;39636:144;39855:4;39848:5;39844:16;39838:23;39867:79;39940:4;39935:3;39931:14;39917:12;39867:79;;;39790:162;40041:4;40034:5;40030:16;40024:23;40053:57;40104:4;40099:3;40095:14;40081:12;40053:57;;;39962:154;40190:4;40183:5;40179:16;40173:23;40202:63;40259:4;40254:3;40250:14;40236:12;40202:63;;;40126:145;40349:4;40342:5;40338:16;40332:23;40361:63;40418:4;40413:3;40409:14;40395:12;40361:63;;;40281:149;40511:4;40504:5;40500:16;40494:23;40523:63;40580:4;40575:3;40571:14;40557:12;40523:63;;41877:1175;42115:23;;41877:1175;;42046:4;42037:14;;;42144:57;42041:3;42115:23;42144:57;;;42066:141;42283:4;42276:5;42272:16;42266:23;42335:3;42329:4;42325:14;42318:4;42313:3;42309:14;42302:38;42355:141;42491:4;42477:12;42355:141;;;42347:149;;42217:291;42588:4;42581:5;42577:16;42571:23;42640:3;42634:4;42630:14;42623:4;42618:3;42614:14;42607:38;42660:99;42754:4;42740:12;42660:99;;;42652:107;;42518:253;42847:4;42840:5;42836:16;42830:23;42899:3;42893:4;42889:14;42882:4;42877:3;42873:14;42866:38;42919:95;43009:4;42995:12;42919:95;;43138:1184;43379:23;;43138:1184;;43309:4;43300:14;;;43408:63;43304:3;43379:23;43408:63;;44398:1471;44628:23;;44398:1471;;44559:4;44550:14;;;44657:57;44554:3;44628:23;44657:57;;;44579:141;44799:4;44792:5;44788:16;44782:23;44851:3;44845:4;44841:14;44834:4;44829:3;44825:14;44818:38;44871:141;45007:4;44993:12;44871:141;;;44863:149;;44730:294;45100:4;45093:5;45089:16;45083:23;45152:3;45146:4;45142:14;45135:4;45130:3;45126:14;45119:38;45172:141;45308:4;45294:12;45172:141;;;45164:149;;45034:291;45405:4;45398:5;45394:16;45388:23;45457:3;45451:4;45447:14;45440:4;45435:3;45431:14;45424:38;45477:99;45571:4;45557:12;45477:99;;;45469:107;;45335:253;45664:4;45657:5;45653:16;45647:23;45716:3;45710:4;45706:14;45699:4;45694:3;45690:14;45683:38;45736:95;45826:4;45812:12;45736:95;;46106:97;46175:22;46191:5;46175:22;;46324:262;;46468:93;46557:3;46548:6;46468:93;;46593:372;;46792:148;46936:3;46792:148;;46972:372;;47171:148;47315:3;47171:148;;47351:372;;47550:148;47694:3;47550:148;;47730:372;;47929:148;48073:3;47929:148;;48109:372;;48308:148;48452:3;48308:148;;48488:372;;48687:148;48831:3;48687:148;;48867:372;;49066:148;49210:3;49066:148;;49246:372;;49445:148;49589:3;49445:148;;49625:213;49743:2;49728:18;;49757:71;49732:9;49801:6;49757:71;;49845:229;49971:2;49956:18;;49985:79;49960:9;50037:6;49985:79;;50081:435;50255:2;50240:18;;50269:71;50244:9;50313:6;50269:71;;;50351:72;50419:2;50408:9;50404:18;50395:6;50351:72;;;50434;50502:2;50491:9;50487:18;50478:6;50434:72;;50523:535;50719:3;50704:19;;50734:71;50708:9;50778:6;50734:71;;;50816:72;50884:2;50873:9;50869:18;50860:6;50816:72;;;50899;50967:2;50956:9;50952:18;50943:6;50899:72;;;50982:66;51044:2;51033:9;51029:18;51020:6;50982:66;;51065:324;51211:2;51196:18;;51225:71;51200:9;51269:6;51225:71;;;51307:72;51375:2;51364:9;51360:18;51351:6;51307:72;;51396:423;51564:2;51549:18;;51578:71;51553:9;51622:6;51578:71;;;51660:72;51728:2;51717:9;51713:18;51704:6;51660:72;;;51743:66;51805:2;51794:9;51790:18;51781:6;51743:66;;51826:492;52032:2;52046:47;;;52017:18;;52107:118;52017:18;52211:6;52203;52107:118;;;52099:126;;52236:72;52304:2;52293:9;52289:18;52280:6;52236:72;;52325:620;52571:2;52585:47;;;52556:18;;52646:108;52556:18;52740:6;52646:108;;;52638:116;;52802:9;52796:4;52792:20;52787:2;52776:9;52772:18;52765:48;52827:108;52930:4;52921:6;52827:108;;52952:556;53190:2;53204:47;;;53175:18;;53265:150;53175:18;53401:6;53265:150;;;53257:158;;53426:72;53494:2;53483:9;53479:18;53470:6;53426:72;;53515:201;53627:2;53612:18;;53641:65;53616:9;53679:6;53641:65;;53723:880;54067:3;54052:19;;54082:65;54056:9;54120:6;54082:65;;;54195:9;54189:4;54185:20;54180:2;54169:9;54165:18;54158:48;54220:78;54293:4;54284:6;54220:78;;;54212:86;;54309:136;54441:2;54430:9;54426:18;54417:6;54309:136;;;54456:137;54588:3;54577:9;54573:19;54564:6;54456:137;;54610:441;54814:3;54799:19;;54829:65;54803:9;54867:6;54829:65;;;54905:136;55037:2;55026:9;55022:18;55013:6;54905:136;;55058:213;55176:2;55161:18;;55190:71;55165:9;55234:6;55190:71;;55278:243;55411:2;55396:18;;55425:86;55400:9;55484:6;55425:86;;55528:245;55662:2;55647:18;;55676:87;55651:9;55736:6;55676:87;;55780:301;55918:2;55932:47;;;55903:18;;55993:78;55903:18;56057:6;55993:78;;56088:407;56279:2;56293:47;;;56264:18;;56354:131;56264:18;56354:131;;56502:407;56693:2;56707:47;;;56678:18;;56768:131;56678:18;56768:131;;56916:407;57107:2;57121:47;;;57092:18;;57182:131;57092:18;57182:131;;57330:407;57521:2;57535:47;;;57506:18;;57596:131;57506:18;57596:131;;57744:407;57935:2;57949:47;;;57920:18;;58010:131;57920:18;58010:131;;58158:407;58349:2;58363:47;;;58334:18;;58424:131;58334:18;58424:131;;58572:407;58763:2;58777:47;;;58748:18;;58838:131;58748:18;58838:131;;58986:407;59177:2;59191:47;;;59162:18;;59252:131;59162:18;59252:131;;59400:407;59591:2;59605:47;;;59576:18;;59666:131;59576:18;59666:131;;59814:407;60005:2;60019:47;;;59990:18;;60080:131;59990:18;60080:131;;60228:407;60419:2;60433:47;;;60404:18;;60494:131;60404:18;60494:131;;60642:407;60833:2;60847:47;;;60818:18;;60908:131;60818:18;60908:131;;61056:407;61247:2;61261:47;;;61232:18;;61322:131;61232:18;61322:131;;61470:407;61661:2;61675:47;;;61646:18;;61736:131;61646:18;61736:131;;61884:407;62075:2;62089:47;;;62060:18;;62150:131;62060:18;62150:131;;62298:407;62489:2;62503:47;;;62474:18;;62564:131;62474:18;62564:131;;62712:407;62903:2;62917:47;;;62888:18;;62978:131;62888:18;62978:131;;63126:407;63317:2;63331:47;;;63302:18;;63392:131;63302:18;63392:131;;63540:407;63731:2;63745:47;;;63716:18;;63806:131;63716:18;63806:131;;63954:407;64145:2;64159:47;;;64130:18;;64220:131;64130:18;64220:131;;64368:407;64559:2;64573:47;;;64544:18;;64634:131;64544:18;64634:131;;64782:407;64973:2;64987:47;;;64958:18;;65048:131;64958:18;65048:131;;65196:407;65387:2;65401:47;;;65372:18;;65462:131;65372:18;65462:131;;65610:407;65801:2;65815:47;;;65786:18;;65876:131;65786:18;65876:131;;66024:407;66215:2;66229:47;;;66200:18;;66290:131;66200:18;66290:131;;66438:407;66629:2;66643:47;;;66614:18;;66704:131;66614:18;66704:131;;66852:407;67043:2;67057:47;;;67028:18;;67118:131;67028:18;67118:131;;67266:407;67457:2;67471:47;;;67442:18;;67532:131;67442:18;67532:131;;67680:407;67871:2;67885:47;;;67856:18;;67946:131;67856:18;67946:131;;68094:407;68285:2;68299:47;;;68270:18;;68360:131;68270:18;68360:131;;68508:407;68699:2;68713:47;;;68684:18;;68774:131;68684:18;68774:131;;68922:407;69113:2;69127:47;;;69098:18;;69188:131;69098:18;69188:131;;69336:407;69527:2;69541:47;;;69512:18;;69602:131;69512:18;69602:131;;69750:407;69941:2;69955:47;;;69926:18;;70016:131;69926:18;70016:131;;70164:407;70355:2;70369:47;;;70340:18;;70430:131;70340:18;70430:131;;70578:407;70769:2;70783:47;;;70754:18;;70844:131;70754:18;70844:131;;70992:407;71183:2;71197:47;;;71168:18;;71258:131;71168:18;71258:131;;71406:407;71597:2;71611:47;;;71582:18;;71672:131;71582:18;71672:131;;71820:407;72011:2;72025:47;;;71996:18;;72086:131;71996:18;72086:131;;72234:407;72425:2;72439:47;;;72410:18;;72500:131;72410:18;72500:131;;72648:361;72816:2;72830:47;;;72801:18;;72891:108;72801:18;72985:6;72891:108;;73016:314;73184:3;73169:19;;73199:121;73173:9;73293:6;73199:121;;73337:397;73523:2;73537:47;;;73508:18;;73598:126;73508:18;73710:6;73598:126;;73741:401;73929:2;73943:47;;;73914:18;;74004:128;73914:18;74118:6;74004:128;;74149:381;74327:2;74341:47;;;74312:18;;74402:118;74312:18;74506:6;74402:118;;74537:472;74733:2;74718:18;;74747:71;74722:9;74791:6;74747:71;;;74866:9;74860:4;74856:20;74851:2;74840:9;74836:18;74829:48;74891:108;74994:4;74985:6;74891:108;;75016:205;75130:2;75115:18;;75144:67;75119:9;75184:6;75144:67;;75228:515;75414:3;75399:19;;75429:67;75403:9;75469:6;75429:67;;;75507:66;75569:2;75558:9;75554:18;75545:6;75507:66;;;75584;75646:2;75635:9;75631:18;75622:6;75584:66;;;75661:72;75729:2;75718:9;75714:18;75705:6;75661:72;;75750:118;75838:3;75824:44;75875:147;75995:4;75986:14;;75943:79;76851:133;76950:12;;76921:63;78836:168;78944:19;;;78993:4;78984:14;;78937:67;80447:119;;80521:39;80556:2;80551:3;80547:12;80542:3;80521:39;;80574:91;;80636:24;80654:5;80636:24;;80672:85;80738:13;80731:21;;80714:43;80843:142;80923:5;80929:51;80923:5;80929:51;;80992:121;-1:-1;;;;;81054:54;;81037:76;81199:81;81270:4;81259:16;;81242:38;81287:129;;81374:37;81405:5;81423:151;;81517:52;81563:5;81517:52;;81711:142;;81806:42;81842:5;81806:42;;82104:268;82169:1;82176:101;82190:6;82187:1;82184:13;82176:101;;;82257:11;;;82251:18;82238:11;;;82231:39;82212:2;82205:10;82176:101;;;82292:6;82289:1;82286:13;82283:2;;;-1:-1;;82357:1;82339:16;;82332:27;82153:219;82380:97;82468:2;82448:14;-1:-1;;82444:28;;82428:49;82485:109;82572:1;82565:5;82562:12;82552:2;;82578:9;82601:117;82670:24;82688:5;82670:24;;;82663:5;82660:35;82650:2;;82709:1;82706;82699:12;82725:111;82791:21;82806:5;82791:21;;82843:112;82930:1;82923:5;82920:12;82910:2;;82946:1;82943;82936:12;82962:117;83031:24;83049:5;83031:24;;83086:113;83153:22;83169:5;83153:22;",
  "source": "pragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { BasketManager } from \"../../mix/BasketManager.sol\";\nimport { MixStructs } from \"../../mix/shared/MixStructs.sol\";\nimport { BasketManager } from \"../../mix/BasketManager.sol\";\nimport { StableMath } from \"../../shared/StableMath.sol\";\n\n// This mock allows the direct setting of basket properties\ncontract MockBasketManager is BasketManager {\n\n    function setBasket(bool failed, uint256 colRatio)\n        external\n    {\n        basket.failed = failed;\n        basket.collateralisationRatio = colRatio;\n    }\n    function setBassetStatus(address bAsset, BassetStatus newStatus)\n        external\n    {\n        (, uint8 index) = _isAssetInBasket(bAsset);\n        basket.bassets[index].status = newStatus;\n    }\n    function setBassetRatio(address bAsset, uint256 _newRatio)\n        external\n    {\n        (, uint8 index) = _isAssetInBasket(bAsset);\n        basket.bassets[index].ratio = _newRatio;\n    }\n    function setRecol(bool undergoingRecol)\n        external\n    {\n        basket.undergoingRecol = undergoingRecol;\n    }\n}\n\n\n\n// This mock returns an invalid forge from the prepareForgeBasset call\ncontract MockBasketManager1 is BasketManager {\n\n    Basset private testBasset;\n    Basket private testBasket;\n\n    constructor(address _bAsset) public {\n        testBasset = Basset({\n            addr: _bAsset,\n            ratio: StableMath.getRatioScale(),\n            maxWeight: 0,\n            vaultBalance: 0,\n            status: BassetStatus.Normal,\n            isTransferFeeCharged: false\n        });\n        basket.collateralisationRatio = 1e18;\n    }\n\n    function getBasket()\n        external\n        view\n        returns (\n            Basket memory b\n        )\n    {\n        return basket;\n    }\n\n    function prepareForgeBasset(address /*_amts*/, uint256 /*_amt*/, bool /*_mint*/)\n        external\n        returns (\n            bool isValid,\n            BassetDetails memory bInfo\n        )\n    {\n        bInfo = BassetDetails({\n            bAsset: testBasset,\n            integrator: address(0),\n            index: 0\n        });\n        isValid = false;\n    }\n\n    function prepareForgeBassets(\n        address[] calldata /*_amts*/,\n        uint256[] calldata /*_amts*/,\n        bool /* _isMint */\n    )\n        external\n        returns (ForgePropsMulti memory props)\n    {\n        Basset[] memory bAssets = new Basset[](1);\n        address[] memory integrators = new address[](1);\n        uint8[] memory indexes = new uint8[](1);\n        bAssets[0] = testBasset;\n        integrators[0] = address(0);\n        indexes[0] = 0;\n        return ForgePropsMulti({\n            isValid: false,\n            bAssets: bAssets,\n            integrators: integrators,\n            indexes: indexes\n        });\n    }\n\n}\n\n\n// This mock returns an invalid integrator from the prepareForgeBasset call\ncontract MockBasketManager2 is MixStructs {\n\n    Basset private testBasset;\n\n    constructor(address _bAsset) public {\n        testBasset = Basset({\n            addr: _bAsset,\n            ratio: StableMath.getRatioScale(),\n            maxWeight: 0,\n            vaultBalance: 0,\n            status: BassetStatus.Normal,\n            isTransferFeeCharged: false\n        });\n    }\n\n    function prepareForgeBasset(address /*_token*/, uint256 /*_amt*/, bool /*_mint*/)\n        external\n        returns (\n            bool isValid,\n            BassetDetails memory bInfo\n        )\n    {\n        bInfo = BassetDetails({\n            bAsset: testBasset,\n            integrator: address(0),\n            index: 0\n        });\n        isValid = true;\n    }\n\n    function prepareForgeBassets(\n        address[] calldata /*bassets*/,\n        uint256[] calldata /*_amts*/,\n        bool /* _isMint */\n    )\n        external\n        returns (ForgePropsMulti memory props)\n    {\n        Basset[] memory bAssets = new Basset[](1);\n        address[] memory integrators = new address[](1);\n        uint8[] memory indexes = new uint8[](1);\n        bAssets[0] = testBasset;\n        integrators[0] = address(0);\n        indexes[0] = 0;\n        return ForgePropsMulti({\n            isValid: true,\n            bAssets: bAssets,\n            integrators: integrators,\n            indexes: indexes\n        });\n    }\n}\n\ncontract MockBasketManager3 is BasketManager {\n    function failBasket() public {\n        basket.failed = true;\n    }\n\n    function setBassetStatus(address _bAsset, BassetStatus _status) public {\n        (bool exists, uint8 index) = _isAssetInBasket(_bAsset);\n        require(exists, \"bAsset does not exist\");\n        basket.bassets[index].status = _status;\n    }\n\n}\n\n",
  "sourcePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
  "ast": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
    "exportedSymbols": {
      "MockBasketManager": [
        23476
      ],
      "MockBasketManager1": [
        23616
      ],
      "MockBasketManager2": [
        23740
      ],
      "MockBasketManager3": [
        23783
      ]
    },
    "id": 23784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23386,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:73"
      },
      {
        "id": 23387,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:73"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23389,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "59:60:73",
        "symbolAliases": [
          {
            "foreign": 23388,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol",
        "file": "../../mix/shared/MixStructs.sol",
        "id": 23391,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 13644,
        "src": "120:61:73",
        "symbolAliases": [
          {
            "foreign": 23390,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23393,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "182:60:73",
        "symbolAliases": [
          {
            "foreign": 23392,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol",
        "file": "../../shared/StableMath.sol",
        "id": 23395,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 22201,
        "src": "243:57:73",
        "symbolAliases": [
          {
            "foreign": 23394,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23396,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "392:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23397,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23476,
        "linearizedBaseContracts": [
          23476,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23416,
              "nodeType": "Block",
              "src": "484:89:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23404,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "494:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "494:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23407,
                      "name": "failed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23399,
                      "src": "510:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "494:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23409,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23410,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "526:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "526:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23413,
                      "name": "colRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23401,
                      "src": "558:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "526:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23415,
                  "nodeType": "ExpressionStatement",
                  "src": "526:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23399,
                  "name": "failed",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "432:11:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "name": "colRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "445:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:31:73"
            },
            "returnParameters": {
              "id": 23403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:73"
            },
            "scope": 23476,
            "src": "413:160:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23439,
              "nodeType": "Block",
              "src": "664:109:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23425
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23425,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23439,
                      "src": "677:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23424,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23427,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "709:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23426,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "692:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23430,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "726:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "726:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23434,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23432,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23425,
                          "src": "741:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "726:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "726:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23436,
                      "name": "newStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23421,
                      "src": "757:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "726:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23438,
                  "nodeType": "ExpressionStatement",
                  "src": "726:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "603:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "newStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "619:22:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "619:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:40:73"
            },
            "returnParameters": {
              "id": 23423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:73"
            },
            "scope": 23476,
            "src": "578:195:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23462,
              "nodeType": "Block",
              "src": "858:108:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23448
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23448,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23462,
                      "src": "871:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23450,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23442,
                        "src": "903:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23449,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "886:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23453,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "920:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23456,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "920:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23457,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23455,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23448,
                          "src": "935:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "920:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ratio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "920:27:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23459,
                      "name": "_newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23444,
                      "src": "950:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:39:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23461,
                  "nodeType": "ExpressionStatement",
                  "src": "920:39:73"
                }
              ]
            },
            "documentation": null,
            "id": 23463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23442,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "802:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23444,
                  "name": "_newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "818:17:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:35:73"
            },
            "returnParameters": {
              "id": 23446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:73"
            },
            "scope": 23476,
            "src": "778:188:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23474,
              "nodeType": "Block",
              "src": "1032:57:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23468,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1042:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "undergoingRecol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13569,
                      "src": "1042:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23471,
                      "name": "undergoingRecol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23465,
                      "src": "1067:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1042:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23473,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRecol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23465,
                  "name": "undergoingRecol",
                  "nodeType": "VariableDeclaration",
                  "scope": 23475,
                  "src": "989:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "988:22:73"
            },
            "returnParameters": {
              "id": 23467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:73"
            },
            "scope": 23476,
            "src": "971:118:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "362:729:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23477,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "1197:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23478,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23616,
        "linearizedBaseContracts": [
          23616,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23480,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1218:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23479,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "1218:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23482,
            "name": "testBasket",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1249:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basket_$13574_storage",
              "typeString": "struct MixStructs.Basket"
            },
            "typeName": {
              "contractScope": null,
              "id": 23481,
              "name": "Basket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13574,
              "src": "1249:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                "typeString": "struct MixStructs.Basket"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23507,
              "nodeType": "Block",
              "src": "1317:305:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23487,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "1327:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23489,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23484,
                          "src": "1367:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23490,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "1395:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "1395:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23495,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "1498:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1553:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23488,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "1340:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1340:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "1327:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23500,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:242:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23501,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1579:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "1579:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 23504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1579:36:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23506,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:36:73"
                }
              ]
            },
            "documentation": null,
            "id": 23508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23484,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23508,
                  "src": "1293:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:17:73"
            },
            "returnParameters": {
              "id": 23486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:73"
            },
            "scope": 23616,
            "src": "1281:341:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23515,
              "nodeType": "Block",
              "src": "1739:30:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23513,
                    "name": "basket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4148,
                    "src": "1756:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage",
                      "typeString": "struct MixStructs.Basket storage ref"
                    }
                  },
                  "functionReturnParameters": 23512,
                  "id": 23514,
                  "nodeType": "Return",
                  "src": "1749:13:73"
                }
              ]
            },
            "documentation": null,
            "id": 23516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:73"
            },
            "returnParameters": {
              "id": 23512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23511,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 23516,
                  "src": "1709:15:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Basket_$13574_memory_ptr",
                    "typeString": "struct MixStructs.Basket"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23510,
                    "name": "Basket",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13574,
                    "src": "1709:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                      "typeString": "struct MixStructs.Basket"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:39:73"
            },
            "scope": 23616,
            "src": "1628:141:73",
            "stateMutability": "view",
            "superFunction": 5469,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23543,
              "nodeType": "Block",
              "src": "1970:165:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23529,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23527,
                      "src": "1980:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23531,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23480,
                          "src": "2024:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23530,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "1988:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1988:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "1980:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23539,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23525,
                      "src": "2113:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 23540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:5:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2113:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:15:73"
                }
              ]
            },
            "documentation": null,
            "id": 23544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1803:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1822:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1840:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:53:73"
            },
            "returnParameters": {
              "id": 23528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1903:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1929:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23526,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "1929:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1889:76:73"
            },
            "scope": 23616,
            "src": "1775:360:73",
            "stateMutability": "nonpayable",
            "superFunction": 5517,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23614,
              "nodeType": "Block",
              "src": "2348:428:73",
              "statements": [
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2358:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23558,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2358:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23559,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2358:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2384:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23561,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2388:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2388:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:41:73"
                },
                {
                  "assignments": [
                    23570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23570,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2409:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23569,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2409:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2440:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23572,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2444:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:47:73"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2466:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23579,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2466:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23586,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2491:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23581,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2495:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23582,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2495:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23587,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2515:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23589,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23590,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "2528:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "2515:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23592,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2548:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23595,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2560:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2548:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2548:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23601,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2585:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2585:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2585:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23606,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 23608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:5:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23609,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2683:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2717:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23611,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2751:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23607,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "2616:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2616:153:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23556,
                  "id": 23613,
                  "nodeType": "Return",
                  "src": "2609:160:73"
                }
              ]
            },
            "documentation": null,
            "id": 23615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2179:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2179:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2217:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2217:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2217:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2255:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2169:110:73"
            },
            "returnParameters": {
              "id": 23556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23555,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2314:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23554,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "2314:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2313:30:73"
            },
            "scope": 23616,
            "src": "2141:635:73",
            "stateMutability": "nonpayable",
            "superFunction": 5674,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "1166:1613:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23617,
              "name": "MixStructs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13643,
              "src": "2889:10:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixStructs_$13643",
                "typeString": "contract MixStructs"
              }
            },
            "id": 23618,
            "nodeType": "InheritanceSpecifier",
            "src": "2889:10:73"
          }
        ],
        "contractDependencies": [
          13643
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23740,
        "linearizedBaseContracts": [
          23740,
          13643
        ],
        "name": "MockBasketManager2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23620,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23740,
            "src": "2907:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23619,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "2907:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23639,
              "nodeType": "Block",
              "src": "2975:259:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23625,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "2985:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23627,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23622,
                          "src": "3025:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23628,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "3053:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "3053:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3133:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23633,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "3156:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3156:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23626,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "2998:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2998:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "2985:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23638,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:242:73"
                }
              ]
            },
            "documentation": null,
            "id": 23640,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23622,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23640,
                  "src": "2951:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:17:73"
            },
            "returnParameters": {
              "id": 23624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:73"
            },
            "scope": 23740,
            "src": "2939:295:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23667,
              "nodeType": "Block",
              "src": "3436:164:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23653,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23651,
                      "src": "3446:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23655,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23620,
                          "src": "3490:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3526:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23654,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "3454:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3454:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "3446:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23662,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23663,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23649,
                      "src": "3579:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3579:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23666,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:14:73"
                }
              ]
            },
            "documentation": null,
            "id": 23668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3288:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3306:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3267:54:73"
            },
            "returnParameters": {
              "id": 23652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23649,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3369:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23651,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3395:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23650,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "3395:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3355:76:73"
            },
            "scope": 23740,
            "src": "3240:360:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23738,
              "nodeType": "Block",
              "src": "3815:427:73",
              "statements": [
                {
                  "assignments": [
                    23684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23684,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3825:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23682,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3825:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23683,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3825:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3851:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23685,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3855:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23686,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3855:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:41:73"
                },
                {
                  "assignments": [
                    23694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23694,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3876:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3876:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23693,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3876:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3907:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23696,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:47:73"
                },
                {
                  "assignments": [
                    23704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23704,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3933:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23702,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3933:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23703,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3933:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3958:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23705,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23706,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3962:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23711,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "3982:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23713,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23714,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "3995:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "3982:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23716,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23717,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4015:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4027:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4015:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4040:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4015:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23725,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4052:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23727,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4065:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4052:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:4:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23733,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "4149:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23734,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4183:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23735,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23731,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "4083:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4083:152:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23680,
                  "id": 23737,
                  "nodeType": "Return",
                  "src": "4076:159:73"
                }
              ]
            },
            "documentation": null,
            "id": 23739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3644:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23670,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3684:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3684:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23673,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3684:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3722:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3634:112:73"
            },
            "returnParameters": {
              "id": 23680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23679,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3781:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23678,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "3781:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:30:73"
            },
            "scope": 23740,
            "src": "3606:636:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "2858:1386:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23741,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "4277:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "4277:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23783,
        "linearizedBaseContracts": [
          23783,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23751,
              "nodeType": "Block",
              "src": "4326:37:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23745,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4336:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "4336:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4352:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4336:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23750,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:20:73"
                }
              ]
            },
            "documentation": null,
            "id": 23752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:73"
            },
            "returnParameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:73"
            },
            "scope": 23783,
            "src": "4297:66:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23781,
              "nodeType": "Block",
              "src": "4440:169:73",
              "statements": [
                {
                  "assignments": [
                    23760,
                    23762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23760,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4451:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23759,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4451:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23762,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4464:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23761,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23764,
                        "name": "_bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23754,
                        "src": "4496:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23763,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "4479:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:25:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4450:54:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23768,
                        "name": "exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23760,
                        "src": "4522:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62417373657420646f6573206e6f74206578697374",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:23:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        },
                        "value": "bAsset does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        }
                      ],
                      "id": 23767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        36235,
                        36236
                      ],
                      "referencedDeclaration": 36236,
                      "src": "4514:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:40:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23772,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "4564:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "4564:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23774,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23762,
                          "src": "4579:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "4564:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23778,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23756,
                      "src": "4595:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "4564:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23780,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:73"
                }
              ]
            },
            "documentation": null,
            "id": 23782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4394:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23756,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4411:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23755,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "4411:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:73"
            },
            "returnParameters": {
              "id": 23758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:73"
            },
            "scope": 23783,
            "src": "4369:240:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23784,
        "src": "4246:366:73"
      }
    ],
    "src": "0:4614:73"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
    "exportedSymbols": {
      "MockBasketManager": [
        23476
      ],
      "MockBasketManager1": [
        23616
      ],
      "MockBasketManager2": [
        23740
      ],
      "MockBasketManager3": [
        23783
      ]
    },
    "id": 23784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23386,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:73"
      },
      {
        "id": 23387,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:73"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23389,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "59:60:73",
        "symbolAliases": [
          {
            "foreign": 23388,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol",
        "file": "../../mix/shared/MixStructs.sol",
        "id": 23391,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 13644,
        "src": "120:61:73",
        "symbolAliases": [
          {
            "foreign": 23390,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23393,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "182:60:73",
        "symbolAliases": [
          {
            "foreign": 23392,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol",
        "file": "../../shared/StableMath.sol",
        "id": 23395,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 22201,
        "src": "243:57:73",
        "symbolAliases": [
          {
            "foreign": 23394,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23396,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "392:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23397,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23476,
        "linearizedBaseContracts": [
          23476,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23416,
              "nodeType": "Block",
              "src": "484:89:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23404,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "494:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "494:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23407,
                      "name": "failed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23399,
                      "src": "510:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "494:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23409,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23410,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "526:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "526:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23413,
                      "name": "colRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23401,
                      "src": "558:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "526:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23415,
                  "nodeType": "ExpressionStatement",
                  "src": "526:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23399,
                  "name": "failed",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "432:11:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "name": "colRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "445:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:31:73"
            },
            "returnParameters": {
              "id": 23403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:73"
            },
            "scope": 23476,
            "src": "413:160:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23439,
              "nodeType": "Block",
              "src": "664:109:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23425
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23425,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23439,
                      "src": "677:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23424,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23427,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "709:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23426,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "692:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23430,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "726:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "726:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23434,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23432,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23425,
                          "src": "741:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "726:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "726:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23436,
                      "name": "newStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23421,
                      "src": "757:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "726:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23438,
                  "nodeType": "ExpressionStatement",
                  "src": "726:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "603:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "newStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "619:22:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "619:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:40:73"
            },
            "returnParameters": {
              "id": 23423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:73"
            },
            "scope": 23476,
            "src": "578:195:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23462,
              "nodeType": "Block",
              "src": "858:108:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23448
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23448,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23462,
                      "src": "871:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23450,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23442,
                        "src": "903:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23449,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "886:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23453,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "920:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23456,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "920:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23457,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23455,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23448,
                          "src": "935:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "920:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ratio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "920:27:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23459,
                      "name": "_newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23444,
                      "src": "950:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:39:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23461,
                  "nodeType": "ExpressionStatement",
                  "src": "920:39:73"
                }
              ]
            },
            "documentation": null,
            "id": 23463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23442,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "802:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23444,
                  "name": "_newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "818:17:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:35:73"
            },
            "returnParameters": {
              "id": 23446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:73"
            },
            "scope": 23476,
            "src": "778:188:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23474,
              "nodeType": "Block",
              "src": "1032:57:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23468,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1042:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "undergoingRecol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13569,
                      "src": "1042:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23471,
                      "name": "undergoingRecol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23465,
                      "src": "1067:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1042:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23473,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRecol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23465,
                  "name": "undergoingRecol",
                  "nodeType": "VariableDeclaration",
                  "scope": 23475,
                  "src": "989:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "988:22:73"
            },
            "returnParameters": {
              "id": 23467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:73"
            },
            "scope": 23476,
            "src": "971:118:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "362:729:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23477,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "1197:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23478,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23616,
        "linearizedBaseContracts": [
          23616,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23480,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1218:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23479,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "1218:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23482,
            "name": "testBasket",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1249:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basket_$13574_storage",
              "typeString": "struct MixStructs.Basket"
            },
            "typeName": {
              "contractScope": null,
              "id": 23481,
              "name": "Basket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13574,
              "src": "1249:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                "typeString": "struct MixStructs.Basket"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23507,
              "nodeType": "Block",
              "src": "1317:305:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23487,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "1327:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23489,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23484,
                          "src": "1367:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23490,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "1395:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "1395:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23495,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "1498:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1553:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23488,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "1340:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1340:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "1327:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23500,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:242:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23501,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1579:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "1579:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 23504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1579:36:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23506,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:36:73"
                }
              ]
            },
            "documentation": null,
            "id": 23508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23484,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23508,
                  "src": "1293:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:17:73"
            },
            "returnParameters": {
              "id": 23486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:73"
            },
            "scope": 23616,
            "src": "1281:341:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23515,
              "nodeType": "Block",
              "src": "1739:30:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23513,
                    "name": "basket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4148,
                    "src": "1756:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage",
                      "typeString": "struct MixStructs.Basket storage ref"
                    }
                  },
                  "functionReturnParameters": 23512,
                  "id": 23514,
                  "nodeType": "Return",
                  "src": "1749:13:73"
                }
              ]
            },
            "documentation": null,
            "id": 23516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:73"
            },
            "returnParameters": {
              "id": 23512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23511,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 23516,
                  "src": "1709:15:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Basket_$13574_memory_ptr",
                    "typeString": "struct MixStructs.Basket"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23510,
                    "name": "Basket",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13574,
                    "src": "1709:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                      "typeString": "struct MixStructs.Basket"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:39:73"
            },
            "scope": 23616,
            "src": "1628:141:73",
            "stateMutability": "view",
            "superFunction": 5469,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23543,
              "nodeType": "Block",
              "src": "1970:165:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23529,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23527,
                      "src": "1980:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23531,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23480,
                          "src": "2024:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23530,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "1988:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1988:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "1980:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23539,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23525,
                      "src": "2113:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 23540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:5:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2113:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:15:73"
                }
              ]
            },
            "documentation": null,
            "id": 23544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1803:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1822:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1840:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:53:73"
            },
            "returnParameters": {
              "id": 23528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1903:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1929:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23526,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "1929:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1889:76:73"
            },
            "scope": 23616,
            "src": "1775:360:73",
            "stateMutability": "nonpayable",
            "superFunction": 5517,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23614,
              "nodeType": "Block",
              "src": "2348:428:73",
              "statements": [
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2358:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23558,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2358:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23559,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2358:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2384:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23561,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2388:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2388:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:41:73"
                },
                {
                  "assignments": [
                    23570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23570,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2409:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23569,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2409:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2440:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23572,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2444:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:47:73"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2466:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23579,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2466:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23586,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2491:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23581,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2495:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23582,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2495:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23587,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2515:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23589,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23590,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "2528:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "2515:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23592,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2548:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23595,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2560:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2548:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2548:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23601,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2585:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2585:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2585:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23606,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 23608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:5:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23609,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2683:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2717:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23611,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2751:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23607,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "2616:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2616:153:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23556,
                  "id": 23613,
                  "nodeType": "Return",
                  "src": "2609:160:73"
                }
              ]
            },
            "documentation": null,
            "id": 23615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2179:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2179:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2217:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2217:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2217:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2255:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2169:110:73"
            },
            "returnParameters": {
              "id": 23556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23555,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2314:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23554,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "2314:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2313:30:73"
            },
            "scope": 23616,
            "src": "2141:635:73",
            "stateMutability": "nonpayable",
            "superFunction": 5674,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "1166:1613:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23617,
              "name": "MixStructs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13643,
              "src": "2889:10:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixStructs_$13643",
                "typeString": "contract MixStructs"
              }
            },
            "id": 23618,
            "nodeType": "InheritanceSpecifier",
            "src": "2889:10:73"
          }
        ],
        "contractDependencies": [
          13643
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23740,
        "linearizedBaseContracts": [
          23740,
          13643
        ],
        "name": "MockBasketManager2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23620,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23740,
            "src": "2907:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23619,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "2907:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23639,
              "nodeType": "Block",
              "src": "2975:259:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23625,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "2985:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23627,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23622,
                          "src": "3025:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23628,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "3053:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "3053:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3133:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23633,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "3156:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3156:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23626,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "2998:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2998:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "2985:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23638,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:242:73"
                }
              ]
            },
            "documentation": null,
            "id": 23640,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23622,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23640,
                  "src": "2951:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:17:73"
            },
            "returnParameters": {
              "id": 23624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:73"
            },
            "scope": 23740,
            "src": "2939:295:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23667,
              "nodeType": "Block",
              "src": "3436:164:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23653,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23651,
                      "src": "3446:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23655,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23620,
                          "src": "3490:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3526:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23654,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "3454:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3454:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "3446:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23662,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23663,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23649,
                      "src": "3579:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3579:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23666,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:14:73"
                }
              ]
            },
            "documentation": null,
            "id": 23668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3288:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3306:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3267:54:73"
            },
            "returnParameters": {
              "id": 23652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23649,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3369:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23651,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3395:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23650,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "3395:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3355:76:73"
            },
            "scope": 23740,
            "src": "3240:360:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23738,
              "nodeType": "Block",
              "src": "3815:427:73",
              "statements": [
                {
                  "assignments": [
                    23684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23684,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3825:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23682,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3825:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23683,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3825:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3851:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23685,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3855:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23686,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3855:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:41:73"
                },
                {
                  "assignments": [
                    23694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23694,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3876:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3876:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23693,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3876:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3907:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23696,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:47:73"
                },
                {
                  "assignments": [
                    23704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23704,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3933:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23702,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3933:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23703,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3933:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3958:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23705,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23706,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3962:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23711,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "3982:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23713,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23714,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "3995:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "3982:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23716,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23717,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4015:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4027:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4015:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4040:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4015:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23725,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4052:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23727,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4065:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4052:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:4:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23733,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "4149:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23734,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4183:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23735,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23731,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "4083:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4083:152:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23680,
                  "id": 23737,
                  "nodeType": "Return",
                  "src": "4076:159:73"
                }
              ]
            },
            "documentation": null,
            "id": 23739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3644:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23670,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3684:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3684:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23673,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3684:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3722:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3634:112:73"
            },
            "returnParameters": {
              "id": 23680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23679,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3781:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23678,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "3781:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:30:73"
            },
            "scope": 23740,
            "src": "3606:636:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "2858:1386:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23741,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "4277:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "4277:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23783,
        "linearizedBaseContracts": [
          23783,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23751,
              "nodeType": "Block",
              "src": "4326:37:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23745,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4336:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "4336:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4352:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4336:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23750,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:20:73"
                }
              ]
            },
            "documentation": null,
            "id": 23752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:73"
            },
            "returnParameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:73"
            },
            "scope": 23783,
            "src": "4297:66:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23781,
              "nodeType": "Block",
              "src": "4440:169:73",
              "statements": [
                {
                  "assignments": [
                    23760,
                    23762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23760,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4451:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23759,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4451:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23762,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4464:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23761,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23764,
                        "name": "_bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23754,
                        "src": "4496:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23763,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "4479:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:25:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4450:54:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23768,
                        "name": "exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23760,
                        "src": "4522:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62417373657420646f6573206e6f74206578697374",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:23:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        },
                        "value": "bAsset does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        }
                      ],
                      "id": 23767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        36235,
                        36236
                      ],
                      "referencedDeclaration": 36236,
                      "src": "4514:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:40:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23772,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "4564:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "4564:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23774,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23762,
                          "src": "4579:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "4564:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23778,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23756,
                      "src": "4595:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "4564:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23780,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:73"
                }
              ]
            },
            "documentation": null,
            "id": 23782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4394:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23756,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4411:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23755,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "4411:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:73"
            },
            "returnParameters": {
              "id": 23758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:73"
            },
            "scope": 23783,
            "src": "4369:240:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23784,
        "src": "4246:366:73"
      }
    ],
    "src": "0:4614:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-11T05:43:16.522Z",
  "devdoc": {
    "methods": {
      "addBasset(address,address,bool)": {
        "details": "External func to allow the Governor to conduct add operations on the Basket",
        "params": {
          "_bAsset": "Address of the ERC20 token to add to the Basket",
          "_integration": "Address of the vault integration to deposit and withdraw",
          "_isTransferFeeCharged": "Bool - are transfer fees charged on this bAsset"
        },
        "return": "index                Position of the bAsset in the Basket"
      },
      "collectInterest()": {
        "details": "Called by mIx to calculate how much interest has been generated in the basket     and withdraw it. Cycles through the connected platforms to check the balances.",
        "return": "interestCollected   Total amount of interest collected, in mIx termsgains               Array of bAsset units gained"
      },
      "decreaseVaultBalance(uint8,address,uint256)": {
        "details": "Called by mIx after redeeming tokens. Simply reduce the balance in the vault",
        "params": {
          "_bAssetIndex": "Index of the bAsset",
          "_decreaseAmount": "Units withdrawn"
        }
      },
      "decreaseVaultBalances(uint8[],address[],uint256[])": {
        "details": "Called by mIx after redeeming tokens. Simply reduce the balance in the vault",
        "params": {
          "_bAssetIndices": "Array of bAsset indexes",
          "_decreaseAmount": "Units withdrawn"
        }
      },
      "failBasset(address)": {
        "details": "Marks a bAsset as permanently deviated from peg",
        "params": {
          "_bAsset": "Address of the bAsset"
        }
      },
      "getBasket()": {
        "details": "Get basket details for `MixStructs.Basket`",
        "return": "b   Basket struct"
      },
      "getBasset(address)": {
        "details": "Get data for a specific bAsset, if it exists",
        "params": {
          "_bAsset": "Address of bAsset"
        },
        "return": "bAsset  Struct with full bAsset data"
      },
      "getBassetIntegrator(address)": {
        "details": "Get current integrator for a specific bAsset, if it exists",
        "params": {
          "_bAsset": "Address of bAsset"
        },
        "return": "integrator  Address of current integrator"
      },
      "getBassets()": {
        "details": "Get data for a all bAssets in basket",
        "return": "bAssets  Struct[] with full bAsset datalen      Number of bAssets in the Basket"
      },
      "handlePegLoss(address,bool)": {
        "details": "Executes the Auto Redistribution event by isolating the bAsset from the Basket",
        "params": {
          "_bAsset": "Address of the ERC20 token to isolate",
          "_belowPeg": "Bool to describe whether the bAsset deviated below peg (t)                        or above (f)"
        },
        "return": "alreadyActioned Bool to show whether a bAsset had already been actioned"
      },
      "increaseVaultBalance(uint8,address,uint256)": {
        "details": "Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault",
        "params": {
          "_bAssetIndex": "Index of the bAsset",
          "_increaseAmount": "Units deposited"
        }
      },
      "increaseVaultBalances(uint8[],address[],uint256[])": {
        "details": "Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault",
        "params": {
          "_bAssetIndices": "Array of bAsset indexes",
          "_increaseAmount": "Units deposited"
        }
      },
      "initialize(address,address,address[],address[],uint256[],bool[])": {
        "details": "Initialization function for upgradable proxy contract.     This function should be called via Proxy just after contract deployment.",
        "params": {
          "_bAssets": "Array of erc20 bAsset addresses",
          "_hasTransferFees": "Bool signifying if this bAsset has xfer fees",
          "_integrators": "Matching array of the platform intergations for bAssets",
          "_mIx": "Address of the mIx whose Basket to manage",
          "_nexus": "Address of system Nexus",
          "_weights": "Weightings of each bAsset, summing to 1e18"
        }
      },
      "migrateBassets(address[],address)": {
        "details": "Transfers all collateral from one lending market to another - used initially     to handle the migration between Aave V1 and Aave V2. Note - only supports non     tx fee enabled assets",
        "params": {
          "_bAssets": "Array of basket assets to migrate",
          "_newIntegration": "Address of the new platform integration"
        }
      },
      "negateIsolation(address)": {
        "details": "Negates the isolation of a given bAsset",
        "params": {
          "_bAsset": "Address of the bAsset"
        }
      },
      "pause()": {
        "details": "Called by the Governor to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise.",
        "return": "Returns `true` when paused, otherwise `false`"
      },
      "prepareForgeBasset(address,uint256,bool)": {
        "details": "Prepare given bAsset for Forging. Currently returns integrator     and essential minting info.",
        "params": {
          "_bAsset": "Address of the bAsset"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareForgeBassets(address[],uint256[],bool)": {
        "details": "Prepare given bAsset addresses for Forging. Currently returns integrator     and essential minting info for each bAsset",
        "params": {
          "_bAssets": "Array of bAsset addresses with which to forge"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareRedeemBassets(address[])": {
        "details": "Fetch the array of bAssets for redemption, and pass back all basket info.",
        "params": {
          "_bAssets": "Array of bAsset addresses to redeem"
        }
      },
      "prepareRedeemMulti()": {
        "details": "Prepare given bAsset addresses for RedeemMulti. Currently returns integrator     and essential minting info for each bAsset",
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareSwapBassets(address,address,bool)": {
        "details": "Prepare given bAssets for swapping",
        "params": {
          "_input": "Address of the input bAsset",
          "_isMint": "Is this swap actually a mint? i.e. output == address(mIx)",
          "_output": "Address of the output bAsset"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "removeBasset(address)": {
        "details": "Removes a specific Asset from the Basket, given that its target/collateral     level is already 0, throws if invalid.",
        "params": {
          "_assetToRemove": "The asset to remove from the basket"
        }
      },
      "setBasketWeights(address[],uint256[])": {
        "details": "External call for the governor to set weightings of all bAssets",
        "params": {
          "_bAssets": "Array of bAsset addresses",
          "_weights": "Array of bAsset weights - summing 100% where 100% == 1e18"
        }
      },
      "setTransferFeesFlag(address,bool)": {
        "details": "Update transfer fee flag for a given bAsset, should it change its fee practice",
        "params": {
          "_bAsset": "bAsset address",
          "_flag": "Charge transfer fee when its set to 'true', otherwise 'false'"
        }
      },
      "unpause()": {
        "details": "Called by Governor to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}