{
  "contractName": "MockBasketManager3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [],
      "name": "BasketStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "bAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "maxWeights",
          "type": "uint256[]"
        }
      ],
      "name": "BasketWeightsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "integrator",
          "type": "address"
        }
      ],
      "name": "BassetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        }
      ],
      "name": "BassetRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum MixStructs.BassetStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "BassetStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "bAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newIntegrator",
          "type": "address"
        }
      ],
      "name": "BassetsMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "TransferFeeEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_integration",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isTransferFeeCharged",
          "type": "bool"
        }
      ],
      "name": "addBasset",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "basket",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "maxBassets",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "undergoingRecol",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "failed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralisationRatio",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "collectInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "interestCollected",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "gains",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_bAssetIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_decreaseAmount",
          "type": "uint256"
        }
      ],
      "name": "decreaseVaultBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_bAssetIndices",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_decreaseAmount",
          "type": "uint256[]"
        }
      ],
      "name": "decreaseVaultBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "failBasset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBasket",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bassets",
              "type": "tuple[]"
            },
            {
              "internalType": "uint8",
              "name": "maxBassets",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "undergoingRecol",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "failed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "collateralisationRatio",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basket",
          "name": "b",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "getBasset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MixStructs.BassetStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isTransferFeeCharged",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ratio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basset",
          "name": "bAsset",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "getBassetIntegrator",
      "outputs": [
        {
          "internalType": "address",
          "name": "integrator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum MixStructs.BassetStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isTransferFeeCharged",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "ratio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxWeight",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct MixStructs.Basset[]",
          "name": "bAssets",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_belowPeg",
          "type": "bool"
        }
      ],
      "name": "handlePegLoss",
      "outputs": [
        {
          "internalType": "bool",
          "name": "alreadyActioned",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_bAssetIndex",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_increaseAmount",
          "type": "uint256"
        }
      ],
      "name": "increaseVaultBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_bAssetIndices",
          "type": "uint8[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_increaseAmount",
          "type": "uint256[]"
        }
      ],
      "name": "increaseVaultBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_nexus",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mIx",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_integrators",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_weights",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "_hasTransferFees",
          "type": "bool[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "integrations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mIx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_newIntegration",
          "type": "address"
        }
      ],
      "name": "migrateBassets",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        }
      ],
      "name": "negateIsolation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nexus",
      "outputs": [
        {
          "internalType": "contract INexus",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "prepareForgeBasset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValid",
          "type": "bool"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "bInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "prepareForgeBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.ForgePropsMulti",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        }
      ],
      "name": "prepareRedeemBassets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isValid",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "allBassets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.RedeemProps",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "prepareRedeemMulti",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "colRatio",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset[]",
              "name": "bAssets",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "integrators",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "indexes",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct MixStructs.RedeemPropsMulti",
          "name": "props",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_input",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_output",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMint",
          "type": "bool"
        }
      ],
      "name": "prepareSwapBassets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum MixStructs.BassetStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "isTransferFeeCharged",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "ratio",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultBalance",
                  "type": "uint256"
                }
              ],
              "internalType": "struct MixStructs.Basset",
              "name": "bAsset",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "integrator",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "internalType": "struct MixStructs.BassetDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetToRemove",
          "type": "address"
        }
      ],
      "name": "removeBasset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_weights",
          "type": "uint256[]"
        }
      ],
      "name": "setBasketWeights",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_flag",
          "type": "bool"
        }
      ],
      "name": "setTransferFeesFlag",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "failBasket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_bAsset",
          "type": "address"
        },
        {
          "internalType": "enum MixStructs.BassetStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "setBassetStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"BasketStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"maxWeights\",\"type\":\"uint256[]\"}],\"name\":\"BasketWeightsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"}],\"name\":\"BassetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"}],\"name\":\"BassetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"BassetStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"bAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newIntegrator\",\"type\":\"address\"}],\"name\":\"BassetsMigrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"TransferFeeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_integration\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isTransferFeeCharged\",\"type\":\"bool\"}],\"name\":\"addBasset\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basket\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"maxBassets\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralisationRatio\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interestCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"gains\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_bAssetIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decreaseAmount\",\"type\":\"uint256\"}],\"name\":\"decreaseVaultBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_bAssetIndices\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_decreaseAmount\",\"type\":\"uint256[]\"}],\"name\":\"decreaseVaultBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"failBasket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"failBasset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBasket\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bassets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"maxBassets\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"undergoingRecol\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"failed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralisationRatio\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basket\",\"name\":\"b\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"getBasset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"getBassetIntegrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_belowPeg\",\"type\":\"bool\"}],\"name\":\"handlePegLoss\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"alreadyActioned\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_bAssetIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_increaseAmount\",\"type\":\"uint256\"}],\"name\":\"increaseVaultBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_bAssetIndices\",\"type\":\"uint8[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_increaseAmount\",\"type\":\"uint256[]\"}],\"name\":\"increaseVaultBalances\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nexus\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mIx\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_hasTransferFees\",\"type\":\"bool[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"integrations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mIx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_newIntegration\",\"type\":\"address\"}],\"name\":\"migrateBassets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"}],\"name\":\"negateIsolation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"prepareForgeBasset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"bInfo\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"prepareForgeBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.ForgePropsMulti\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"}],\"name\":\"prepareRedeemBassets\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"allBassets\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.RedeemProps\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"prepareRedeemMulti\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"colRatio\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset[]\",\"name\":\"bAssets\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"integrators\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"indexes\",\"type\":\"uint8[]\"}],\"internalType\":\"struct MixStructs.RedeemPropsMulti\",\"name\":\"props\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_input\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_output\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMint\",\"type\":\"bool\"}],\"name\":\"prepareSwapBassets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isTransferFeeCharged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct MixStructs.Basset\",\"name\":\"bAsset\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"integrator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"internalType\":\"struct MixStructs.BassetDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetToRemove\",\"type\":\"address\"}],\"name\":\"removeBasset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"}],\"name\":\"setBasketWeights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"enum MixStructs.BassetStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setBassetStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bAsset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_flag\",\"type\":\"bool\"}],\"name\":\"setTransferFeesFlag\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addBasset(address,address,bool)\":{\"details\":\"External func to allow the Governor to conduct add operations on the Basket\",\"params\":{\"_bAsset\":\"Address of the ERC20 token to add to the Basket\",\"_integration\":\"Address of the vault integration to deposit and withdraw\",\"_isTransferFeeCharged\":\"Bool - are transfer fees charged on this bAsset\"},\"return\":\"index                Position of the bAsset in the Basket\"},\"collectInterest()\":{\"details\":\"Called by mIx to calculate how much interest has been generated in the basket     and withdraw it. Cycles through the connected platforms to check the balances.\",\"return\":\"interestCollected   Total amount of interest collected, in mIx termsgains               Array of bAsset units gained\"},\"decreaseVaultBalance(uint8,address,uint256)\":{\"details\":\"Called by mIx after redeeming tokens. Simply reduce the balance in the vault\",\"params\":{\"_bAssetIndex\":\"Index of the bAsset\",\"_decreaseAmount\":\"Units withdrawn\"}},\"decreaseVaultBalances(uint8[],address[],uint256[])\":{\"details\":\"Called by mIx after redeeming tokens. Simply reduce the balance in the vault\",\"params\":{\"_bAssetIndices\":\"Array of bAsset indexes\",\"_decreaseAmount\":\"Units withdrawn\"}},\"failBasset(address)\":{\"details\":\"Marks a bAsset as permanently deviated from peg\",\"params\":{\"_bAsset\":\"Address of the bAsset\"}},\"getBasket()\":{\"details\":\"Get basket details for `MixStructs.Basket`\",\"return\":\"b   Basket struct\"},\"getBasset(address)\":{\"details\":\"Get data for a specific bAsset, if it exists\",\"params\":{\"_bAsset\":\"Address of bAsset\"},\"return\":\"bAsset  Struct with full bAsset data\"},\"getBassetIntegrator(address)\":{\"details\":\"Get current integrator for a specific bAsset, if it exists\",\"params\":{\"_bAsset\":\"Address of bAsset\"},\"return\":\"integrator  Address of current integrator\"},\"getBassets()\":{\"details\":\"Get data for a all bAssets in basket\",\"return\":\"bAssets  Struct[] with full bAsset datalen      Number of bAssets in the Basket\"},\"handlePegLoss(address,bool)\":{\"details\":\"Executes the Auto Redistribution event by isolating the bAsset from the Basket\",\"params\":{\"_bAsset\":\"Address of the ERC20 token to isolate\",\"_belowPeg\":\"Bool to describe whether the bAsset deviated below peg (t)                        or above (f)\"},\"return\":\"alreadyActioned Bool to show whether a bAsset had already been actioned\"},\"increaseVaultBalance(uint8,address,uint256)\":{\"details\":\"Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault\",\"params\":{\"_bAssetIndex\":\"Index of the bAsset\",\"_increaseAmount\":\"Units deposited\"}},\"increaseVaultBalances(uint8[],address[],uint256[])\":{\"details\":\"Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault\",\"params\":{\"_bAssetIndices\":\"Array of bAsset indexes\",\"_increaseAmount\":\"Units deposited\"}},\"initialize(address,address,address[],address[],uint256[],bool[])\":{\"details\":\"Initialization function for upgradable proxy contract.     This function should be called via Proxy just after contract deployment.\",\"params\":{\"_bAssets\":\"Array of erc20 bAsset addresses\",\"_hasTransferFees\":\"Bool signifying if this bAsset has xfer fees\",\"_integrators\":\"Matching array of the platform intergations for bAssets\",\"_mIx\":\"Address of the mIx whose Basket to manage\",\"_nexus\":\"Address of system Nexus\",\"_weights\":\"Weightings of each bAsset, summing to 1e18\"}},\"migrateBassets(address[],address)\":{\"details\":\"Transfers all collateral from one lending market to another - used initially     to handle the migration between Aave V1 and Aave V2. Note - only supports non     tx fee enabled assets\",\"params\":{\"_bAssets\":\"Array of basket assets to migrate\",\"_newIntegration\":\"Address of the new platform integration\"}},\"negateIsolation(address)\":{\"details\":\"Negates the isolation of a given bAsset\",\"params\":{\"_bAsset\":\"Address of the bAsset\"}},\"pause()\":{\"details\":\"Called by the Governor to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\",\"return\":\"Returns `true` when paused, otherwise `false`\"},\"prepareForgeBasset(address,uint256,bool)\":{\"details\":\"Prepare given bAsset for Forging. Currently returns integrator     and essential minting info.\",\"params\":{\"_bAsset\":\"Address of the bAsset\"},\"return\":\"props     Struct of all relevant Forge information\"},\"prepareForgeBassets(address[],uint256[],bool)\":{\"details\":\"Prepare given bAsset addresses for Forging. Currently returns integrator     and essential minting info for each bAsset\",\"params\":{\"_bAssets\":\"Array of bAsset addresses with which to forge\"},\"return\":\"props     Struct of all relevant Forge information\"},\"prepareRedeemBassets(address[])\":{\"details\":\"Fetch the array of bAssets for redemption, and pass back all basket info.\",\"params\":{\"_bAssets\":\"Array of bAsset addresses to redeem\"}},\"prepareRedeemMulti()\":{\"details\":\"Prepare given bAsset addresses for RedeemMulti. Currently returns integrator     and essential minting info for each bAsset\",\"return\":\"props     Struct of all relevant Forge information\"},\"prepareSwapBassets(address,address,bool)\":{\"details\":\"Prepare given bAssets for swapping\",\"params\":{\"_input\":\"Address of the input bAsset\",\"_isMint\":\"Is this swap actually a mint? i.e. output == address(mIx)\",\"_output\":\"Address of the output bAsset\"},\"return\":\"props     Struct of all relevant Forge information\"},\"removeBasset(address)\":{\"details\":\"Removes a specific Asset from the Basket, given that its target/collateral     level is already 0, throws if invalid.\",\"params\":{\"_assetToRemove\":\"The asset to remove from the basket\"}},\"setBasketWeights(address[],uint256[])\":{\"details\":\"External call for the governor to set weightings of all bAssets\",\"params\":{\"_bAssets\":\"Array of bAsset addresses\",\"_weights\":\"Array of bAsset weights - summing 100% where 100% == 1e18\"}},\"setTransferFeesFlag(address,bool)\":{\"details\":\"Update transfer fee flag for a given bAsset, should it change its fee practice\",\"params\":{\"_bAsset\":\"bAsset address\",\"_flag\":\"Charge transfer fee when its set to 'true', otherwise 'false'\"}},\"unpause()\":{\"details\":\"Called by Governor to unpause, returns to normal state.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol\":\"MockBasketManager3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/IBasketManager.sol\":{\"keccak256\":\"0x6a1ac0981fd20fbdf0f9825411b841e907264853e9c6e7c778d6adb02f6e8a4a\",\"urls\":[\"bzz-raw://2b2bf64fa6cb679b5f6718ddfc3b40be827894eaad5ce2600c79e1de76c535ab\",\"dweb:/ipfs/Qmc6ggbSkDVyZfA5T8pAHy1mFcHaLZ8bE2sRTpiKb1QQem\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/interfaces/IPlatformIntegration.sol\":{\"keccak256\":\"0x3a6353d05674c582b0f7e9de6aa57d3ee2354e3d6c27e9d74adeb3a3271a07ba\",\"urls\":[\"bzz-raw://03c81a8a973d9bdde92646aa4943a1e69e6206b16bfd10f21b8af844c5161ce9\",\"dweb:/ipfs/QmYcLX95PPBcFTmSBHcPAzvQHpzQyM2aHQWyvVGdBgxdbP\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol\":{\"keccak256\":\"0x3853b66a78639050b59b353bc2bc53fa0ca9eb41ebc79e644bd201419c27d8a1\",\"urls\":[\"bzz-raw://72d391b1d72575b87a8f8d3cce7f7abc06867acd463d2c22796e71ce2914b5c1\",\"dweb:/ipfs/QmWdQ2hw1HcJFbT8gNrTWSpgfmm9ds79JpDWpQpGSCo5Ez\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol\":{\"keccak256\":\"0xc8d3ed27e2aa2a4e880b1650b9e1327a44a228349ed1c80c29b7ae3eae4c1306\",\"urls\":[\"bzz-raw://f3688f28d8ff87e3c156a432b56535422ad75fe179a249fcbce04df6a1c04fa4\",\"dweb:/ipfs/QmfNZU6L52QkuYf66smbWHpXZMhfXjEyLgYffuhaJKa5jq\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/CommonHelpers.sol\":{\"keccak256\":\"0x33e809b4367d394ea2122f363d3c4f82a036fd459e21e0c54f80003055ab9670\",\"urls\":[\"bzz-raw://14a31f4bb72d23a18e3a49ac330114199c0c69ced7d452fbf088c42ef233f636\",\"dweb:/ipfs/QmSD6rjG91CJn4eriTQR9FjLAnn8nD84BFdjgYrrBgM9QX\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/IBasicToken.sol\":{\"keccak256\":\"0x7d505a6f3c24d5da06858f6da65ca04e15e2798c9ca9bb24624311fc10c35825\",\"urls\":[\"bzz-raw://937dd232b4bd4e49718279c406ba9c98627a38980dbb26d2f932f66815dd67b9\",\"dweb:/ipfs/Qmbg2N2PX46VCqBe224vmuNHv3YvaJBrH1gguspnz4acLd\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableModule.sol\":{\"keccak256\":\"0xa9b455fd1f9dcce943e46563ce872cb6910f414f061a624b538cb965dccb74d1\",\"urls\":[\"bzz-raw://ea08022306fd741ec6007d5cea2c4493f23240c0317045fa40b4eb442fa15152\",\"dweb:/ipfs/QmfXoLRmbto8dhkGy8bjZJ73PZhKxjVs8ooHVsXVV5wdtG\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x6e30ee844194c37d586269196cc4c6d32718baec2cad7f64c9e1470759060f19\",\"urls\":[\"bzz-raw://d2313e50e8002b63eb8279834946fdbfa93684b98cebd21e0ea6d7cb71e92a76\",\"dweb:/ipfs/QmbGtNGqvRn6T9jMvuHRHcTkdTe8gxyJzgGc6SibVZqAsM\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializablePausableModule.sol\":{\"keccak256\":\"0x5187c682082a7e393d61be9a618a177adf89e99aefc0c490ac6b1d22bcd46f88\",\"urls\":[\"bzz-raw://6ee686b80b345615e77caf027f3b99927ef647f23a334339aaf59c5b21d8d157\",\"dweb:/ipfs/Qmf6AUkTDpPAra9pnEpmTsu3yVpHM5mMWhn3PZ2mjwoCgT\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/InitializableReentrancyGuard.sol\":{\"keccak256\":\"0xc98017e147aea529e44443fdd07f755b68119a92ee844446816dbd04f9aacd81\",\"urls\":[\"bzz-raw://abe71a4925c88f58c7ae230dfe560249617c37ff428a5fb5a28b62776ea845cc\",\"dweb:/ipfs/QmdsrozhcTXaD18oTru9qkrb5vsHZaiHyuL4nmBDp738gd\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol\":{\"keccak256\":\"0x08d17d7581628d72ac3233f042e1b6d4e6cbc050a991672f9b69a85380a6158f\",\"urls\":[\"bzz-raw://a0305949a756551cd30719caf13465bdfa17dbcfdba67955c16152e3a5e89a93\",\"dweb:/ipfs/QmZmX1FuaArqk3MCfUBFoDTJTVZfFnhteAnMPpA3AMbTom\"]},\"/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol\":{\"keccak256\":\"0x6aa82828de8660662af9fde0901d763f61b28eaff8f32199223110d7690717da\",\"urls\":[\"bzz-raw://fdce5d0a5f29d5ecf19c69cc14296e5c9a50e8a9b91981fb1d8e269668ad990b\",\"dweb:/ipfs/QmR7JmNGGhbRh5c37vSmTPV2iPBmTBJQe9ET9TvidwQ8GT\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052603b805460ff60a01b1916905534801561001d57600080fd5b50615b89806200002e6000396000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063905e89141161010f578063c4a80a2a116100a2578063e3f7152911610071578063e3f715291461045f578063edc832b314610472578063f8085f101461048a578063fc94058e14610492576101ef565b8063c4a80a2a14610411578063cd6ef2b014610424578063d5e1d27914610439578063dc686c8c1461044c576101ef565b8063a59824c5116100de578063a59824c5146103aa578063bdfbe29c146103bd578063bf9ca02d146103d0578063c0e46a2f146103f1576101ef565b8063905e89141461034f578063969642b9146103625780639d01cd3514610375578063a3f5c1d214610395576101ef565b806343ae78be116101875780636fb3e89c116101565780636fb3e89c14610301578063790bde32146103145780638456cb591461033457806388a90f511461033c576101ef565b806343ae78be146102bc5780635c975abb146102d15780635d16cf42146102e65780636f061dfb146102f9576101ef565b80632a2fab22116101c35780632a2fab221461025b5780632bf596cf146102715780633e37bcbc146102945780633f4ba83a146102b4576101ef565b80629e328b146101f457806309f2a9831461021d5780630b2d8501146102325780631d3ce39814610245575b600080fd5b6102076102023660046141a8565b6104a5565b6040516102149190615a19565b60405180910390f35b61023061022b366004614076565b610554565b005b61023061024036600461431c565b6105fa565b61024d6106ce565b604051610214929190615664565b6102636106e2565b6040516102149291906159f9565b61028461027f3660046141a8565b610a54565b6040516102149493929190615692565b6102a76102a2366004614076565b610ddc565b60405161021491906159b8565b610230610e1a565b6102c4610ec2565b60405161021491906159d7565b6102d9611048565b6040516102149190615684565b6102306102f4366004614560565b611058565b61023061112c565b61023061030f3660046142d2565b61113f565b6103276103223660046144e8565b61173f565b6040516102149190615562565b610230611766565b61023061034a36600461440e565b61180b565b6102d961035d3660046141f5565b611929565b610230610370366004614076565b611ad7565b61038861038336600461438a565b611c48565b60405161021491906159c6565b61039d611d0e565b60405161021491906156fa565b6102306103b8366004614076565b611d1d565b6102306103cb3660046141f5565b611e0c565b6103e36103de36600461425f565b612052565b6040516102149291906156d0565b6104046103ff366004614291565b6121d2565b60405161021491906159e8565b61032761041f366004614076565b6123a0565b61042c6123fc565b60405161021491906159a7565b61023061044736600461440e565b61251b565b61023061045a366004614560565b612665565b61023061046d36600461422f565b612705565b61047a61277b565b6040516102149493929190615a27565b61032761279d565b6102306104a03660046140b2565b6127ac565b60006104af6129bb565b6001600160a01b0316336001600160a01b0316146104e85760405162461bcd60e51b81526004016104df90615827565b60405180910390fd5b603e5462010000900460ff16156105115760405162461bcd60e51b81526004016104df906158e7565b603e54610100900460ff16156105395760405162461bcd60e51b81526004016104df906157a7565b61054c8484610546612a3d565b85612a45565b949350505050565b603e5462010000900460ff161561057d5760405162461bcd60e51b81526004016104df906158e7565b603e54610100900460ff16156105a55760405162461bcd60e51b81526004016104df906157a7565b336105ae612d67565b6001600160a01b031614806105d25750336105c76129bb565b6001600160a01b0316145b6105ee5760405162461bcd60e51b81526004016104df90615817565b6105f781612db2565b50565b6106026129bb565b6001600160a01b0316336001600160a01b0316146106325760405162461bcd60e51b81526004016104df90615827565b603e5462010000900460ff161561065b5760405162461bcd60e51b81526004016104df906158e7565b6106c8848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805160208088028281018201909352878252909350879250869182918501908490808284376000920182905250925061327c915050565b50505050565b606060006106da61343a565b915091509091565b603c546000906060906001600160a01b031633146107125760405162461bcd60e51b81526004016104df90615747565b603b54600160a01b900460ff161561073c5760405162461bcd60e51b81526004016104df90615847565b603e5462010000900460ff16156107655760405162461bcd60e51b81526004016104df906158e7565b603b54600160a81b900460ff1661078e5760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b19169055606060006107a761343a565b91509150806040519080825280602002602001820160405280156107d5578160200160208202803883390190505b50600094509250835b818160ff161015610a3a576107f1613eba565b838260ff168151811061080057fe5b60200260200101519050600081600001519050600060418460ff168154811061082557fe5b6000918252602082200154604051632fa8a91360e11b81526001600160a01b0390911692508290635f51522690610860908690600401615562565b602060405180830381600087803b15801561087a57600080fd5b505af115801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108b29190810190614506565b6040850151909150600090610940576040516370a0823160e01b81526001600160a01b038516906370a08231906108ed908690600401615562565b60206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061093d9190810190614506565b90505b6000610952838363ffffffff61351b16565b60a08701519091508082118015610978575060018760200151600781111561097657fe5b145b15610a095781603d6000018960ff168154811061099157fe5b600091825260208220600360049092020101919091556109b7838363ffffffff61354716565b9050808c8a60ff16815181106109c957fe5b60200260200101818152505060006109ee89606001518361358990919063ffffffff16565b9050610a008e8263ffffffff61351b16565b9d505050610a27565b60008b8960ff1681518110610a1a57fe5b6020026020010181815250505b5050600190950194506107de9350505050565b5050603b805460ff60a81b1916600160a81b179055509091565b60006060610a60613ef3565b610a68613ef3565b603b54600160a01b900460ff1615610a925760405162461bcd60e51b81526004016104df90615847565b610a9a613ef3565b610aa2613ef3565b603e5462010000900460ff1680610ac05750603e54610100900460ff165b15610b095760408051808201909152601b81527f4261736b657420697320756e646572676f696e67206368616e6765000000000060208201526000965094509092509050610dd3565b600080610b158b61359a565b9150915081610b6457505060408051808201909152601a81527f496e70757420617373657420646f6573206e6f7420657869737400000000000060208201526000965094509092509050610dd3565b6040518060600160405280603d6000018360ff1681548110610b8257fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610bca57fe5b6007811115610bd557fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610c2757fe5b600091825260209182902001546001600160a01b0316825260ff841691015293508815610c6f5750506040805160208101909152600081526001965094509092509050610dd3565b600080610c7b8c61359a565b9150915081610cce57505060408051808201909152601b81527f4f757470757420617373657420646f6573206e6f7420657869737400000000006020820152600098509650929450909250610dd3915050565b6040518060600160405280603d6000018360ff1681548110610cec57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610d3457fe5b6007811115610d3f57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610d9157fe5b60009182526020808320909101546001600160a01b0316835260ff90941691840191909152604080519384019052825260019a50909850949650939450505050505b93509350935093565b610de4613eba565b600080610df08461359a565b9150915081610e115760405162461bcd60e51b81526004016104df90615897565b61054c81613618565b610e226129bb565b6001600160a01b0316336001600160a01b031614610e525760405162461bcd60e51b81526004016104df90615827565b603b54600160a01b900460ff16610e7b5760405162461bcd60e51b81526004016104df90615737565b603b805460ff60a01b191690556040517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90610eb8903390615570565b60405180910390a1565b610eca613f1a565b603b54600160a01b900460ff1615610ef45760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff1615610f1c5760405162461bcd60e51b81526004016104df906157a7565b60606000610f2861343a565b91509150606081604051908082528060200260200182016040528015610f58578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610f87578160200160208202803883390190505b50905060005b838160ff16101561101f5760418160ff1681548110610fa857fe5b9060005260206000200160009054906101000a90046001600160a01b0316838260ff1681518110610fd557fe5b60200260200101906001600160a01b031690816001600160a01b03168152505080828260ff168151811061100557fe5b60ff90921660209283029190910190910152600101610f8d565b5060408051608081018252603f5481526020810195909552840191909152606083015250919050565b603b54600160a01b900460ff1690565b603c546001600160a01b031633146110825760405162461bcd60e51b81526004016104df90615747565b603b54600160a81b900460ff166110ab5760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b19169055603d80546110ef91839160ff87169081106110cf57fe5b90600052602060002090600402016003015461354790919063ffffffff16565b603d805460ff861690811061110057fe5b60009182526020909120600360049092020101555050603b805460ff60a81b1916600160a81b17905550565b603e805462ff0000191662010000179055565b6111476129bb565b6001600160a01b0316336001600160a01b0316146111775760405162461bcd60e51b81526004016104df90615827565b81806111955760405162461bcd60e51b81526004016104df90615757565b60005b818110156116fd5760008585838181106111ae57fe5b90506020020160206111c39190810190614076565b90506000806111d18361359a565b91509150816111f25760405162461bcd60e51b81526004016104df90615947565b603d805460ff831690811061120357fe5b6000918252602090912060049091020154600160a81b900460ff161561123b5760405162461bcd60e51b81526004016104df90615837565b600060418260ff168154811061124d57fe5b6000918252602090912001546001600160a01b03908116915087168114156112875760405162461bcd60e51b81526004016104df90615937565b6040516370a0823160e01b81526000906001600160a01b038616906370a08231906112b6908590600401615562565b60206040518083038186803b1580156112ce57600080fd5b505afa1580156112e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113069190810190614506565b90506000826001600160a01b0316635f515226876040518263ffffffff1660e01b81526004016113369190615562565b602060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113889190810190614506565b905080156113f65760405163934785b760e01b81526001600160a01b0384169063934785b7906113c39030908a9086906000906004016155a6565b600060405180830381600087803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b505050505b811561145f5760405163a4e2859560e01b81526001600160a01b0384169063a4e285959061142c9030908a90879060040161557e565b600060405180830381600087803b15801561144657600080fd5b505af115801561145a573d6000803e3d6000fd5b505050505b6000611471828463ffffffff61351b16565b90508960418660ff168154811061148457fe5b600091825260209091200180546001600160a01b0319166001600160a01b039283161790556114b69088168b836136bf565b6040516307dba22560e31b81528a906001600160a01b03821690633edd1128906114e9908b9087906000906004016155f6565b602060405180830381600087803b15801561150357600080fd5b505af1158015611517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061153b9190810190614506565b50604051632fa8a91360e11b81526000906001600160a01b03831690635f5152269061156b908c90600401615562565b602060405180830381600087803b15801561158557600080fd5b505af1158015611599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115bd9190810190614506565b90506000896001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016115ed9190615562565b60206040518083038186803b15801561160557600080fd5b505afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061163d9190810190614506565b9050670de111a6b7de4000670de05bc096e9c000611661878263ffffffff61371d16565b841015801561167f575061167b878363ffffffff61371d16565b8411155b61169b5760405162461bcd60e51b81526004016104df90615807565b6116ab888263ffffffff61371d16565b83101580156116c957506116c5888363ffffffff61371d16565b8311155b6116e55760405162461bcd60e51b81526004016104df90615807565b50506001909a01995061119898505050505050505050565b507f407ca8e939a25b34f290fb7f4d3b0d85d03f13313dc34a6a15bbd91492cfa2498484846040516117319392919061561e565b60405180910390a150505050565b6041818154811061174c57fe5b6000918252602090912001546001600160a01b0316905081565b61176e6129bb565b6001600160a01b0316336001600160a01b03161461179e5760405162461bcd60e51b81526004016104df90615827565b603b54600160a01b900460ff16156117c85760405162461bcd60e51b81526004016104df90615847565b603b805460ff60a01b1916600160a01b1790556040517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890610eb8903390615570565b603c546001600160a01b031633146118355760405162461bcd60e51b81526004016104df90615747565b603b54600160a81b900460ff1661185e5760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b191690558460005b8181101561190c576118c084848381811061188657fe5b90506020020135603d6000018a8a8581811061189e57fe5b90506020020160206118b39190810190614524565b60ff16815481106110cf57fe5b603d8989848181106118ce57fe5b90506020020160206118e39190810190614524565b60ff16815481106118f057fe5b600091825260209091206003600490920201015560010161186f565b5050603b805460ff60a81b1916600160a81b179055505050505050565b600033611934612d67565b6001600160a01b0316148061195857503361194d6129bb565b6001600160a01b0316145b6119745760405162461bcd60e51b81526004016104df90615817565b603e5462010000900460ff161561199d5760405162461bcd60e51b81526004016104df906158e7565b6000806119a98561359a565b60ff1691509150816119cd5760405162461bcd60e51b81526004016104df906157f7565b6000603d60000182815481106119df57fe5b6000918252602082206004909102015460ff600160a01b90910416915085611a08576003611a0b565b60025b9050806007811115611a1957fe5b826007811115611a2557fe5b1480611a355750611a3582613732565b15611a47576001945050505050611ad1565b80603d6000018481548110611a5857fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611a8257fe5b0217905550866001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e82604051611ac09190615708565b60405180910390a260009450505050505b92915050565b33611ae0612d67565b6001600160a01b03161480611b04575033611af96129bb565b6001600160a01b0316145b611b205760405162461bcd60e51b81526004016104df90615817565b600080611b2c8361359a565b60ff169150915081611b505760405162461bcd60e51b81526004016104df90615897565b6000603d6000018281548110611b6257fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611b8d57fe5b1480611ba457506003816007811115611ba257fe5b145b80611bba57506004816007811115611bb857fe5b145b156106c8576001603d6000018381548110611bd157fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611bfb57fe5b0217905550836001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e6001604051611c3a9190615708565b60405180910390a250505050565b611c50613f42565b603b54600160a01b900460ff1615611c7a5760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff1615611ca25760405162461bcd60e51b81526004016104df906157a7565b6060806060611ce389898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061378592505050565b6040805160808101825260018152602081019490945283015260608201529998505050505050505050565b603b546001600160a01b031681565b611d256129bb565b6001600160a01b0316336001600160a01b031614611d555760405162461bcd60e51b81526004016104df90615827565b600080611d618361359a565b60ff169150915081611d855760405162461bcd60e51b81526004016104df90615897565b6000603d6000018281548110611d9757fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611dc257fe5b1480611dd957506003816007811115611dd757fe5b145b611df55760405162461bcd60e51b81526004016104df906157e7565b5050603e805462ff00001916620100001790555050565b33611e15612d67565b6001600160a01b03161480611e39575033611e2e6129bb565b6001600160a01b0316145b611e555760405162461bcd60e51b81526004016104df90615817565b600080611e618461359a565b9150915081611e825760405162461bcd60e51b81526004016104df90615947565b82603d6000018260ff1681548110611e9657fe5b600091825260209091206004909102018054911515600160a81b0260ff60a81b199092169190911790558215612019576000846001600160a01b03166370a0823160418460ff1681548110611ee757fe5b6000918252602090912001546040516001600160e01b031960e084901b168152611f1d916001600160a01b031690600401615562565b60206040518083038186803b158015611f3557600080fd5b505afa158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f6d9190810190614506565b905080156120175760418260ff1681548110611f8557fe5b6000918252602090912001546040516307dba22560e31b81526001600160a01b0390911690633edd112890611fc390889085906001906004016155f6565b602060405180830381600087803b158015611fdd57600080fd5b505af1158015611ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120159190810190614506565b505b505b836001600160a01b03167ff1d30c51cc85d5f31324e582df608abdbb328479127c2d9c7e70666cbc611c7c84604051611c3a9190615684565b600061205c613ef3565b603b54600160a01b900460ff16156120865760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff16156120ae5760405162461bcd60e51b81526004016104df906157a7565b6000806120ba8761359a565b91509150816120db5760405162461bcd60e51b81526004016104df90615947565b600193506040518060600160405280603d6000018360ff16815481106120fd57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561214557fe5b600781111561215057fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff16815481106121a257fe5b600091825260209182902001546001600160a01b0316825260ff9093169201919091529296929550919350505050565b6121da613f6c565b603b54600160a01b900460ff16156122045760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff161561222c5760405162461bcd60e51b81526004016104df906157a7565b603e5462010000900460ff16156122555760405162461bcd60e51b81526004016104df906158e7565b606080606061229686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061378592505050565b9250925092506040518060a00160405280600115158152602001603d600001805480602002602001604051908101604052809291908181526020016000905b8282101561237c5760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600781111561232557fe5b600781111561233057fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200190600101906122d5565b50505050815260200184815260200182815260200183815250935050505092915050565b60008060006123ae8461359a565b91509150816123cf5760405162461bcd60e51b81526004016104df90615897565b60418160ff16815481106123df57fe5b6000918252602090912001546001600160a01b0316949350505050565b612404613f9d565b60408051603d805460c0602082028401810190945260a083018181529293919284929091849160009085015b828210156124d75760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600781111561248057fe5b600781111561248b57fe5b81526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152505081526020019060010190612430565b50505090825250600182015460ff80821660208401526101008204811615156040840152620100009091041615156060820152600290910154608090910152919050565b603c546001600160a01b031633146125455760405162461bcd60e51b81526004016104df90615747565b603e5462010000900460ff161561256e5760405162461bcd60e51b81526004016104df906158e7565b603b54600160a81b900460ff166125975760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b191690558460005b8181101561190c576126198484838181106125bf57fe5b90506020020135603d6000018a8a858181106125d757fe5b90506020020160206125ec9190810190614524565b60ff16815481106125f957fe5b90600052602060002090600402016003015461351b90919063ffffffff16565b603d89898481811061262757fe5b905060200201602061263c9190810190614524565b60ff168154811061264957fe5b60009182526020909120600360049092020101556001016125a8565b603c546001600160a01b0316331461268f5760405162461bcd60e51b81526004016104df90615747565b603e5462010000900460ff16156126b85760405162461bcd60e51b81526004016104df906158e7565b603b54600160a81b900460ff166126e15760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b19169055603d80546110ef91839160ff87169081106125f957fe5b6000806127118461359a565b91509150816127325760405162461bcd60e51b81526004016104df90615947565b82603d6000018260ff168154811061274657fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b83600781111561277057fe5b021790555050505050565b603e54603f5460ff808316926101008104821692620100009091049091169084565b603c546001600160a01b031681565b600054610100900460ff16806127c557506127c5613a30565b806127d3575060005460ff16155b6127ef5760405162461bcd60e51b81526004016104df906158c7565b600054610100900460ff1615801561281a576000805460ff1961ff0019909116610100171660011790555b612822613a36565b61282b8b613a4b565b6001600160a01b038a166128515760405162461bcd60e51b81526004016104df90615927565b8761286e5760405162461bcd60e51b81526004016104df90615907565b603c80546001600160a01b038c166001600160a01b0319909116179055603e805460ff1916600a179055670de0b6b3a7640000603f5560005b8881101561292b576129228a8a838181106128be57fe5b90506020020160206128d39190810190614076565b8989848181106128df57fe5b90506020020160206128f49190810190614076565b6128fc612a3d565b87878681811061290857fe5b905060200201602061291d91908101906144ac565b612a45565b506001016128a7565b5061299c89898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a9250899182918501908490808284376000920191909152506001925061327c915050565b80156129ae576000805461ff00191690555b5050505050505050505050565b603b546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b158015612a0057600080fd5b505afa158015612a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a389190810190614094565b905090565b6305f5e10090565b60006001600160a01b038516612a6d5760405162461bcd60e51b81526004016104df906158a7565b6001600160a01b038416612a935760405162461bcd60e51b81526004016104df90615967565b620f42408310158015612aab57506402540be4008311155b612ac75760405162461bcd60e51b81526004016104df906157d7565b6000612ad28661359a565b5090508015612af35760405162461bcd60e51b81526004016104df90615877565b604051632fa8a91360e11b81526001600160a01b03861690635f51522690612b1f908990600401615562565b602060405180830381600087803b158015612b3957600080fd5b505af1158015612b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b719190810190614506565b506000612b7d87613a64565b90506000612b9260128363ffffffff61354716565b90506000612baa87600a84900a63ffffffff613b0b16565b603d54603e549192509060ff90811690821610612bd95760405162461bcd60e51b81526004016104df90615857565b6001600160a01b038a8116600081815260406020818152818320805460ff191660ff88161790556041805460018181018355919094527f7c9785e8241615bc80415d89775984a1337d15dc1bf4ce50f41988b2a2b336a790930180546001600160a01b031916958f1695909517909455805160c08101909152918252603d92820190815289151560208083019190915260408201869052600060608301819052608090920182905283546001810180865594835291819020835160049093020180546001600160a01b0319166001600160a01b03909316929092178083559083015190829060ff60a01b1916600160a01b836007811115612cd657fe5b02179055506040828101518254901515600160a81b0260ff60a81b19909116178255606083015160018301556080830151600283015560a090920151600390910155516001600160a01b038c1691507fc5841a71c957e4395ad5f2efb03673e584498cce9790cce25bf59e92094dbd3090612d52908c90615562565b60405180910390a29998505050505050505050565b603b546037546040516385acd64160e01b81526000926001600160a01b0316916385acd64191612d9a91906004016156ec565b60206040518083038186803b158015612a0057600080fd5b600080612dbe8361359a565b9150915081612ddf5760405162461bcd60e51b81526004016104df90615947565b603d54612dea613eba565b603d805460ff8516908110612dfb57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115612e4357fe5b6007811115612e4e57fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809182015281015190915015612ea65760405162461bcd60e51b81526004016104df90615997565b60a081015115612ec85760405162461bcd60e51b81526004016104df906157b7565b600581602001516007811115612eda57fe5b1415612ef85760405162461bcd60e51b81526004016104df90615797565b6000612f0b83600163ffffffff61354716565b90508060ff168460ff161415612fb057603d805480612f2657fe5b6000828152602080822060046000199094019384020180546001600160b01b03191681556001810183905560028101839055600301829055919092556001600160a01b03881682526040908190529020805460ff191690556041805480612f8957fe5b600082815260209020810160001990810180546001600160a01b031916905501905561323d565b603d805460ff8316908110612fc157fe5b9060005260206000209060040201603d6000018560ff1681548110612fe257fe5b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b0390921691909117808255825460ff600160a01b918290041691839160ff60a01b199091169083600781111561303957fe5b02179055508154815460ff60a81b1916600160a81b9182900460ff1615159091021781556001808301549082015560028083015490820155600391820154910155603d80548061308557fe5b60008281526020812060046000199093019283020180546001600160b01b031916815560018101829055600281018290556003015590556130c4613eba565b603d805460ff87169081106130d557fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561311d57fe5b600781111561312857fe5b81528154600160a81b900460ff90811615156020808401919091526001840154604080850191909152600285015460608501526003909401546080909301929092526001600160a01b038b8116600090815292849052838320805460ff19908116909155855190911683529290912080549092168882161790915560418054929350919084169081106131b757fe5b600091825260209091200154604180546001600160a01b039092169160ff88169081106131e057fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604180548061321957fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505b81516040516001600160a01b03909116907f1e5281bbecf5c15104f9e35265dbe738c1cd2597613cbf4a0a51713448bc13b990600090a2505050505050565b82518061329b5760405162461bcd60e51b81526004016104df90615767565b825181146132bb5760405162461bcd60e51b81526004016104df906158f7565b60005b818110156133fb576000806132e58784815181106132d857fe5b602002602001015161359a565b91509150816133065760405162461bcd60e51b81526004016104df90615897565b61330e613eba565b61331782613618565b9050600087858151811061332757fe5b602002602001015190506001600781111561333e57fe5b8260200151600781111561334e57fe5b14156133aa57670de0b6b3a764000081111561337c5760405162461bcd60e51b81526004016104df90615787565b80603d6000018460ff168154811061339057fe5b9060005260206000209060040201600201819055506133eb565b603d805460ff85169081106133bb57fe5b90600052602060002090600402016002015481146133eb5760405162461bcd60e51b81526004016104df906158b7565b5050600190920191506132be9050565b508161340957613409613b45565b7fbe2adf2902216365c5c656d48909da65fad401f809e4351cdbcfcac406745669848460405161173192919061563f565b60606000603d600001805480602002602001604051908101604052809291908181526020016000905b8282101561350a5760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660078111156134b357fe5b60078111156134be57fe5b81526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152505081526020019060010190613463565b5050603d5492959294509192505050565b6000828201838110156135405760405162461bcd60e51b81526004016104df90615777565b9392505050565b600061354083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613bd3565b600061354083836305f5e100613bff565b6001600160a01b03811660009081526040602081905281205460ff168061360e57603d546135cd57506000905080613613565b826001600160a01b0316603d6000016000815481106135e857fe5b600091825260208220600490910201546001600160a01b03169190911492509050613613565b600191505b915091565b613620613eba565b603d805460ff841690811061363157fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561367957fe5b600781111561368457fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809091015292915050565b60405161371890849063a9059cbb60e01b906136e190869086906024016155db565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c2d565b505050565b60006135408383670de0b6b3a7640000613bff565b6000600582600781111561374257fe5b14806137595750600682600781111561375757fe5b145b8061376f5750600782600781111561376d57fe5b145b1561377c57506001613780565b5060005b919050565b60608060606000845190508060ff166040519080825280602002602001820160405280156137cd57816020015b6137ba613eba565b8152602001906001900390816137b25790505b5093508060ff166040519080825280602002602001820160405280156137fd578160200160208202803883390190505b5091508060ff1660405190808252806020026020018201604052801561382d578160200160208202803883390190505b50925060005b8160ff168160ff161015613a27576000868260ff168151811061385257fe5b6020026020010151905060008260010190505b8360ff168160ff1610156138c357878160ff168151811061388257fe5b60200260200101516001600160a01b0316826001600160a01b031614156138bb5760405162461bcd60e51b81526004016104df906158d7565b600101613865565b506000806138d08361359a565b91509150816138f15760405162461bcd60e51b81526004016104df90615897565b80878560ff168151811061390157fe5b60ff9283166020918202929092010152603d80549091831690811061392257fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561396a57fe5b600781111561397557fe5b8152815460ff600160a81b909104811615156020830152600183015460408301526002830154606083015260039092015460809091015289518a9187169081106139bb57fe5b602002602001018190525060418160ff16815481106139d657fe5b9060005260206000200160009054906101000a90046001600160a01b0316868560ff1681518110613a0357fe5b6001600160a01b039290921660209283029190910190910152505050600101613833565b50509193909250565b303b1590565b603b805460ff60a81b1916600160a81b179055565b613a5481613d12565b50603b805460ff60a01b19169055565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613aa057600080fd5b505afa158015613ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ad89190810190614542565b60ff16905060048110158015613aef575060128111155b611ad15760405162461bcd60e51b81526004016104df90615867565b600082613b1a57506000611ad1565b82820282848281613b2757fe5b04146135405760405162461bcd60e51b81526004016104df90615887565b603d546000805b82811015613b9257613b88603d6000018281548110613b6757fe5b9060005260206000209060040201600201548361351b90919063ffffffff16565b9150600101613b4c565b50670de0b6b3a76400008110158015613bb35750673782dace9d9000008111155b613bcf5760405162461bcd60e51b81526004016104df90615977565b5050565b60008184841115613bf75760405162461bcd60e51b81526004016104df9190615716565b505050900390565b600080613c12858563ffffffff613b0b16565b9050613c24818463ffffffff613d5b16565b95945050505050565b613c3f826001600160a01b0316613d9d565b613c5b5760405162461bcd60e51b81526004016104df90615987565b60006060836001600160a01b031683604051613c7791906154fe565b6000604051808303816000865af19150503d8060008114613cb4576040519150601f19603f3d011682016040523d82523d6000602084013e613cb9565b606091505b509150915081613cdb5760405162461bcd60e51b81526004016104df906157c7565b8051156106c85780806020019051613cf691908101906144ca565b6106c85760405162461bcd60e51b81526004016104df90615917565b6001600160a01b038116613d385760405162461bcd60e51b81526004016104df90615727565b603b80546001600160a01b0319166001600160a01b0383161790556105f7613dd6565b600061354083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613e83565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061054c575050151592915050565b604051613de290615541565b604051908190038120603355613df790615515565b604051908190038120603455613e0c9061554c565b604051908190038120603555613e2190615536565b604051908190038120603655613e369061552b565b604051908190038120603755613e4b90615520565b604051908190038120603855613e6090615557565b604051908190038120603955613e759061550a565b604051908190039020603a55565b60008183613ea45760405162461bcd60e51b81526004016104df9190615716565b506000838581613eb057fe5b0495945050505050565b6040805160c081019091526000808252602082019081526020016000151581526020016000815260200160008152602001600081525090565b6040518060600160405280613f06613eba565b815260006020820181905260409091015290565b6040518060800160405280600081526020016060815260200160608152602001606081525090565b60405180608001604052806000151581526020016060815260200160608152602001606081525090565b6040518060a00160405280600015158152602001606081526020016060815260200160608152602001606081525090565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b8035611ad181615b0a565b8051611ad181615b0a565b60008083601f840112613ff357600080fd5b5081356001600160401b0381111561400a57600080fd5b60208301915083602082028301111561402257600080fd5b9250929050565b8035611ad181615b1e565b8051611ad181615b1e565b8035611ad181615b27565b8035611ad181615b34565b8051611ad181615b34565b8035611ad181615b3d565b8051611ad181615b3d565b60006020828403121561408857600080fd5b600061054c8484613fcb565b6000602082840312156140a657600080fd5b600061054c8484613fd6565b60008060008060008060008060008060c08b8d0312156140d157600080fd5b60006140dd8d8d613fcb565b9a505060206140ee8d828e01613fcb565b99505060408b01356001600160401b0381111561410a57600080fd5b6141168d828e01613fe1565b985098505060608b01356001600160401b0381111561413457600080fd5b6141408d828e01613fe1565b965096505060808b01356001600160401b0381111561415e57600080fd5b61416a8d828e01613fe1565b945094505060a08b01356001600160401b0381111561418857600080fd5b6141948d828e01613fe1565b92509250509295989b9194979a5092959850565b6000806000606084860312156141bd57600080fd5b60006141c98686613fcb565b93505060206141da86828701613fcb565b92505060406141eb86828701614029565b9150509250925092565b6000806040838503121561420857600080fd5b60006142148585613fcb565b925050602061422585828601614029565b9150509250929050565b6000806040838503121561424257600080fd5b600061424e8585613fcb565b92505060206142258582860161403f565b60008060006060848603121561427457600080fd5b60006142808686613fcb565b93505060206141da8682870161404a565b600080602083850312156142a457600080fd5b82356001600160401b038111156142ba57600080fd5b6142c685828601613fe1565b92509250509250929050565b6000806000604084860312156142e757600080fd5b83356001600160401b038111156142fd57600080fd5b61430986828701613fe1565b935093505060206141eb86828701613fcb565b6000806000806040858703121561433257600080fd5b84356001600160401b0381111561434857600080fd5b61435487828801613fe1565b945094505060208501356001600160401b0381111561437257600080fd5b61437e87828801613fe1565b95989497509550505050565b6000806000806000606086880312156143a257600080fd5b85356001600160401b038111156143b857600080fd5b6143c488828901613fe1565b955095505060208601356001600160401b038111156143e257600080fd5b6143ee88828901613fe1565b9350935050604061440188828901614029565b9150509295509295909350565b6000806000806000806060878903121561442757600080fd5b86356001600160401b0381111561443d57600080fd5b61444989828a01613fe1565b965096505060208701356001600160401b0381111561446757600080fd5b61447389828a01613fe1565b945094505060408701356001600160401b0381111561449157600080fd5b61449d89828a01613fe1565b92509250509295509295509295565b6000602082840312156144be57600080fd5b600061054c8484614029565b6000602082840312156144dc57600080fd5b600061054c8484614034565b6000602082840312156144fa57600080fd5b600061054c848461404a565b60006020828403121561451857600080fd5b600061054c8484614055565b60006020828403121561453657600080fd5b600061054c8484614060565b60006020828403121561455457600080fd5b600061054c848461406b565b60008060006060848603121561457557600080fd5b60006145818686614060565b935050602061459286828701613fcb565b92505060406141eb8682870161404a565b60006145af83836145f2565b505060200190565b60006145c38383615397565b505060c00190565b60006145af8383614830565b60006145af83836154f5565b6145ec81615aad565b82525050565b6145ec81615a81565b60006146078385615a69565b935061461282615a5c565b8060005b85811015614648576146288284615a72565b61463288826145a3565b975061463d83615a5f565b925050600101614616565b509495945050505050565b600061465e82615a65565b6146688185615a69565b935061467383615a5f565b8060005b8381101561464857815161468b88826145a3565b975061469683615a5f565b925050600101614677565b60006146ac82615a65565b6146b68185615a69565b93506146c183615a5f565b8060005b838110156146485781516146d988826145a3565b97506146e483615a5f565b9250506001016146c5565b60006146fa82615a65565b6147048185615a69565b935061470f83615a5f565b8060005b8381101561464857815161472788826145b7565b975061473283615a5f565b925050600101614713565b600061474882615a65565b6147528185615a69565b935061475d83615a5f565b8060005b8381101561464857815161477588826145b7565b975061478083615a5f565b925050600101614761565b600061479682615a65565b6147a08185615a69565b93506147ab83615a5f565b8060005b838110156146485781516147c388826145cb565b97506147ce83615a5f565b9250506001016147af565b60006147e482615a65565b6147ee8185615a69565b93506147f983615a5f565b8060005b8381101561464857815161481188826145d7565b975061481c83615a5f565b9250506001016147fd565b6145ec81615a8c565b6145ec81615a5c565b600061484482615a65565b61484e8185613780565b935061485e818560208601615aca565b9290920192915050565b6145ec81615ab4565b6145ec81615abf565b600061488582615a65565b61488f8185615a69565b935061489f818560208601615aca565b6148a881615af6565b9093019392505050565b60006148bf601583615a69565b744e657875732061646472657373206973207a65726f60581b815260200192915050565b60006148f0601483615a69565b7314185d5cd8589b194e881b9bdd081c185d5cd95960621b815260200192915050565b6000614920601583615a69565b7409aeae6e840c4ca40c6c2d8d8cac840c4f240da92f605b1b815260200192915050565b6000614951600e83613780565b6d29b0bb34b733b9a6b0b730b3b2b960911b8152600e0192915050565b600061497b601983615a69565b7f4d757374206d69677261746520736f6d65206241737365747300000000000000815260200192915050565b60006149b4601a83615a69565b7f456d707479206241737365747320617272617920706173736564000000000000815260200192915050565b60006149ed600783613780565b665374616b696e6760c81b815260070192915050565b6000614a10601b83615a69565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000614a49601c83615a69565b7f417373657420776569676874206d757374206265203c3d203130302500000000815260200192915050565b6000614a82601583615a69565b74624173736574206d7573742062652061637469766560581b815260200192915050565b6000614ab3602283615a69565b7f4e6f20624173736574732063616e20626520756e646572676f696e67207265638152611bdb60f21b602082015260400192915050565b6000614af7601a83615a69565b7f624173736574207661756c74206d75737420626520656d707479000000000000815260200192915050565b6000614b30601083613780565b6f2932b1b7b63630ba32b930b634b9b2b960811b815260100192915050565b6000614b5c602083615a69565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000614b95600f83615a69565b6e4d4d206f7574206f662072616e676560881b815260200192915050565b6000614bc0601783615a69565b7f624173736574206d757374206265206166666563746564000000000000000000815260200192915050565b6000614bf9601b83615a69565b7f624173736574206d75737420657869737420696e204261736b65740000000000815260200192915050565b6000614c32601983615a69565b7f4d757374207472616e736665722066756c6c20616d6f756e7400000000000000815260200192915050565b6000614c6b601b83615a69565b7f4d757374206265206d616e61676572206f7220676f7665726e6f720000000000815260200192915050565b6000614ca4601983615a69565b7f4f6e6c7920676f7665726e6f722063616e206578656375746500000000000000815260200192915050565b6000614cdd602483615a69565b7f43616e6e6f74206d6967726174652062417373657473207769746820786665728152632066656560e01b602082015260400192915050565b6000614d23601083615a69565b6f14185d5cd8589b194e881c185d5cd95960821b815260200192915050565b6000614d4f600783613780565b6626b0b730b3b2b960c91b815260070192915050565b6000614d72601583615a69565b7413585e0818905cdcd95d1cc81a5b8810985cdad95d605a1b815260200192915050565b6000614da3602983615a69565b7f546f6b656e206d75737420686176652073756666696369656e7420646563696d815268616c20706c6163657360b81b602082015260400192915050565b6000614dee601f83615a69565b7f62417373657420616c72656164792065786973747320696e204261736b657400815260200192915050565b6000614e27600983613780565b6827b930b1b632a43ab160b91b815260090192915050565b6000614e4c602183615a69565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614e8f601183615a69565b7018905cdcd95d081b5d5cdd08195e1a5cdd607a1b815260200192915050565b6000614ebc600a83613780565b69476f7665726e616e636560b01b8152600a0192915050565b6000614ee2601c83615a69565b7f6241737365742061646472657373206d7573742062652076616c696400000000815260200192915050565b6000614f1b600a83613780565b69283937bc3ca0b236b4b760b11b8152600a0192915050565b6000614f41601f83615a69565b7f41666665637465642062417373657473206d7573742062652073746174696300815260200192915050565b6000614f7a602e83615a69565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614fca601783615a69565b7f4d7573742068617665206e6f206475706c696361746573000000000000000000815260200192915050565b6000615003601483615a69565b734261736b6574206d75737420626520616c69766560601b815260200192915050565b6000615033601e83615a69565b7f4d757374206265206d61746368696e6720624173736574206172726179730000815260200192915050565b600061506c602183615a69565b7f4d75737420696e697469616c697365207769746820736f6d65206241737365748152607360f81b602082015260400192915050565b60006150af602a83615a69565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006150fb601383615a69565b726d49782061646472657373206973207a65726f60681b815260200192915050565b600061512a601f83615a69565b7f4d757374207472616e7366657220746f206e657720696e7465677261746f7200815260200192915050565b6000615163601583615a69565b7418905cdcd95d08191bd95cc81b9bdd08195e1a5cdd605a1b815260200192915050565b6000615194601f83615a69565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b60006151cd602183615a69565b7f496e746567726174696f6e2061646472657373206d7573742062652076616c698152601960fa1b602082015260400192915050565b6000615210602783615a69565b7f4261736b657420776569676874206d757374206265203e3d20313030202626208152663c3d203430302560c81b602082015260400192915050565b6000615259600983613780565b682134b6322a37b5b2b760b91b815260090192915050565b600061527e601f83615a69565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b60006152b7602583615a69565b7f624173736574206d7573742068617665206120746172676574207765696768748152640206f6620360dc1b602082015260400192915050565b805160a080845260009190840190615309828261473d565b915050602083015161531e60208601826154f5565b5060408301516153316040860182614827565b5060608301516153446060860182614827565b5060808301516153576080860182614830565b509392505050565b80516101008301906153718482615397565b50602082015161538460c08501826145f2565b5060408201516106c860e08501826154f5565b805160c08301906153a884826145f2565b5060208201516153bb6020850182614871565b5060408201516153ce6040850182614827565b5060608201516153e16060850182614830565b5060808201516153f46080850182614830565b5060a08201516106c860a0850182614830565b8051600090608084019061541b8582614827565b5060208301518482036020860152615433828261473d565b9150506040830151848203604086015261544d82826146a1565b91505060608301518482036060860152613c2482826147d9565b8051600090608084019061541b8582614830565b805160009060a084019061548f8582614827565b50602083015184820360208601526154a7828261473d565b915050604083015184820360408601526154c1828261473d565b915050606083015184820360608601526154db82826146a1565b91505060808301518482036080860152613c2482826147d9565b6145ec81615aa7565b60006135408284614839565b6000611ad182614944565b6000611ad1826149e0565b6000611ad182614b23565b6000611ad182614d42565b6000611ad182614e1a565b6000611ad182614eaf565b6000611ad182614f0e565b6000611ad18261524c565b60208101611ad182846145f2565b60208101611ad182846145e3565b6060810161558c82866145f2565b61559960208301856145f2565b61054c6040830184614830565b608081016155b482876145f2565b6155c160208301866145f2565b6155ce6040830185614830565b613c246060830184614827565b604081016155e982856145f2565b6135406020830184614830565b6060810161560482866145f2565b6156116020830185614830565b61054c6040830184614827565b604080825281016156308185876145fb565b905061054c60208301846145f2565b604080825281016156508185614653565b9050818103602083015261054c818461478b565b6040808252810161567581856146ef565b90506135406020830184614830565b60208101611ad18284614827565b61024081016156a18287614827565b81810360208301526156b3818661487a565b90506156c2604083018561535f565b613c2461014083018461535f565b61012081016156df8285614827565b613540602083018461535f565b60208101611ad18284614830565b60208101611ad18284614868565b60208101611ad18284614871565b60208082528101613540818461487a565b60208082528101611ad1816148b2565b60208082528101611ad1816148e3565b60208082528101611ad181614913565b60208082528101611ad18161496e565b60208082528101611ad1816149a7565b60208082528101611ad181614a03565b60208082528101611ad181614a3c565b60208082528101611ad181614a75565b60208082528101611ad181614aa6565b60208082528101611ad181614aea565b60208082528101611ad181614b4f565b60208082528101611ad181614b88565b60208082528101611ad181614bb3565b60208082528101611ad181614bec565b60208082528101611ad181614c25565b60208082528101611ad181614c5e565b60208082528101611ad181614c97565b60208082528101611ad181614cd0565b60208082528101611ad181614d16565b60208082528101611ad181614d65565b60208082528101611ad181614d96565b60208082528101611ad181614de1565b60208082528101611ad181614e3f565b60208082528101611ad181614e82565b60208082528101611ad181614ed5565b60208082528101611ad181614f34565b60208082528101611ad181614f6d565b60208082528101611ad181614fbd565b60208082528101611ad181614ff6565b60208082528101611ad181615026565b60208082528101611ad18161505f565b60208082528101611ad1816150a2565b60208082528101611ad1816150ee565b60208082528101611ad18161511d565b60208082528101611ad181615156565b60208082528101611ad181615187565b60208082528101611ad1816151c0565b60208082528101611ad181615203565b60208082528101611ad181615271565b60208082528101611ad1816152aa565b6020808252810161354081846152f1565b60c08101611ad18284615397565b602080825281016135408184615407565b602080825281016135408184615467565b60208082528101613540818461547b565b60408101615a078285614830565b818103602083015261054c818461478b565b60208101611ad182846154f5565b60808101615a3582876154f5565b615a426020830186614827565b615a4f6040830185614827565b613c246060830184614830565b90565b60200190565b5190565b90815260200190565b60006135406020840184613fcb565b6000611ad182615a9b565b151590565b8061378081615b00565b6001600160a01b031690565b60ff1690565b6000611ad1825b6000611ad182615a81565b6000611ad182615a91565b60005b83811015615ae5578181015183820152602001615acd565b838111156106c85750506000910152565b601f01601f191690565b600881106105f757fe5b615b1381615a81565b81146105f757600080fd5b615b1381615a8c565b600881106105f757600080fd5b615b1381615a5c565b615b1381615aa756fea365627a7a72315820f3b5142477d1b96a36d409923a73f2e176c3d8dad8562ceeaeaa8e59da88c5606c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ef5760003560e01c8063905e89141161010f578063c4a80a2a116100a2578063e3f7152911610071578063e3f715291461045f578063edc832b314610472578063f8085f101461048a578063fc94058e14610492576101ef565b8063c4a80a2a14610411578063cd6ef2b014610424578063d5e1d27914610439578063dc686c8c1461044c576101ef565b8063a59824c5116100de578063a59824c5146103aa578063bdfbe29c146103bd578063bf9ca02d146103d0578063c0e46a2f146103f1576101ef565b8063905e89141461034f578063969642b9146103625780639d01cd3514610375578063a3f5c1d214610395576101ef565b806343ae78be116101875780636fb3e89c116101565780636fb3e89c14610301578063790bde32146103145780638456cb591461033457806388a90f511461033c576101ef565b806343ae78be146102bc5780635c975abb146102d15780635d16cf42146102e65780636f061dfb146102f9576101ef565b80632a2fab22116101c35780632a2fab221461025b5780632bf596cf146102715780633e37bcbc146102945780633f4ba83a146102b4576101ef565b80629e328b146101f457806309f2a9831461021d5780630b2d8501146102325780631d3ce39814610245575b600080fd5b6102076102023660046141a8565b6104a5565b6040516102149190615a19565b60405180910390f35b61023061022b366004614076565b610554565b005b61023061024036600461431c565b6105fa565b61024d6106ce565b604051610214929190615664565b6102636106e2565b6040516102149291906159f9565b61028461027f3660046141a8565b610a54565b6040516102149493929190615692565b6102a76102a2366004614076565b610ddc565b60405161021491906159b8565b610230610e1a565b6102c4610ec2565b60405161021491906159d7565b6102d9611048565b6040516102149190615684565b6102306102f4366004614560565b611058565b61023061112c565b61023061030f3660046142d2565b61113f565b6103276103223660046144e8565b61173f565b6040516102149190615562565b610230611766565b61023061034a36600461440e565b61180b565b6102d961035d3660046141f5565b611929565b610230610370366004614076565b611ad7565b61038861038336600461438a565b611c48565b60405161021491906159c6565b61039d611d0e565b60405161021491906156fa565b6102306103b8366004614076565b611d1d565b6102306103cb3660046141f5565b611e0c565b6103e36103de36600461425f565b612052565b6040516102149291906156d0565b6104046103ff366004614291565b6121d2565b60405161021491906159e8565b61032761041f366004614076565b6123a0565b61042c6123fc565b60405161021491906159a7565b61023061044736600461440e565b61251b565b61023061045a366004614560565b612665565b61023061046d36600461422f565b612705565b61047a61277b565b6040516102149493929190615a27565b61032761279d565b6102306104a03660046140b2565b6127ac565b60006104af6129bb565b6001600160a01b0316336001600160a01b0316146104e85760405162461bcd60e51b81526004016104df90615827565b60405180910390fd5b603e5462010000900460ff16156105115760405162461bcd60e51b81526004016104df906158e7565b603e54610100900460ff16156105395760405162461bcd60e51b81526004016104df906157a7565b61054c8484610546612a3d565b85612a45565b949350505050565b603e5462010000900460ff161561057d5760405162461bcd60e51b81526004016104df906158e7565b603e54610100900460ff16156105a55760405162461bcd60e51b81526004016104df906157a7565b336105ae612d67565b6001600160a01b031614806105d25750336105c76129bb565b6001600160a01b0316145b6105ee5760405162461bcd60e51b81526004016104df90615817565b6105f781612db2565b50565b6106026129bb565b6001600160a01b0316336001600160a01b0316146106325760405162461bcd60e51b81526004016104df90615827565b603e5462010000900460ff161561065b5760405162461bcd60e51b81526004016104df906158e7565b6106c8848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040805160208088028281018201909352878252909350879250869182918501908490808284376000920182905250925061327c915050565b50505050565b606060006106da61343a565b915091509091565b603c546000906060906001600160a01b031633146107125760405162461bcd60e51b81526004016104df90615747565b603b54600160a01b900460ff161561073c5760405162461bcd60e51b81526004016104df90615847565b603e5462010000900460ff16156107655760405162461bcd60e51b81526004016104df906158e7565b603b54600160a81b900460ff1661078e5760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b19169055606060006107a761343a565b91509150806040519080825280602002602001820160405280156107d5578160200160208202803883390190505b50600094509250835b818160ff161015610a3a576107f1613eba565b838260ff168151811061080057fe5b60200260200101519050600081600001519050600060418460ff168154811061082557fe5b6000918252602082200154604051632fa8a91360e11b81526001600160a01b0390911692508290635f51522690610860908690600401615562565b602060405180830381600087803b15801561087a57600080fd5b505af115801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108b29190810190614506565b6040850151909150600090610940576040516370a0823160e01b81526001600160a01b038516906370a08231906108ed908690600401615562565b60206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061093d9190810190614506565b90505b6000610952838363ffffffff61351b16565b60a08701519091508082118015610978575060018760200151600781111561097657fe5b145b15610a095781603d6000018960ff168154811061099157fe5b600091825260208220600360049092020101919091556109b7838363ffffffff61354716565b9050808c8a60ff16815181106109c957fe5b60200260200101818152505060006109ee89606001518361358990919063ffffffff16565b9050610a008e8263ffffffff61351b16565b9d505050610a27565b60008b8960ff1681518110610a1a57fe5b6020026020010181815250505b5050600190950194506107de9350505050565b5050603b805460ff60a81b1916600160a81b179055509091565b60006060610a60613ef3565b610a68613ef3565b603b54600160a01b900460ff1615610a925760405162461bcd60e51b81526004016104df90615847565b610a9a613ef3565b610aa2613ef3565b603e5462010000900460ff1680610ac05750603e54610100900460ff165b15610b095760408051808201909152601b81527f4261736b657420697320756e646572676f696e67206368616e6765000000000060208201526000965094509092509050610dd3565b600080610b158b61359a565b9150915081610b6457505060408051808201909152601a81527f496e70757420617373657420646f6573206e6f7420657869737400000000000060208201526000965094509092509050610dd3565b6040518060600160405280603d6000018360ff1681548110610b8257fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610bca57fe5b6007811115610bd557fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610c2757fe5b600091825260209182902001546001600160a01b0316825260ff841691015293508815610c6f5750506040805160208101909152600081526001965094509092509050610dd3565b600080610c7b8c61359a565b9150915081610cce57505060408051808201909152601b81527f4f757470757420617373657420646f6573206e6f7420657869737400000000006020820152600098509650929450909250610dd3915050565b6040518060600160405280603d6000018360ff1681548110610cec57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115610d3457fe5b6007811115610d3f57fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff1681548110610d9157fe5b60009182526020808320909101546001600160a01b0316835260ff90941691840191909152604080519384019052825260019a50909850949650939450505050505b93509350935093565b610de4613eba565b600080610df08461359a565b9150915081610e115760405162461bcd60e51b81526004016104df90615897565b61054c81613618565b610e226129bb565b6001600160a01b0316336001600160a01b031614610e525760405162461bcd60e51b81526004016104df90615827565b603b54600160a01b900460ff16610e7b5760405162461bcd60e51b81526004016104df90615737565b603b805460ff60a01b191690556040517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90610eb8903390615570565b60405180910390a1565b610eca613f1a565b603b54600160a01b900460ff1615610ef45760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff1615610f1c5760405162461bcd60e51b81526004016104df906157a7565b60606000610f2861343a565b91509150606081604051908082528060200260200182016040528015610f58578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015610f87578160200160208202803883390190505b50905060005b838160ff16101561101f5760418160ff1681548110610fa857fe5b9060005260206000200160009054906101000a90046001600160a01b0316838260ff1681518110610fd557fe5b60200260200101906001600160a01b031690816001600160a01b03168152505080828260ff168151811061100557fe5b60ff90921660209283029190910190910152600101610f8d565b5060408051608081018252603f5481526020810195909552840191909152606083015250919050565b603b54600160a01b900460ff1690565b603c546001600160a01b031633146110825760405162461bcd60e51b81526004016104df90615747565b603b54600160a81b900460ff166110ab5760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b19169055603d80546110ef91839160ff87169081106110cf57fe5b90600052602060002090600402016003015461354790919063ffffffff16565b603d805460ff861690811061110057fe5b60009182526020909120600360049092020101555050603b805460ff60a81b1916600160a81b17905550565b603e805462ff0000191662010000179055565b6111476129bb565b6001600160a01b0316336001600160a01b0316146111775760405162461bcd60e51b81526004016104df90615827565b81806111955760405162461bcd60e51b81526004016104df90615757565b60005b818110156116fd5760008585838181106111ae57fe5b90506020020160206111c39190810190614076565b90506000806111d18361359a565b91509150816111f25760405162461bcd60e51b81526004016104df90615947565b603d805460ff831690811061120357fe5b6000918252602090912060049091020154600160a81b900460ff161561123b5760405162461bcd60e51b81526004016104df90615837565b600060418260ff168154811061124d57fe5b6000918252602090912001546001600160a01b03908116915087168114156112875760405162461bcd60e51b81526004016104df90615937565b6040516370a0823160e01b81526000906001600160a01b038616906370a08231906112b6908590600401615562565b60206040518083038186803b1580156112ce57600080fd5b505afa1580156112e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113069190810190614506565b90506000826001600160a01b0316635f515226876040518263ffffffff1660e01b81526004016113369190615562565b602060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113889190810190614506565b905080156113f65760405163934785b760e01b81526001600160a01b0384169063934785b7906113c39030908a9086906000906004016155a6565b600060405180830381600087803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b505050505b811561145f5760405163a4e2859560e01b81526001600160a01b0384169063a4e285959061142c9030908a90879060040161557e565b600060405180830381600087803b15801561144657600080fd5b505af115801561145a573d6000803e3d6000fd5b505050505b6000611471828463ffffffff61351b16565b90508960418660ff168154811061148457fe5b600091825260209091200180546001600160a01b0319166001600160a01b039283161790556114b69088168b836136bf565b6040516307dba22560e31b81528a906001600160a01b03821690633edd1128906114e9908b9087906000906004016155f6565b602060405180830381600087803b15801561150357600080fd5b505af1158015611517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061153b9190810190614506565b50604051632fa8a91360e11b81526000906001600160a01b03831690635f5152269061156b908c90600401615562565b602060405180830381600087803b15801561158557600080fd5b505af1158015611599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115bd9190810190614506565b90506000896001600160a01b03166370a08231846040518263ffffffff1660e01b81526004016115ed9190615562565b60206040518083038186803b15801561160557600080fd5b505afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061163d9190810190614506565b9050670de111a6b7de4000670de05bc096e9c000611661878263ffffffff61371d16565b841015801561167f575061167b878363ffffffff61371d16565b8411155b61169b5760405162461bcd60e51b81526004016104df90615807565b6116ab888263ffffffff61371d16565b83101580156116c957506116c5888363ffffffff61371d16565b8311155b6116e55760405162461bcd60e51b81526004016104df90615807565b50506001909a01995061119898505050505050505050565b507f407ca8e939a25b34f290fb7f4d3b0d85d03f13313dc34a6a15bbd91492cfa2498484846040516117319392919061561e565b60405180910390a150505050565b6041818154811061174c57fe5b6000918252602090912001546001600160a01b0316905081565b61176e6129bb565b6001600160a01b0316336001600160a01b03161461179e5760405162461bcd60e51b81526004016104df90615827565b603b54600160a01b900460ff16156117c85760405162461bcd60e51b81526004016104df90615847565b603b805460ff60a01b1916600160a01b1790556040517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890610eb8903390615570565b603c546001600160a01b031633146118355760405162461bcd60e51b81526004016104df90615747565b603b54600160a81b900460ff1661185e5760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b191690558460005b8181101561190c576118c084848381811061188657fe5b90506020020135603d6000018a8a8581811061189e57fe5b90506020020160206118b39190810190614524565b60ff16815481106110cf57fe5b603d8989848181106118ce57fe5b90506020020160206118e39190810190614524565b60ff16815481106118f057fe5b600091825260209091206003600490920201015560010161186f565b5050603b805460ff60a81b1916600160a81b179055505050505050565b600033611934612d67565b6001600160a01b0316148061195857503361194d6129bb565b6001600160a01b0316145b6119745760405162461bcd60e51b81526004016104df90615817565b603e5462010000900460ff161561199d5760405162461bcd60e51b81526004016104df906158e7565b6000806119a98561359a565b60ff1691509150816119cd5760405162461bcd60e51b81526004016104df906157f7565b6000603d60000182815481106119df57fe5b6000918252602082206004909102015460ff600160a01b90910416915085611a08576003611a0b565b60025b9050806007811115611a1957fe5b826007811115611a2557fe5b1480611a355750611a3582613732565b15611a47576001945050505050611ad1565b80603d6000018481548110611a5857fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611a8257fe5b0217905550866001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e82604051611ac09190615708565b60405180910390a260009450505050505b92915050565b33611ae0612d67565b6001600160a01b03161480611b04575033611af96129bb565b6001600160a01b0316145b611b205760405162461bcd60e51b81526004016104df90615817565b600080611b2c8361359a565b60ff169150915081611b505760405162461bcd60e51b81526004016104df90615897565b6000603d6000018281548110611b6257fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611b8d57fe5b1480611ba457506003816007811115611ba257fe5b145b80611bba57506004816007811115611bb857fe5b145b156106c8576001603d6000018381548110611bd157fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b836007811115611bfb57fe5b0217905550836001600160a01b03167f4fd6d64c6e0a8165ba76233d6e3d0cdc923400a6a06842cd8852e04892fc9e4e6001604051611c3a9190615708565b60405180910390a250505050565b611c50613f42565b603b54600160a01b900460ff1615611c7a5760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff1615611ca25760405162461bcd60e51b81526004016104df906157a7565b6060806060611ce389898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061378592505050565b6040805160808101825260018152602081019490945283015260608201529998505050505050505050565b603b546001600160a01b031681565b611d256129bb565b6001600160a01b0316336001600160a01b031614611d555760405162461bcd60e51b81526004016104df90615827565b600080611d618361359a565b60ff169150915081611d855760405162461bcd60e51b81526004016104df90615897565b6000603d6000018281548110611d9757fe5b6000918252602090912060049091020154600160a01b900460ff1690506002816007811115611dc257fe5b1480611dd957506003816007811115611dd757fe5b145b611df55760405162461bcd60e51b81526004016104df906157e7565b5050603e805462ff00001916620100001790555050565b33611e15612d67565b6001600160a01b03161480611e39575033611e2e6129bb565b6001600160a01b0316145b611e555760405162461bcd60e51b81526004016104df90615817565b600080611e618461359a565b9150915081611e825760405162461bcd60e51b81526004016104df90615947565b82603d6000018260ff1681548110611e9657fe5b600091825260209091206004909102018054911515600160a81b0260ff60a81b199092169190911790558215612019576000846001600160a01b03166370a0823160418460ff1681548110611ee757fe5b6000918252602090912001546040516001600160e01b031960e084901b168152611f1d916001600160a01b031690600401615562565b60206040518083038186803b158015611f3557600080fd5b505afa158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f6d9190810190614506565b905080156120175760418260ff1681548110611f8557fe5b6000918252602090912001546040516307dba22560e31b81526001600160a01b0390911690633edd112890611fc390889085906001906004016155f6565b602060405180830381600087803b158015611fdd57600080fd5b505af1158015611ff1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120159190810190614506565b505b505b836001600160a01b03167ff1d30c51cc85d5f31324e582df608abdbb328479127c2d9c7e70666cbc611c7c84604051611c3a9190615684565b600061205c613ef3565b603b54600160a01b900460ff16156120865760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff16156120ae5760405162461bcd60e51b81526004016104df906157a7565b6000806120ba8761359a565b91509150816120db5760405162461bcd60e51b81526004016104df90615947565b600193506040518060600160405280603d6000018360ff16815481106120fd57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561214557fe5b600781111561215057fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200160418360ff16815481106121a257fe5b600091825260209182902001546001600160a01b0316825260ff9093169201919091529296929550919350505050565b6121da613f6c565b603b54600160a01b900460ff16156122045760405162461bcd60e51b81526004016104df90615847565b603e54610100900460ff161561222c5760405162461bcd60e51b81526004016104df906157a7565b603e5462010000900460ff16156122555760405162461bcd60e51b81526004016104df906158e7565b606080606061229686868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061378592505050565b9250925092506040518060a00160405280600115158152602001603d600001805480602002602001604051908101604052809291908181526020016000905b8282101561237c5760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600781111561232557fe5b600781111561233057fe5b81526020016000820160159054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050815260200190600101906122d5565b50505050815260200184815260200182815260200183815250935050505092915050565b60008060006123ae8461359a565b91509150816123cf5760405162461bcd60e51b81526004016104df90615897565b60418160ff16815481106123df57fe5b6000918252602090912001546001600160a01b0316949350505050565b612404613f9d565b60408051603d805460c0602082028401810190945260a083018181529293919284929091849160009085015b828210156124d75760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff16600781111561248057fe5b600781111561248b57fe5b81526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152505081526020019060010190612430565b50505090825250600182015460ff80821660208401526101008204811615156040840152620100009091041615156060820152600290910154608090910152919050565b603c546001600160a01b031633146125455760405162461bcd60e51b81526004016104df90615747565b603e5462010000900460ff161561256e5760405162461bcd60e51b81526004016104df906158e7565b603b54600160a81b900460ff166125975760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b191690558460005b8181101561190c576126198484838181106125bf57fe5b90506020020135603d6000018a8a858181106125d757fe5b90506020020160206125ec9190810190614524565b60ff16815481106125f957fe5b90600052602060002090600402016003015461351b90919063ffffffff16565b603d89898481811061262757fe5b905060200201602061263c9190810190614524565b60ff168154811061264957fe5b60009182526020909120600360049092020101556001016125a8565b603c546001600160a01b0316331461268f5760405162461bcd60e51b81526004016104df90615747565b603e5462010000900460ff16156126b85760405162461bcd60e51b81526004016104df906158e7565b603b54600160a81b900460ff166126e15760405162461bcd60e51b81526004016104df90615957565b603b805460ff60a81b19169055603d80546110ef91839160ff87169081106125f957fe5b6000806127118461359a565b91509150816127325760405162461bcd60e51b81526004016104df90615947565b82603d6000018260ff168154811061274657fe5b60009182526020909120600490910201805460ff60a01b1916600160a01b83600781111561277057fe5b021790555050505050565b603e54603f5460ff808316926101008104821692620100009091049091169084565b603c546001600160a01b031681565b600054610100900460ff16806127c557506127c5613a30565b806127d3575060005460ff16155b6127ef5760405162461bcd60e51b81526004016104df906158c7565b600054610100900460ff1615801561281a576000805460ff1961ff0019909116610100171660011790555b612822613a36565b61282b8b613a4b565b6001600160a01b038a166128515760405162461bcd60e51b81526004016104df90615927565b8761286e5760405162461bcd60e51b81526004016104df90615907565b603c80546001600160a01b038c166001600160a01b0319909116179055603e805460ff1916600a179055670de0b6b3a7640000603f5560005b8881101561292b576129228a8a838181106128be57fe5b90506020020160206128d39190810190614076565b8989848181106128df57fe5b90506020020160206128f49190810190614076565b6128fc612a3d565b87878681811061290857fe5b905060200201602061291d91908101906144ac565b612a45565b506001016128a7565b5061299c89898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a9250899182918501908490808284376000920191909152506001925061327c915050565b80156129ae576000805461ff00191690555b5050505050505050505050565b603b546040805163030d028960e21b815290516000926001600160a01b031691630c340a24916004808301926020929190829003018186803b158015612a0057600080fd5b505afa158015612a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a389190810190614094565b905090565b6305f5e10090565b60006001600160a01b038516612a6d5760405162461bcd60e51b81526004016104df906158a7565b6001600160a01b038416612a935760405162461bcd60e51b81526004016104df90615967565b620f42408310158015612aab57506402540be4008311155b612ac75760405162461bcd60e51b81526004016104df906157d7565b6000612ad28661359a565b5090508015612af35760405162461bcd60e51b81526004016104df90615877565b604051632fa8a91360e11b81526001600160a01b03861690635f51522690612b1f908990600401615562565b602060405180830381600087803b158015612b3957600080fd5b505af1158015612b4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b719190810190614506565b506000612b7d87613a64565b90506000612b9260128363ffffffff61354716565b90506000612baa87600a84900a63ffffffff613b0b16565b603d54603e549192509060ff90811690821610612bd95760405162461bcd60e51b81526004016104df90615857565b6001600160a01b038a8116600081815260406020818152818320805460ff191660ff88161790556041805460018181018355919094527f7c9785e8241615bc80415d89775984a1337d15dc1bf4ce50f41988b2a2b336a790930180546001600160a01b031916958f1695909517909455805160c08101909152918252603d92820190815289151560208083019190915260408201869052600060608301819052608090920182905283546001810180865594835291819020835160049093020180546001600160a01b0319166001600160a01b03909316929092178083559083015190829060ff60a01b1916600160a01b836007811115612cd657fe5b02179055506040828101518254901515600160a81b0260ff60a81b19909116178255606083015160018301556080830151600283015560a090920151600390910155516001600160a01b038c1691507fc5841a71c957e4395ad5f2efb03673e584498cce9790cce25bf59e92094dbd3090612d52908c90615562565b60405180910390a29998505050505050505050565b603b546037546040516385acd64160e01b81526000926001600160a01b0316916385acd64191612d9a91906004016156ec565b60206040518083038186803b158015612a0057600080fd5b600080612dbe8361359a565b9150915081612ddf5760405162461bcd60e51b81526004016104df90615947565b603d54612dea613eba565b603d805460ff8516908110612dfb57fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b909104166007811115612e4357fe5b6007811115612e4e57fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809182015281015190915015612ea65760405162461bcd60e51b81526004016104df90615997565b60a081015115612ec85760405162461bcd60e51b81526004016104df906157b7565b600581602001516007811115612eda57fe5b1415612ef85760405162461bcd60e51b81526004016104df90615797565b6000612f0b83600163ffffffff61354716565b90508060ff168460ff161415612fb057603d805480612f2657fe5b6000828152602080822060046000199094019384020180546001600160b01b03191681556001810183905560028101839055600301829055919092556001600160a01b03881682526040908190529020805460ff191690556041805480612f8957fe5b600082815260209020810160001990810180546001600160a01b031916905501905561323d565b603d805460ff8316908110612fc157fe5b9060005260206000209060040201603d6000018560ff1681548110612fe257fe5b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b0390921691909117808255825460ff600160a01b918290041691839160ff60a01b199091169083600781111561303957fe5b02179055508154815460ff60a81b1916600160a81b9182900460ff1615159091021781556001808301549082015560028083015490820155600391820154910155603d80548061308557fe5b60008281526020812060046000199093019283020180546001600160b01b031916815560018101829055600281018290556003015590556130c4613eba565b603d805460ff87169081106130d557fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561311d57fe5b600781111561312857fe5b81528154600160a81b900460ff90811615156020808401919091526001840154604080850191909152600285015460608501526003909401546080909301929092526001600160a01b038b8116600090815292849052838320805460ff19908116909155855190911683529290912080549092168882161790915560418054929350919084169081106131b757fe5b600091825260209091200154604180546001600160a01b039092169160ff88169081106131e057fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604180548061321957fe5b600082815260209020810160001990810180546001600160a01b0319169055019055505b81516040516001600160a01b03909116907f1e5281bbecf5c15104f9e35265dbe738c1cd2597613cbf4a0a51713448bc13b990600090a2505050505050565b82518061329b5760405162461bcd60e51b81526004016104df90615767565b825181146132bb5760405162461bcd60e51b81526004016104df906158f7565b60005b818110156133fb576000806132e58784815181106132d857fe5b602002602001015161359a565b91509150816133065760405162461bcd60e51b81526004016104df90615897565b61330e613eba565b61331782613618565b9050600087858151811061332757fe5b602002602001015190506001600781111561333e57fe5b8260200151600781111561334e57fe5b14156133aa57670de0b6b3a764000081111561337c5760405162461bcd60e51b81526004016104df90615787565b80603d6000018460ff168154811061339057fe5b9060005260206000209060040201600201819055506133eb565b603d805460ff85169081106133bb57fe5b90600052602060002090600402016002015481146133eb5760405162461bcd60e51b81526004016104df906158b7565b5050600190920191506132be9050565b508161340957613409613b45565b7fbe2adf2902216365c5c656d48909da65fad401f809e4351cdbcfcac406745669848460405161173192919061563f565b60606000603d600001805480602002602001604051908101604052809291908181526020016000905b8282101561350a5760008481526020908190206040805160c081019091526004850290910180546001600160a01b03811683529192909190830190600160a01b900460ff1660078111156134b357fe5b60078111156134be57fe5b81526020016000820160159054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152505081526020019060010190613463565b5050603d5492959294509192505050565b6000828201838110156135405760405162461bcd60e51b81526004016104df90615777565b9392505050565b600061354083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613bd3565b600061354083836305f5e100613bff565b6001600160a01b03811660009081526040602081905281205460ff168061360e57603d546135cd57506000905080613613565b826001600160a01b0316603d6000016000815481106135e857fe5b600091825260208220600490910201546001600160a01b03169190911492509050613613565b600191505b915091565b613620613eba565b603d805460ff841690811061363157fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561367957fe5b600781111561368457fe5b81528154600160a81b900460ff1615156020820152600182015460408201526002820154606082015260039091015460809091015292915050565b60405161371890849063a9059cbb60e01b906136e190869086906024016155db565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c2d565b505050565b60006135408383670de0b6b3a7640000613bff565b6000600582600781111561374257fe5b14806137595750600682600781111561375757fe5b145b8061376f5750600782600781111561376d57fe5b145b1561377c57506001613780565b5060005b919050565b60608060606000845190508060ff166040519080825280602002602001820160405280156137cd57816020015b6137ba613eba565b8152602001906001900390816137b25790505b5093508060ff166040519080825280602002602001820160405280156137fd578160200160208202803883390190505b5091508060ff1660405190808252806020026020018201604052801561382d578160200160208202803883390190505b50925060005b8160ff168160ff161015613a27576000868260ff168151811061385257fe5b6020026020010151905060008260010190505b8360ff168160ff1610156138c357878160ff168151811061388257fe5b60200260200101516001600160a01b0316826001600160a01b031614156138bb5760405162461bcd60e51b81526004016104df906158d7565b600101613865565b506000806138d08361359a565b91509150816138f15760405162461bcd60e51b81526004016104df90615897565b80878560ff168151811061390157fe5b60ff9283166020918202929092010152603d80549091831690811061392257fe5b60009182526020918290206040805160c0810190915260049092020180546001600160a01b0381168352919290919083019060ff600160a01b90910416600781111561396a57fe5b600781111561397557fe5b8152815460ff600160a81b909104811615156020830152600183015460408301526002830154606083015260039092015460809091015289518a9187169081106139bb57fe5b602002602001018190525060418160ff16815481106139d657fe5b9060005260206000200160009054906101000a90046001600160a01b0316868560ff1681518110613a0357fe5b6001600160a01b039290921660209283029190910190910152505050600101613833565b50509193909250565b303b1590565b603b805460ff60a81b1916600160a81b179055565b613a5481613d12565b50603b805460ff60a01b19169055565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613aa057600080fd5b505afa158015613ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ad89190810190614542565b60ff16905060048110158015613aef575060128111155b611ad15760405162461bcd60e51b81526004016104df90615867565b600082613b1a57506000611ad1565b82820282848281613b2757fe5b04146135405760405162461bcd60e51b81526004016104df90615887565b603d546000805b82811015613b9257613b88603d6000018281548110613b6757fe5b9060005260206000209060040201600201548361351b90919063ffffffff16565b9150600101613b4c565b50670de0b6b3a76400008110158015613bb35750673782dace9d9000008111155b613bcf5760405162461bcd60e51b81526004016104df90615977565b5050565b60008184841115613bf75760405162461bcd60e51b81526004016104df9190615716565b505050900390565b600080613c12858563ffffffff613b0b16565b9050613c24818463ffffffff613d5b16565b95945050505050565b613c3f826001600160a01b0316613d9d565b613c5b5760405162461bcd60e51b81526004016104df90615987565b60006060836001600160a01b031683604051613c7791906154fe565b6000604051808303816000865af19150503d8060008114613cb4576040519150601f19603f3d011682016040523d82523d6000602084013e613cb9565b606091505b509150915081613cdb5760405162461bcd60e51b81526004016104df906157c7565b8051156106c85780806020019051613cf691908101906144ca565b6106c85760405162461bcd60e51b81526004016104df90615917565b6001600160a01b038116613d385760405162461bcd60e51b81526004016104df90615727565b603b80546001600160a01b0319166001600160a01b0383161790556105f7613dd6565b600061354083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613e83565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061054c575050151592915050565b604051613de290615541565b604051908190038120603355613df790615515565b604051908190038120603455613e0c9061554c565b604051908190038120603555613e2190615536565b604051908190038120603655613e369061552b565b604051908190038120603755613e4b90615520565b604051908190038120603855613e6090615557565b604051908190038120603955613e759061550a565b604051908190039020603a55565b60008183613ea45760405162461bcd60e51b81526004016104df9190615716565b506000838581613eb057fe5b0495945050505050565b6040805160c081019091526000808252602082019081526020016000151581526020016000815260200160008152602001600081525090565b6040518060600160405280613f06613eba565b815260006020820181905260409091015290565b6040518060800160405280600081526020016060815260200160608152602001606081525090565b60405180608001604052806000151581526020016060815260200160608152602001606081525090565b6040518060a00160405280600015158152602001606081526020016060815260200160608152602001606081525090565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b8035611ad181615b0a565b8051611ad181615b0a565b60008083601f840112613ff357600080fd5b5081356001600160401b0381111561400a57600080fd5b60208301915083602082028301111561402257600080fd5b9250929050565b8035611ad181615b1e565b8051611ad181615b1e565b8035611ad181615b27565b8035611ad181615b34565b8051611ad181615b34565b8035611ad181615b3d565b8051611ad181615b3d565b60006020828403121561408857600080fd5b600061054c8484613fcb565b6000602082840312156140a657600080fd5b600061054c8484613fd6565b60008060008060008060008060008060c08b8d0312156140d157600080fd5b60006140dd8d8d613fcb565b9a505060206140ee8d828e01613fcb565b99505060408b01356001600160401b0381111561410a57600080fd5b6141168d828e01613fe1565b985098505060608b01356001600160401b0381111561413457600080fd5b6141408d828e01613fe1565b965096505060808b01356001600160401b0381111561415e57600080fd5b61416a8d828e01613fe1565b945094505060a08b01356001600160401b0381111561418857600080fd5b6141948d828e01613fe1565b92509250509295989b9194979a5092959850565b6000806000606084860312156141bd57600080fd5b60006141c98686613fcb565b93505060206141da86828701613fcb565b92505060406141eb86828701614029565b9150509250925092565b6000806040838503121561420857600080fd5b60006142148585613fcb565b925050602061422585828601614029565b9150509250929050565b6000806040838503121561424257600080fd5b600061424e8585613fcb565b92505060206142258582860161403f565b60008060006060848603121561427457600080fd5b60006142808686613fcb565b93505060206141da8682870161404a565b600080602083850312156142a457600080fd5b82356001600160401b038111156142ba57600080fd5b6142c685828601613fe1565b92509250509250929050565b6000806000604084860312156142e757600080fd5b83356001600160401b038111156142fd57600080fd5b61430986828701613fe1565b935093505060206141eb86828701613fcb565b6000806000806040858703121561433257600080fd5b84356001600160401b0381111561434857600080fd5b61435487828801613fe1565b945094505060208501356001600160401b0381111561437257600080fd5b61437e87828801613fe1565b95989497509550505050565b6000806000806000606086880312156143a257600080fd5b85356001600160401b038111156143b857600080fd5b6143c488828901613fe1565b955095505060208601356001600160401b038111156143e257600080fd5b6143ee88828901613fe1565b9350935050604061440188828901614029565b9150509295509295909350565b6000806000806000806060878903121561442757600080fd5b86356001600160401b0381111561443d57600080fd5b61444989828a01613fe1565b965096505060208701356001600160401b0381111561446757600080fd5b61447389828a01613fe1565b945094505060408701356001600160401b0381111561449157600080fd5b61449d89828a01613fe1565b92509250509295509295509295565b6000602082840312156144be57600080fd5b600061054c8484614029565b6000602082840312156144dc57600080fd5b600061054c8484614034565b6000602082840312156144fa57600080fd5b600061054c848461404a565b60006020828403121561451857600080fd5b600061054c8484614055565b60006020828403121561453657600080fd5b600061054c8484614060565b60006020828403121561455457600080fd5b600061054c848461406b565b60008060006060848603121561457557600080fd5b60006145818686614060565b935050602061459286828701613fcb565b92505060406141eb8682870161404a565b60006145af83836145f2565b505060200190565b60006145c38383615397565b505060c00190565b60006145af8383614830565b60006145af83836154f5565b6145ec81615aad565b82525050565b6145ec81615a81565b60006146078385615a69565b935061461282615a5c565b8060005b85811015614648576146288284615a72565b61463288826145a3565b975061463d83615a5f565b925050600101614616565b509495945050505050565b600061465e82615a65565b6146688185615a69565b935061467383615a5f565b8060005b8381101561464857815161468b88826145a3565b975061469683615a5f565b925050600101614677565b60006146ac82615a65565b6146b68185615a69565b93506146c183615a5f565b8060005b838110156146485781516146d988826145a3565b97506146e483615a5f565b9250506001016146c5565b60006146fa82615a65565b6147048185615a69565b935061470f83615a5f565b8060005b8381101561464857815161472788826145b7565b975061473283615a5f565b925050600101614713565b600061474882615a65565b6147528185615a69565b935061475d83615a5f565b8060005b8381101561464857815161477588826145b7565b975061478083615a5f565b925050600101614761565b600061479682615a65565b6147a08185615a69565b93506147ab83615a5f565b8060005b838110156146485781516147c388826145cb565b97506147ce83615a5f565b9250506001016147af565b60006147e482615a65565b6147ee8185615a69565b93506147f983615a5f565b8060005b8381101561464857815161481188826145d7565b975061481c83615a5f565b9250506001016147fd565b6145ec81615a8c565b6145ec81615a5c565b600061484482615a65565b61484e8185613780565b935061485e818560208601615aca565b9290920192915050565b6145ec81615ab4565b6145ec81615abf565b600061488582615a65565b61488f8185615a69565b935061489f818560208601615aca565b6148a881615af6565b9093019392505050565b60006148bf601583615a69565b744e657875732061646472657373206973207a65726f60581b815260200192915050565b60006148f0601483615a69565b7314185d5cd8589b194e881b9bdd081c185d5cd95960621b815260200192915050565b6000614920601583615a69565b7409aeae6e840c4ca40c6c2d8d8cac840c4f240da92f605b1b815260200192915050565b6000614951600e83613780565b6d29b0bb34b733b9a6b0b730b3b2b960911b8152600e0192915050565b600061497b601983615a69565b7f4d757374206d69677261746520736f6d65206241737365747300000000000000815260200192915050565b60006149b4601a83615a69565b7f456d707479206241737365747320617272617920706173736564000000000000815260200192915050565b60006149ed600783613780565b665374616b696e6760c81b815260070192915050565b6000614a10601b83615a69565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000614a49601c83615a69565b7f417373657420776569676874206d757374206265203c3d203130302500000000815260200192915050565b6000614a82601583615a69565b74624173736574206d7573742062652061637469766560581b815260200192915050565b6000614ab3602283615a69565b7f4e6f20624173736574732063616e20626520756e646572676f696e67207265638152611bdb60f21b602082015260400192915050565b6000614af7601a83615a69565b7f624173736574207661756c74206d75737420626520656d707479000000000000815260200192915050565b6000614b30601083613780565b6f2932b1b7b63630ba32b930b634b9b2b960811b815260100192915050565b6000614b5c602083615a69565b7f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815260200192915050565b6000614b95600f83615a69565b6e4d4d206f7574206f662072616e676560881b815260200192915050565b6000614bc0601783615a69565b7f624173736574206d757374206265206166666563746564000000000000000000815260200192915050565b6000614bf9601b83615a69565b7f624173736574206d75737420657869737420696e204261736b65740000000000815260200192915050565b6000614c32601983615a69565b7f4d757374207472616e736665722066756c6c20616d6f756e7400000000000000815260200192915050565b6000614c6b601b83615a69565b7f4d757374206265206d616e61676572206f7220676f7665726e6f720000000000815260200192915050565b6000614ca4601983615a69565b7f4f6e6c7920676f7665726e6f722063616e206578656375746500000000000000815260200192915050565b6000614cdd602483615a69565b7f43616e6e6f74206d6967726174652062417373657473207769746820786665728152632066656560e01b602082015260400192915050565b6000614d23601083615a69565b6f14185d5cd8589b194e881c185d5cd95960821b815260200192915050565b6000614d4f600783613780565b6626b0b730b3b2b960c91b815260070192915050565b6000614d72601583615a69565b7413585e0818905cdcd95d1cc81a5b8810985cdad95d605a1b815260200192915050565b6000614da3602983615a69565b7f546f6b656e206d75737420686176652073756666696369656e7420646563696d815268616c20706c6163657360b81b602082015260400192915050565b6000614dee601f83615a69565b7f62417373657420616c72656164792065786973747320696e204261736b657400815260200192915050565b6000614e27600983613780565b6827b930b1b632a43ab160b91b815260090192915050565b6000614e4c602183615a69565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614e8f601183615a69565b7018905cdcd95d081b5d5cdd08195e1a5cdd607a1b815260200192915050565b6000614ebc600a83613780565b69476f7665726e616e636560b01b8152600a0192915050565b6000614ee2601c83615a69565b7f6241737365742061646472657373206d7573742062652076616c696400000000815260200192915050565b6000614f1b600a83613780565b69283937bc3ca0b236b4b760b11b8152600a0192915050565b6000614f41601f83615a69565b7f41666665637465642062417373657473206d7573742062652073746174696300815260200192915050565b6000614f7a602e83615a69565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614fca601783615a69565b7f4d7573742068617665206e6f206475706c696361746573000000000000000000815260200192915050565b6000615003601483615a69565b734261736b6574206d75737420626520616c69766560601b815260200192915050565b6000615033601e83615a69565b7f4d757374206265206d61746368696e6720624173736574206172726179730000815260200192915050565b600061506c602183615a69565b7f4d75737420696e697469616c697365207769746820736f6d65206241737365748152607360f81b602082015260400192915050565b60006150af602a83615a69565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b60006150fb601383615a69565b726d49782061646472657373206973207a65726f60681b815260200192915050565b600061512a601f83615a69565b7f4d757374207472616e7366657220746f206e657720696e7465677261746f7200815260200192915050565b6000615163601583615a69565b7418905cdcd95d08191bd95cc81b9bdd08195e1a5cdd605a1b815260200192915050565b6000615194601f83615a69565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b60006151cd602183615a69565b7f496e746567726174696f6e2061646472657373206d7573742062652076616c698152601960fa1b602082015260400192915050565b6000615210602783615a69565b7f4261736b657420776569676874206d757374206265203e3d20313030202626208152663c3d203430302560c81b602082015260400192915050565b6000615259600983613780565b682134b6322a37b5b2b760b91b815260090192915050565b600061527e601f83615a69565b7f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400815260200192915050565b60006152b7602583615a69565b7f624173736574206d7573742068617665206120746172676574207765696768748152640206f6620360dc1b602082015260400192915050565b805160a080845260009190840190615309828261473d565b915050602083015161531e60208601826154f5565b5060408301516153316040860182614827565b5060608301516153446060860182614827565b5060808301516153576080860182614830565b509392505050565b80516101008301906153718482615397565b50602082015161538460c08501826145f2565b5060408201516106c860e08501826154f5565b805160c08301906153a884826145f2565b5060208201516153bb6020850182614871565b5060408201516153ce6040850182614827565b5060608201516153e16060850182614830565b5060808201516153f46080850182614830565b5060a08201516106c860a0850182614830565b8051600090608084019061541b8582614827565b5060208301518482036020860152615433828261473d565b9150506040830151848203604086015261544d82826146a1565b91505060608301518482036060860152613c2482826147d9565b8051600090608084019061541b8582614830565b805160009060a084019061548f8582614827565b50602083015184820360208601526154a7828261473d565b915050604083015184820360408601526154c1828261473d565b915050606083015184820360608601526154db82826146a1565b91505060808301518482036080860152613c2482826147d9565b6145ec81615aa7565b60006135408284614839565b6000611ad182614944565b6000611ad1826149e0565b6000611ad182614b23565b6000611ad182614d42565b6000611ad182614e1a565b6000611ad182614eaf565b6000611ad182614f0e565b6000611ad18261524c565b60208101611ad182846145f2565b60208101611ad182846145e3565b6060810161558c82866145f2565b61559960208301856145f2565b61054c6040830184614830565b608081016155b482876145f2565b6155c160208301866145f2565b6155ce6040830185614830565b613c246060830184614827565b604081016155e982856145f2565b6135406020830184614830565b6060810161560482866145f2565b6156116020830185614830565b61054c6040830184614827565b604080825281016156308185876145fb565b905061054c60208301846145f2565b604080825281016156508185614653565b9050818103602083015261054c818461478b565b6040808252810161567581856146ef565b90506135406020830184614830565b60208101611ad18284614827565b61024081016156a18287614827565b81810360208301526156b3818661487a565b90506156c2604083018561535f565b613c2461014083018461535f565b61012081016156df8285614827565b613540602083018461535f565b60208101611ad18284614830565b60208101611ad18284614868565b60208101611ad18284614871565b60208082528101613540818461487a565b60208082528101611ad1816148b2565b60208082528101611ad1816148e3565b60208082528101611ad181614913565b60208082528101611ad18161496e565b60208082528101611ad1816149a7565b60208082528101611ad181614a03565b60208082528101611ad181614a3c565b60208082528101611ad181614a75565b60208082528101611ad181614aa6565b60208082528101611ad181614aea565b60208082528101611ad181614b4f565b60208082528101611ad181614b88565b60208082528101611ad181614bb3565b60208082528101611ad181614bec565b60208082528101611ad181614c25565b60208082528101611ad181614c5e565b60208082528101611ad181614c97565b60208082528101611ad181614cd0565b60208082528101611ad181614d16565b60208082528101611ad181614d65565b60208082528101611ad181614d96565b60208082528101611ad181614de1565b60208082528101611ad181614e3f565b60208082528101611ad181614e82565b60208082528101611ad181614ed5565b60208082528101611ad181614f34565b60208082528101611ad181614f6d565b60208082528101611ad181614fbd565b60208082528101611ad181614ff6565b60208082528101611ad181615026565b60208082528101611ad18161505f565b60208082528101611ad1816150a2565b60208082528101611ad1816150ee565b60208082528101611ad18161511d565b60208082528101611ad181615156565b60208082528101611ad181615187565b60208082528101611ad1816151c0565b60208082528101611ad181615203565b60208082528101611ad181615271565b60208082528101611ad1816152aa565b6020808252810161354081846152f1565b60c08101611ad18284615397565b602080825281016135408184615407565b602080825281016135408184615467565b60208082528101613540818461547b565b60408101615a078285614830565b818103602083015261054c818461478b565b60208101611ad182846154f5565b60808101615a3582876154f5565b615a426020830186614827565b615a4f6040830185614827565b613c246060830184614830565b90565b60200190565b5190565b90815260200190565b60006135406020840184613fcb565b6000611ad182615a9b565b151590565b8061378081615b00565b6001600160a01b031690565b60ff1690565b6000611ad1825b6000611ad182615a81565b6000611ad182615a91565b60005b83811015615ae5578181015183820152602001615acd565b838111156106c85750506000910152565b601f01601f191690565b600881106105f757fe5b615b1381615a81565b81146105f757600080fd5b615b1381615a8c565b600881106105f757600080fd5b615b1381615a5c565b615b1381615aa756fea365627a7a72315820f3b5142477d1b96a36d409923a73f2e176c3d8dad8562ceeaeaa8e59da88c5606c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "4246:366:73:-;;;612:28:57;;;-1:-1:-1;;;;612:28:57;;;4246:366:73;5:2:-1;;;;30:1;27;20:12;5:2;4246:366:73;;;;;;;",
  "deployedSourceMap": "4246:366:73:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4246:366:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9976:378:19;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16127:192;;;;;;;;;:::i;:::-;;12761:237;;;;;;;;;:::i;28000:182::-;;;:::i;:::-;;;;;;;;;7800:1605;;;:::i;:::-;;;;;;;;;22259:1421;;;;;;;;;:::i;:::-;;;;;;;;;;;28355:262;;;;;;;;;:::i;:::-;;;;;;;;1883:119:57;;;:::i;25652:682:19:-;;;:::i;:::-;;;;;;;;1507:78:57;;;:::i;:::-;;;;;;;;6432:325:19;;;;;;;;;:::i;4297:66:73:-;;;:::i;18137:2700:19:-;;;;;;;;;:::i;2249:29::-;;;;;;;;;:::i;:::-;;;;;;;;1676:117:57;;;:::i;6972:477:19:-;;;;;;;;;:::i;31326:756::-;;;;;;;;;:::i;32200:582::-;;;;;;;;;:::i;23979:632::-;;;;;;;;;:::i;:::-;;;;;;;;444:19:54;;;:::i;:::-;;;;;;;;32908:472:19;;;;;;;;;:::i;15262:639::-;;;;;;;;;:::i;21434:500::-;;;;;;;;;:::i;:::-;;;;;;;;;24780:640;;;;;;;;;:::i;:::-;;;;;;;;28812:276;;;;;;;;;:::i;21068:116::-;;;:::i;:::-;;;;;;;;5716:505;;;;;;;;;:::i;5086:353::-;;;;;;;;;:::i;4369:240:73:-;;;;;;;;;:::i;2055:20:19:-;;;:::i;:::-;;;;;;;;;;;1993:18;;;:::i;2884:970::-;;;;;;;;;:::i;9976:378::-;10170:11;611::54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;4183:22;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;10205:142;10229:7;10250:12;10276:26;:24;:26::i;:::-;10316:21;10205:10;:142::i;:::-;10197:150;9976:378;-1:-1:-1;;;;9976:378:19:o;16127:192::-;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;4183:22;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;16283:29;16297:14;16283:13;:29::i;:::-;16127:192;:::o;12761:237::-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;12947:44;12965:8;;12947:44;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;12947:44:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12975:8:19;;-1:-1:-1;12975:8:19;;;;12947:44;;;12975:8;;12947:44;12975:8;12947:44;1:33:-1;99:1;81:16;;74:27;;;-1:-1;99:1;-1:-1;12947:17:19;;-1:-1:-1;;12947:44:19:i;:::-;12761:237;;;;:::o;28000:182::-;28082:23;28119:11;28162:13;:11;:13::i;:::-;28155:20;;;;28000:182;;:::o;7800:1605::-;4630:3;;7948:25;;7975:22;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;3992:13:19;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;8044:26:19;2091:5:58;8089:13:19;:11;:13::i;:::-;8043:59;;;;8134:5;8120:20;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;8120:20:19;-1:-1:-1;8170:1:19;;-1:-1:-1;8112:28:19;-1:-1:-1;8170:1:19;8208:1191;8229:5;8225:1;:9;;;8208:1191;;;8255:15;;:::i;:::-;8273:10;8284:1;8273:13;;;;;;;;;;;;;;;;8255:31;;8300:14;8317:1;:6;;;8300:23;;8424:19;8446:12;8459:1;8446:15;;;;;;;;;;;;;;;;;;;8493:54;;-1:-1:-1;;;8493:54:19;;-1:-1:-1;;;;;8446:15:19;;;;-1:-1:-1;8446:15:19;;8493:46;;:54;;8540:6;;8493:54;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8493:54:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8493:54:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8493:54:19;;;;;;;;;8597:22;;;;8475:72;;-1:-1:-1;8561:13:19;;8592:107;;8647:37;;-1:-1:-1;;;8647:37:19;;-1:-1:-1;;;;;8647:24:19;;;;;:37;;8672:11;;8647:37;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8647:37:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8647:37:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8647:37:19;;;;;;;;;8639:45;;8592:107;8712:15;8730:18;:7;8742:5;8730:18;:11;:18;:::i;:::-;8789:14;;;;8712:36;;-1:-1:-1;8873:25:19;;;:60;;;;-1:-1:-1;8914:19:19;8902:1;:8;;;:31;;;;;;;;;8873:60;8870:519;;;9020:7;8987:6;:14;;9002:1;8987:17;;;;;;;;;;;;;;;;;:30;:17;;;;;:30;:40;;;;9070:28;:7;9082:15;9070:28;:11;:28;:::i;:::-;9046:52;;9127:13;9116:5;9122:1;9116:8;;;;;;;;;;;;;;;:24;;;;;9188:20;9211:39;9242:1;:7;;;9211:13;:30;;:39;;;;:::i;:::-;9188:62;-1:-1:-1;9288:35:19;:17;9188:62;9288:35;:21;:35;:::i;:::-;9268:55;;8870:519;;;;;9373:1;9362:5;9368:1;9362:8;;;;;;;;;;;;;;;:12;;;;;8870:519;-1:-1:-1;;8236:3:19;;;;;-1:-1:-1;8208:1191:19;;-1:-1:-1;;;;8208:1191:19;;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;7800:1605:19;;:::o;22259:1421::-;22403:4;22409:13;22424:20;;:::i;:::-;22446;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;22482:26:19;;:::i;:::-;22518:27;;:::i;:::-;22604:13;;;;;;;;:39;;-1:-1:-1;22621:22:19;;;;;;;22604:39;22601:128;;;22658:60;;;;;;;;;;;;;;;;;22666:5;;-1:-1:-1;22658:60:19;-1:-1:-1;22704:5:19;;-1:-1:-1;22711:6:19;-1:-1:-1;22658:60:19;;22601:128;22770:16;22788:14;22806:24;22823:6;22806:16;:24::i;:::-;22769:61;;;;22844:11;22840:101;;-1:-1:-1;;22871:59:19;;;;;;;;;;;;;;;;;22879:5;;-1:-1:-1;22871:59:19;-1:-1:-1;22916:5:19;;-1:-1:-1;22923:6:19;-1:-1:-1;22871:59:19;;22840:101;22958:148;;;;;;;;22994:6;:14;;23009:8;22994:24;;;;;;;;;;;;;;;;;;;22958:148;;;;;;;;;22994:24;;;;;22958:148;;-1:-1:-1;;;;;22958:148:19;;;;;;22994:24;;22958:148;;;;;-1:-1:-1;;;22958:148:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23044:12;23057:8;23044:22;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23044:22:19;22958:148;;;;;;;;22950:156;-1:-1:-1;23175:69:19;;;;-1:-1:-1;;23201:32:19;;;;;;;;;-1:-1:-1;23201:32:19;;23209:4;;-1:-1:-1;23201:32:19;-1:-1:-1;23219:5:19;;-1:-1:-1;23226:6:19;-1:-1:-1;23201:32:19;;23175:69;23286:17;23305:15;23324:25;23341:7;23324:16;:25::i;:::-;23285:64;;;;23363:12;23359:103;;-1:-1:-1;;23391:60:19;;;;;;;;;;;;;;;;;23399:5;;-1:-1:-1;23391:60:19;-1:-1:-1;23437:5:19;;-1:-1:-1;23444:6:19;;-1:-1:-1;23391:60:19;;-1:-1:-1;;23391:60:19;23359:103;23480:151;;;;;;;;23516:6;:14;;23531:9;23516:25;;;;;;;;;;;;;;;;;;;23480:151;;;;;;;;;23516:25;;;;;23480:151;;-1:-1:-1;;;;;23480:151:19;;;;;;23516:25;;23480:151;;;;;-1:-1:-1;;;23480:151:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23567:12;23580:9;23567:23;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23567:23:19;23480:151;;;;;;;;;;;;;23641:32;;;;;;;;;;23567:23;;-1:-1:-1;23641:32:19;;-1:-1:-1;23659:5:19;;-1:-1:-1;23471:160:19;;-1:-1:-1;;;;;832:1:57;22259:1421:19;;;;;;;:::o;28355:262::-;28438:20;;:::i;:::-;28475:11;28488;28503:25;28520:7;28503:16;:25::i;:::-;28474:54;;;;28546:6;28538:36;;;;-1:-1:-1;;;28538:36:19;;;;;;;;;28593:17;28604:5;28593:10;:17::i;1883:119:57:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;985:7:57;;-1:-1:-1;;;985:7:57;;;;977:40;;;;-1:-1:-1;;;977:40:57;;;;;;;;;1945:7;:15;;-1:-1:-1;;;;1945:15:57;;;1975:20;;;;;;1984:10;;1975:20;;;;;;;;;;1883:119::o;25652:682:19:-;25776:29;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;25822:23;25847:11;25862:13;:11;:13::i;:::-;25821:54;;;;25885:35;25937:3;25923:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25923:18:19;;25885:56;;25951:22;25988:3;25976:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25976:16:19;-1:-1:-1;25951:41:19;-1:-1:-1;26006:7:19;26002:122;26023:3;26019:1;:7;;;26002:122;;;26070:12;26083:1;26070:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26070:15:19;26046:18;26065:1;26046:21;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;26046:39:19;;;-1:-1:-1;;;;;26046:39:19;;;;;26112:1;26099:7;26107:1;26099:10;;;;;;;;;;:14;;;;:10;;;;;;;;;;;:14;26028:3;;26002:122;;;-1:-1:-1;26141:186:19;;;;;;;;26182:29;;26141:186;;;;;;;;;;;;;;;;;;;-1:-1:-1;26141:186:19;25652:682;-1:-1:-1;25652:682:19:o;1507:78:57:-;1571:7;;-1:-1:-1;;;1571:7:57;;;;;1507:78::o;6432:325:19:-;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;6688:6:19;:28;;:62;;6734:15;;2077:19:58;6688:28:19;;;;;;;;;;;;;;;;;;;:41;;;:45;;:62;;;;:::i;:::-;6632:6;:28;;;;;;;;;;;;;;;;;;;;:41;:28;;;;;:41;:118;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;6432:325:19:o;4297:66:73:-;4336:13;:20;;-1:-1:-1;;4336:20:73;;;;;4297:66::o;18137:2700:19:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;18303:8:19;18336:7;18328:45;;;;-1:-1:-1;;;18328:45:19;;;;;;;;;18388:6;18384:2389;18404:3;18400:1;:7;18384:2389;;;18484:14;18501:8;;18510:1;18501:11;;;;;;;;;;;;;;;;;;;;;;18484:28;;18527:13;18542:11;18557:24;18574:6;18557:16;:24::i;:::-;18526:55;;;;18603:8;18595:42;;;;-1:-1:-1;;;18595:42:19;;;;;;;;;18660:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;:42;-1:-1:-1;;;18660:42:19;;;;18659:43;18651:92;;;;-1:-1:-1;;;18651:92:19;;;;;;;;;18830:35;18889:12;18902:5;18889:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18889:19:19;;;;-1:-1:-1;18931:42:19;;;;;18923:86;;;;-1:-1:-1;;;18923:86:19;;;;;;;;;19039:49;;-1:-1:-1;;;19039:49:19;;19023:13;;-1:-1:-1;;;;;19039:24:19;;;;;:49;;19072:14;;19039:49;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19039:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19039:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19039:49:19;;;;;;;;;19023:65;;19155:18;19176:14;-1:-1:-1;;;;;19176:27:19;;19204:6;19176:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19176:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19176:35:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;19176:35:19;;;;;;;;;19155:56;-1:-1:-1;19228:14:19;;19225:117;;19262:65;;-1:-1:-1;;;19262:65:19;;-1:-1:-1;;;;;19262:23:19;;;;;:65;;19294:4;;19301:6;;19309:10;;19321:5;;19262:65;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19262:65:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19262:65:19;;;;19225:117;19410:9;;19407:102;;19438:56;;-1:-1:-1;;;19438:56:19;;-1:-1:-1;;;;;19438:26:19;;;;;:56;;19473:4;;19480:6;;19488:5;;19438:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19438:56:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19438:56:19;;;;19407:102;19522:13;19538:21;:10;19553:5;19538:21;:14;:21;:::i;:::-;19522:37;;19661:15;19639:12;19652:5;19639:19;;;;;;;;;;;;;;;;;;;:37;;-1:-1:-1;;;;;;19639:37:19;-1:-1:-1;;;;;19639:37:19;;;;;;19882:51;;:27;;19910:15;19927:5;19882:27;:51::i;:::-;20036:49;;-1:-1:-1;;;20036:49:19;;20006:15;;-1:-1:-1;;;;;20036:22:19;;;;;:49;;20059:6;;20067:10;;19947:35;;20036:49;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20036:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20036:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20036:49:19;;;;;;;;;-1:-1:-1;20158:35:19;;-1:-1:-1;;;20158:35:19;;20134:21;;-1:-1:-1;;;;;20158:27:19;;;;;:35;;20186:6;;20158:35;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20158:35:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20158:35:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20158:35:19;;;;;;;;;20134:59;;20207:16;20233:6;-1:-1:-1;;;;;20226:24:19;;20259:14;20226:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20226:49:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20226:49:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;20226:49:19;;;;;;;;;20207:68;-1:-1:-1;20311:8:19;20356:7;20420:35;:10;20356:7;20420:35;:22;:35;:::i;:::-;20403:13;:52;;:124;;;;-1:-1:-1;20492:35:19;:10;20515:11;20492:35;:22;:35;:::i;:::-;20475:13;:52;;20403:124;20378:195;;;;-1:-1:-1;;;20378:195:19;;;;;;;;;20624:30;:5;20642:11;20624:30;:17;:30;:::i;:::-;20612:8;:42;;:104;;;;-1:-1:-1;20686:30:19;:5;20704:11;20686:30;:17;:30;:::i;:::-;20674:8;:42;;20612:104;20587:175;;;;-1:-1:-1;;;20587:175:19;;;;;;;;;-1:-1:-1;;18409:3:19;;;;;-1:-1:-1;18384:2389:19;;-1:-1:-1;;;;;;;;;18384:2389:19;;;20788:42;20804:8;;20814:15;20788:42;;;;;;;;;;;;;;;;;662:1:54;18137:2700:19;;;:::o;2249:29::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2249:29:19;;-1:-1:-1;2249:29:19;:::o;1676:117:57:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;1739:7;:14;;-1:-1:-1;;;;1739:14:57;-1:-1:-1;;;1739:14:57;;;1768:18;;;;;;1775:10;;1768:18;;6972:477:19;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;7222:14:19;2091:5:58;7253:190:19;7273:3;7269:1;:7;7253:190;;;7362:70;7413:15;;7429:1;7413:18;;;;;;;;;;;;;7362:6;:14;;7377;;7392:1;7377:17;;;;;;;;;;;;;;;;;;;;;;7362:33;;;;;;;;;:70;7297:6;7312:14;;7327:1;7312:17;;;;;;;;;;;;;;;;;;;;;;7297:33;;;;;;;;;;;;;;;;;;:46;:33;;;;;:46;:135;7278:3;;7253:190;;;-1:-1:-1;;2251:11:58;:18;;-1:-1:-1;;;;2251:18:58;-1:-1:-1;;;2251:18:58;;;-1:-1:-1;;;;;;6972:477:19:o;31326:756::-;31470:20;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;31507:11;31520:9;31533:25;31550:7;31533:16;:25::i;:::-;31506:52;;;;;;31576:6;31568:46;;;;-1:-1:-1;;;31568:46:19;;;;;;;;;31625:22;31650:6;:14;;31665:1;31650:17;;;;;;;;;;;;;;;;;;;;:24;;-1:-1:-1;;;31650:24:19;;;;;-1:-1:-1;31721:9:19;:69;;31763:27;31721:69;;;31733:27;31721:69;31684:106;;31817:9;31804:22;;;;;;;;:9;:22;;;;;;;;;:55;;;;31830:29;31849:9;31830:18;:29::i;:::-;31801:96;;;31882:4;31875:11;;;;;;;;31801:96;31990:9;31963:6;:14;;31978:1;31963:17;;;;;;;;;;;;;;;;;;;;;:36;;-1:-1:-1;;;;31963:36:19;-1:-1:-1;;;31963:36:19;;;;;;;;;;;;;;32034:7;-1:-1:-1;;;;;32014:39:19;;32043:9;32014:39;;;;;;;;;;;;;;;32070:5;32063:12;;;;;;4040:1;31326:756;;;;:::o;32200:582::-;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;32300:11;32313:9;32326:25;32343:7;32326:16;:25::i;:::-;32299:52;;;;;;32369:6;32361:36;;;;-1:-1:-1;;;32361:36:19;;;;;;;;;32408:26;32437:6;:14;;32452:1;32437:17;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;32437:24:19;;;;;-1:-1:-1;32491:27:19;32474:13;:44;;;;;;;;;:104;;;-1:-1:-1;32551:27:19;32534:13;:44;;;;;;;;;32474:104;:161;;;-1:-1:-1;32611:24:19;32594:13;:41;;;;;;;;;32474:161;32471:305;;;32678:19;32651:6;:14;;32666:1;32651:17;;;;;;;;;;;;;;;;;;;;;:46;;-1:-1:-1;;;;32651:46:19;-1:-1:-1;;;32651:46:19;;;;;;;;;;;;;;32736:7;-1:-1:-1;;;;;32716:49:19;;32745:19;32716:49;;;;;;;;;;;;;;;4510:1;;;32200:582;:::o;23979:632::-;24198:28;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;24325:23;24350:22;24374:28;24406;24425:8;;24406:28;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;24406:18:19;;-1:-1:-1;;;24406:28:19:i;:::-;24452:152;;;;;;;;24491:4;24452:152;;;;;;;;;;;;;;;;;23979:632;-1:-1:-1;;;;;;;;;23979:632:19:o;444:19:54:-;;;-1:-1:-1;;;;;444:19:54;;:::o;32908:472:19:-;611:11:54;:9;:11::i;:::-;-1:-1:-1;;;;;597:25:54;:10;-1:-1:-1;;;;;597:25:54;;589:63;;;;-1:-1:-1;;;589:63:54;;;;;;;;;32998:11:19;33011:9;33024:25;33041:7;33024:16;:25::i;:::-;32997:52;;;;;;33067:6;33059:36;;;;-1:-1:-1;;;33059:36:19;;;;;;;;;33106:26;33135:6;:14;;33150:1;33135:17;;;;;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;33135:24:19;;;;;-1:-1:-1;33207:27:19;33190:13;:44;;;;;;;;;:104;;;-1:-1:-1;33267:27:19;33250:13;:44;;;;;;;;;33190:104;33169:174;;;;-1:-1:-1;;;33169:174:19;;;;;;;;;-1:-1:-1;;33353:13:19;:20;;-1:-1:-1;;33353:20:19;;;;;-1:-1:-1;;32908:472:19:o;15262:639::-;4417:10;4403;:8;:10::i;:::-;-1:-1:-1;;;;;4403:24:19;;:53;;;-1:-1:-1;4446:10:19;4431:11;:9;:11::i;:::-;-1:-1:-1;;;;;4431:25:19;;4403:53;4382:118;;;;-1:-1:-1;;;4382:118:19;;;;;;;;;15378:10;15390:11;15405:25;15422:7;15405:16;:25::i;:::-;15377:53;;;;15448:5;15440:39;;;;-1:-1:-1;;;15440:39:19;;;;;;;;;15534:5;15489:6;:14;;15504:5;15489:21;;;;;;;;;;;;;;;;;;;;;;;:50;;;;;-1:-1:-1;;;15489:50:19;-1:-1:-1;;;;15489:50:19;;;;;;;;;15550:295;;;;15648:11;15669:7;-1:-1:-1;;;;;15662:25:19;;15688:12;15701:5;15688:19;;;;;;;;;;;;;;;;;;;;15662:46;;-1:-1:-1;;;;;;15662:46:19;;;;;;;;;-1:-1:-1;;;;;15688:19:19;;15662:46;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15662:46:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15662:46:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15662:46:19;;;;;;;;;15648:60;-1:-1:-1;15725:7:19;;15722:113;;15772:12;15785:5;15772:19;;;;;;;;;;;;;;;;;;;;15751:69;;-1:-1:-1;;;15751:69:19;;-1:-1:-1;;;;;15772:19:19;;;;15751:49;;:69;;15801:7;;15810:3;;15772:19;;15751:69;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15751:69:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15751:69:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15751:69:19;;;;;;;;;;15722:113;15550:295;;15879:7;-1:-1:-1;;;;;15860:34:19;;15888:5;15860:34;;;;;;;21434:500;21594:12;21608:26;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;21651:11;21664:9;21677:25;21694:7;21677:16;:25::i;:::-;21650:52;;;;21720:6;21712:40;;;;-1:-1:-1;;;21712:40:19;;;;;;;;;21772:4;21762:14;;21794:133;;;;;;;;21830:6;:14;;21845:3;21830:19;;;;;;;;;;;;;;;;;;;21794:133;;;;;;;;;21830:19;;;;;21794:133;;-1:-1:-1;;;;;21794:133:19;;;;;;21830:19;;21794:133;;;;;-1:-1:-1;;;21794:133:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21875:12;21888:3;21875:17;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21875:17:19;21794:133;;;;;;;;;;;;21434:500;;21786:141;;-1:-1:-1;21434:500:19;;-1:-1:-1;;;;21434:500:19:o;24780:640::-;24975:24;;:::i;:::-;794:7:57;;-1:-1:-1;;;794:7:57;;;;793:8;785:37;;;;-1:-1:-1;;;785:37:57;;;;;;;;;4183:22:19;;;;;;;4182:23;4174:70;;;;-1:-1:-1;;;4174:70:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;25098:23;25123:22;25147:28;25179;25198:8;;25179:28;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;25179:18:19;;-1:-1:-1;;;25179:28:19:i;:::-;25097:110;;;;;;25225:188;;;;;;;;25260:4;25225:188;;;;;;25290:6;:14;;25225:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25225:188:19;;;;;;;;;;;;-1:-1:-1;;;25225:188:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25327:7;25225:188;;;;25361:11;25225:188;;;;25395:7;25225:188;;;25217:196;;4040:1;;;24780:640;;;;:::o;28812:276::-;28905:18;28940:11;28953;28968:25;28985:7;28968:16;:25::i;:::-;28939:54;;;;29011:6;29003:36;;;;-1:-1:-1;;;29003:36:19;;;;;;;;;29062:12;29075:5;29062:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29062:19:19;;28812:276;-1:-1:-1;;;;28812:276:19:o;21068:116::-;21136:15;;:::i;:::-;21167:10;;;21171:6;21167:10;;;;;;;;;;;;;;;;;;;;;21171:6;;21167:10;;;;21171:6;;-1:-1:-1;;21167:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21167:10:19;;;;;;;;;;;;-1:-1:-1;;;21167:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21167:10:19;;;-1:-1:-1;21167:10:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21068:116;-1:-1:-1;21068:116:19:o;5716:505::-;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;5994:14:19;2091:5:58;6025:190:19;6045:3;6041:1;:7;6025:190;;;6134:70;6185:15;;6201:1;6185:18;;;;;;;;;;;;;6134:6;:14;;6149;;6164:1;6149:17;;;;;;;;;;;;;;;;;;;;;;6134:33;;;;;;;;;;;;;;;;;;;;:46;;;:50;;:70;;;;:::i;:::-;6069:6;6084:14;;6099:1;6084:17;;;;;;;;;;;;;;;;;;;;;;6069:33;;;;;;;;;;;;;;;;;;:46;:33;;;;;:46;:135;6050:3;;6025:190;;5086:353;4630:3;;-1:-1:-1;;;;;4630:3:19;4637:10;4630:17;4622:51;;;;-1:-1:-1;;;4622:51:19;;;;;;;;;3992:13;;;;;;;3991:14;3983:47;;;;-1:-1:-1;;;3983:47:19;;;;;;;;;1955:11:58;;-1:-1:-1;;;1955:11:58;;;;1947:55;;;;-1:-1:-1;;;1947:55:58;;;;;;;;;2077:11;:19;;-1:-1:-1;;;;2077:19:58;;;5370:6:19;:28;;:62;;5416:15;;2077:19:58;5370:28:19;;;;;;;;4369:240:73;4451:11;4464;4479:25;4496:7;4479:16;:25::i;:::-;4450:54;;;;4522:6;4514:40;;;;-1:-1:-1;;;4514:40:73;;;;;;;;;4595:7;4564:6;:14;;4579:5;4564:21;;;;;;;;;;;;;;;;;;;;;;;:38;;-1:-1:-1;;;;4564:38:73;-1:-1:-1;;;4564:38:73;;;;;;;;;;;;;;4369:240;;;;:::o;2055:20:19:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1993:18::-;;;-1:-1:-1;;;;;1993:18:19;;:::o;2884:970::-;1024:12:127;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:127;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:127;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:127;;;;;1225:18;1213:4;1225:18;;;1170:80;3164:42:19;:40;:42::i;:::-;3216:47;3256:6;3216:39;:47::i;:::-;-1:-1:-1;;;;;3282:18:19;;3274:50;;;;-1:-1:-1;;;3274:50:19;;;;;;;;;3342:19;3334:65;;;;-1:-1:-1;;;3334:65:19;;;;;;;;;3409:3;:10;;-1:-1:-1;;;;;3409:10:19;;-1:-1:-1;;;;;;3409:10:19;;;;;;3450:17;:22;;-1:-1:-1;;3450:22:19;3470:2;3450:22;;;3534:4;3502:29;:36;3409:3;3557:238;3577:19;;;3557:238;;;3617:167;3645:8;;3654:1;3645:11;;;;;;;;;;;;;;;;;;;;;;3674:12;;3687:1;3674:15;;;;;;;;;;;;;;;;;;;;;;3707:26;:24;:26::i;:::-;3751:16;;3768:1;3751:19;;;;;;;;;;;;;;;;;;;;;;3617:10;:167::i;:::-;-1:-1:-1;3598:3:19;;3557:238;;;;3804:43;3822:8;;3804:43;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3804:43:19;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3832:8:19;;-1:-1:-1;3832:8:19;;;;3804:43;;;3832:8;;3804:43;3832:8;3804:43;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3842:4:19;;-1:-1:-1;3804:17:19;;-1:-1:-1;;3804:43:19:i;:::-;1268:14:127;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:127;;;1264:55;2884:970:19;;;;;;;;;;;:::o;1905:93:54:-;1975:5;;:16;;;-1:-1:-1;;;1975:16:54;;;;1949:7;;-1:-1:-1;;;;;1975:5:54;;:14;;:16;;;;;;;;;;;;;;:5;:16;;;5:2:-1;;;;30:1;27;20:12;5:2;1975:16:54;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1975:16:54;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1975:16:54;;;;;;;;;1968:23;;1905:93;:::o;1390:92:65:-;1046:3;1390:92;:::o;10914:1618:19:-;11103:11;-1:-1:-1;;;;;11138:21:19;;11130:62;;;;-1:-1:-1;;;11130:62:19;;;;;;;;;-1:-1:-1;;;;;11210:26:19;;11202:72;;;;-1:-1:-1;;;11202:72:19;;;;;;;;;11316:3;11292:20;:27;;:59;;;;;11347:4;11323:20;:28;;11292:59;11284:87;;;;-1:-1:-1;;;11284:87:19;;;;;;;;;11383:20;11409:25;11426:7;11409:16;:25::i;:::-;11382:52;;;11453:15;11452:16;11444:60;;;;-1:-1:-1;;;11444:60:19;;;;;;;;;11673:56;;-1:-1:-1;;;11673:56:19;;-1:-1:-1;;;;;11673:47:19;;;;;:56;;11721:7;;11673:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11673:56:19;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11673:56:19;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11673:56:19;;;;;;;;;;11740:23;11766:34;11792:7;11766:25;:34::i;:::-;11740:60;-1:-1:-1;11810:13:19;11826:32;11834:2;11740:60;11826:32;:15;:32;:::i;:::-;11810:48;-1:-1:-1;11869:13:19;11885:37;:20;11910:2;:11;;;11885:37;:24;:37;:::i;:::-;11971:6;:21;12037:17;;11869:53;;-1:-1:-1;11971:21:19;12037:17;;;;12011:43;;;;12003:77;;;;-1:-1:-1;;;12003:77:19;;;;;;;;;-1:-1:-1;;;;;12091:19:19;;;;;;;:10;:19;;;;;;;:45;;-1:-1:-1;;12091:45:19;;;;;;;12147:12;27:10:-1;;-1:-1;23:18;;;45:23;;12147:31:19;;;;;;;;;;-1:-1:-1;;;;;;12147:31:19;;;;;;;;;;;12208:224;;;;;;;;;;;12188:6;;12208:224;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12208:224:19;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;12188:245:19;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12188:245:19;-1:-1:-1;;;;;12188:245:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12188:245:19;-1:-1:-1;;;12188:245:19;;;;;;;;;;;;;-1:-1:-1;12188:245:19;;;;;;;;;;-1:-1:-1;;;12188:245:19;-1:-1:-1;;;;12188:245:19;;;;;;;;;;-1:-1:-1;12188:245:19;;;;;;;;;;;;;;;;;;;;;12449:34;-1:-1:-1;;;;;12449:34:19;;;-1:-1:-1;12449:34:19;;;;12470:12;;12449:34;;;;;;;;;;12502:23;10914:1618;-1:-1:-1;;;;;;;;;10914:1618:19:o;3354:104:54:-;3423:5;;3439:11;;3423:28;;-1:-1:-1;;;3423:28:54;;3397:7;;-1:-1:-1;;;;;3423:5:54;;:15;;:28;;3439:11;3423:28;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;16544:1231:19;16611:11;16624;16639:32;16656:14;16639:16;:32::i;:::-;16610:61;;;;16689:6;16681:40;;;;-1:-1:-1;;;16681:40:19;;;;;;;;;16746:6;:21;16777:20;;:::i;:::-;16800:6;:21;;;;;;;;;;;;;;;;;;;;;16777:44;;;;;;;;;16800:21;;;;;16777:44;;-1:-1:-1;;;;;16777:44:19;;;;;;16800:21;;16777:44;;;;;-1:-1:-1;;;16777:44:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16777:44:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16840:16;;;;;-1:-1:-1;16840:21:19;16832:71;;;;-1:-1:-1;;;16832:71:19;;;;;;;;;16921:19;;;;:24;16913:63;;;;-1:-1:-1;;;16913:63:19;;;;;;;;;17011:24;16994:6;:13;;;:41;;;;;;;;;;16986:75;;;;-1:-1:-1;;;16986:75:19;;;;;;;;;17072:15;17096:10;:3;17104:1;17096:10;:7;:10;:::i;:::-;17072:35;;17129:9;17120:18;;:5;:18;;;17117:610;;;17154:6;:20;;;;;;;;;;;;;;;;-1:-1:-1;;17154:20:19;;;;;;;;;-1:-1:-1;;;;;;17154:20:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17188:26:19;;;;:10;:26;;;;;;:30;;-1:-1:-1;;17188:30:19;;;17232:12;:18;;;;;;;;;;;;;;;;-1:-1:-1;;17232:18:19;;;;;-1:-1:-1;;;;;;17232:18:19;;;;;;17117:610;;;17337:6;:25;;;;;;;;;;;;;;;;;;;;;;17313:6;:14;;17328:5;17313:21;;;;;;;;;;;;;;;;;;:49;;:21;;;;;:49;;-1:-1:-1;;;;;;17313:49:19;-1:-1:-1;;;;;17313:49:19;;;;;;;;;;;;;-1:-1:-1;;;17313:49:19;;;;;;:21;;-1:-1:-1;;;;17313:49:19;;;;;;;;;;;;;;;;;-1:-1:-1;17313:49:19;;;;-1:-1:-1;;;;17313:49:19;-1:-1:-1;;;17313:49:19;;;;;;;;;;;;;;-1:-1:-1;17313:49:19;;;;;;;;;;;;;;;;;;;;;;;;;17376:6;:20;;;;;;;;;;;;;;;-1:-1:-1;;17376:20:19;;;;;;;;;-1:-1:-1;;;;;;17376:20:19;;;;;;;;;;;;;;;;;;;;17410:27;;:::i;:::-;17440:6;:21;;;;;;;;;;;;;;;;;;;;;17410:51;;;;;;;;;17440:21;;;;;17410:51;;-1:-1:-1;;;;;17410:51:19;;;;;;17440:21;;17410:51;;;;;-1:-1:-1;;;17410:51:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;17410:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17508:26:19;;;-1:-1:-1;17508:26:19;;;;;;;;;;:30;;-1:-1:-1;;17508:30:19;;;;;;17563:18;;17552:30;;;;;;;;;:38;;;;;;;;;;;;17661:12;:23;;17563:18;;-1:-1:-1;17661:12:19;:23;;;;;;;;;;;;;;;;;;;;17639:12;:19;;-1:-1:-1;;;;;17661:23:19;;;;17639:19;;;;;;;;;;;;;;;;;;:45;;;;;-1:-1:-1;;;;;17639:45:19;;;;;-1:-1:-1;;;;;17639:45:19;;;;;;17698:12;:18;;;;;;;;;;;;;;;;-1:-1:-1;;17698:18:19;;;;;-1:-1:-1;;;;;;17698:18:19;;;;;;-1:-1:-1;17117:610:19;17756:11;;17742:26;;-1:-1:-1;;;;;17742:26:19;;;;;;17756:11;;17742:26;16544:1231;;;;;;:::o;13336:::-;13519:15;;13552;13544:54;;;;-1:-1:-1;;;13544:54:19;;;;;;;;;13631:8;:15;13616:11;:30;13608:73;;;;-1:-1:-1;;;13608:73:19;;;;;;;;;13697:9;13692:738;13716:11;13712:1;:15;13692:738;;;13749:11;13762;13777:29;13794:8;13803:1;13794:11;;;;;;;;;;;;;;13777:16;:29::i;:::-;13748:58;;;;13828:6;13820:36;;;;-1:-1:-1;;;13820:36:19;;;;;;;;;13871:20;;:::i;:::-;13894:17;13905:5;13894:10;:17::i;:::-;13871:40;;13926:20;13949:8;13958:1;13949:11;;;;;;;;;;;;;;13926:34;;13995:19;13978:36;;;;;;;;:6;:13;;;:36;;;;;;;;;13975:445;;;14079:4;14063:12;:20;;14034:119;;;;-1:-1:-1;;;14034:119:19;;;;;;;;;14205:12;14171:6;:14;;14186:5;14171:21;;;;;;;;;;;;;;;;;;;;:31;;:46;;;;13975:445;;;14301:6;:21;;;;;;;;;;;;;;;;;;;;;;:31;;;14285:12;:47;14256:149;;;;-1:-1:-1;;;14256:149:19;;;;;;;;;-1:-1:-1;;13729:3:19;;;;;-1:-1:-1;13692:738:19;;-1:-1:-1;13692:738:19;;;14444:12;14440:65;;14471:23;:21;:23::i;:::-;14520:40;14541:8;14551;14520:40;;;;;;;;29094:224;29177:23;29214:11;29260:6;:14;;29250:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29250:24:19;;;;;;;;;;;;-1:-1:-1;;;29250:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29290:6:19;:21;29250:24;;29290:21;;-1:-1:-1;29094:224:19;;-1:-1:-1;;;29094:224:19:o;834:176:116:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:116;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:116:o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;5166:177:65:-;5265:9;5297:39;5314:1;5317:5;1046:3;5297:16;:39::i;29862:379:19:-;-1:-1:-1;;;;;29999:18:19;;29951:11;29999:18;;;:10;:18;;;;;;;;;30030:10;30027:178;;30059:6;:21;30056:81;;-1:-1:-1;30113:5:19;;-1:-1:-1;30113:5:19;30105:17;;30056:81;30184:6;-1:-1:-1;;;;;30158:32:19;:6;:14;;30173:1;30158:17;;;;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;;;30158:22:19;:32;;;;;-1:-1:-1;30158:17:19;-1:-1:-1;30150:44:19;;30027:178;30222:4;;-1:-1:-1;29862:379:19;;;;:::o;29324:167::-;29411:20;;:::i;:::-;29456:6;:28;;;;;;;;;;;;;;;;;;;;;29447:37;;;;;;;;;29456:28;;;;;29447:37;;-1:-1:-1;;;;;29447:37:19;;;;;;29456:28;;29447:37;;;;;-1:-1:-1;;;29447:37:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29447:37:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29324:167:19:o;662:174:123:-;770:58;;744:85;;763:5;;-1:-1:-1;;;793:23:123;770:58;;818:2;;822:5;;770:58;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;770:58:123;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;770:58:123;;;179:29:-1;;;;160:49;;;744:18:123;:85::i;:::-;662:174;;;:::o;2257:161:65:-;2347:7;2377:34;2394:1;2397;644:4;2377:16;:34::i;30476:317:19:-;30573:4;30607:24;30596:7;:35;;;;;;;;;:85;;;-1:-1:-1;30658:23:19;30647:7;:34;;;;;;;;;30596:85;:131;;;-1:-1:-1;30708:19:19;30697:7;:30;;;;;;;;;30596:131;30593:172;;;-1:-1:-1;30750:4:19;30743:11;;30593:172;-1:-1:-1;30781:5:19;30476:317;;;;:::o;26756:1062::-;26871:23;26908:22;26944:28;26997:9;27015:8;:15;26997:34;;27065:3;27052:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;27042:27;;27107:3;27093:18;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27093:18:19;;27079:32;;27143:3;27131:16;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;27131:16:19;-1:-1:-1;27121:26:19;-1:-1:-1;27199:7:19;27195:617;27216:3;27212:7;;:1;:7;;;27195:617;;;27240:15;27258:8;27267:1;27258:11;;;;;;;;;;;;;;;;27240:29;;27383:7;27393:1;27395;27393:3;27383:13;;27379:123;27402:3;27398:7;;:1;:7;;;27379:123;;;27448:8;27457:1;27448:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27437:22:19;:7;-1:-1:-1;;;;;27437:22:19;;;27429:58;;;;-1:-1:-1;;;27429:58:19;;;;;;;;;27407:3;;27379:123;;;;27568:11;27581;27596:25;27613:7;27596:16;:25::i;:::-;27567:54;;;;27643:6;27635:36;;;;-1:-1:-1;;;27635:36:19;;;;;;;;;27698:5;27685:7;27693:1;27685:10;;;;;;;;;;:18;;;;:10;;;;;;;;;:18;27730:6;:21;;:6;;:21;;;;;;;;;;;;;;;;;;27717:34;;;;;;;;;27730:21;;;;;27717:34;;-1:-1:-1;;;;;27717:34:19;;;;;;27730:21;;27717:34;;;;;-1:-1:-1;;;27717:34:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27717:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;:7;;:10;;;;;;;;;;;;;;:34;;;;27782:12;27795:5;27782:19;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27782:19:19;27765:11;27777:1;27765:14;;;;;;;;;;-1:-1:-1;;;;;27765:36:19;;;;:14;;;;;;;;;;;:36;-1:-1:-1;;;27221:3:19;;27195:617;;;;26756:1062;;;;;;:::o;1409:498:127:-;1820:4;1864:17;1895:7;1409:498;:::o;988:479:58:-;1442:11;:18;;-1:-1:-1;;;;1442:18:58;-1:-1:-1;;;1442:18:58;;;988:479::o;1224:127:57:-;1280:39;1312:6;1280:31;:39::i;:::-;-1:-1:-1;1329:7:57;:15;;-1:-1:-1;;;;1329:15:57;;;1224:127::o;479:268:50:-;551:7;570:16;601:6;-1:-1:-1;;;;;589:28:50;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;589:30:50;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;589:30:50;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;589:30:50;;;;;;;;;570:49;;;;649:1;637:8;:13;;:31;;;;;666:2;654:8;:14;;637:31;629:85;;;;-1:-1:-1;;;629:85:50;;;;;;;;2159:459:116;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:116;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:116;;;;;;;;14669:351:19;14740:6;:21;14726:11;;14802:112;14825:3;14821:1;:7;14802:112;;;14861:42;14875:6;:14;;14890:1;14875:17;;;;;;;;;;;;;;;;;;:27;;;14861:9;:13;;:42;;;;:::i;:::-;14849:54;-1:-1:-1;14830:3:19;;14802:112;;;;14944:4;14931:9;:17;;:38;;;;;14965:4;14952:9;:17;;14931:38;14923:90;;;;-1:-1:-1;;;14923:90:19;;;;;;;;;14669:351;;:::o;1732:187:116:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:116;;;;;;;;;;-1:-1:-1;;;1888:5:116;;;1732:187::o;2880:302:65:-;2990:7;;3101:8;:1;3107;3101:8;:5;:8;:::i;:::-;3089:20;-1:-1:-1;3163:12:65;3089:20;3169:5;3163:12;:5;:12;:::i;:::-;3156:19;2880:302;-1:-1:-1;;;;;2880:302:65:o;2666:1095:123:-;3261:27;3269:5;-1:-1:-1;;;;;3261:25:123;;:27::i;:::-;3253:71;;;;-1:-1:-1;;;3253:71:123;;;;;;;;;3395:12;3409:23;3444:5;-1:-1:-1;;;;;3436:19:123;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:123;;;;3479:7;3471:52;;;;-1:-1:-1;;;3471:52:123;;;;;;;;;3538:17;;:21;3534:221;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;-1:-1:-1;;;3659:85:123;;;;;;;;1591:196:54;-1:-1:-1;;;;;1655:20:54;;1647:54;;;;-1:-1:-1;;;1647:54:54;;;;;;;;;1711:5;:22;;-1:-1:-1;;;;;;1711:22:54;-1:-1:-1;;;;;1711:22:54;;;;;1743:37;:35;:37::i;3073:130:116:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;686:610:124:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:124;;;686:610;-1:-1:-1;;686:610:124:o;1309:611:56:-;1531:23;;;;;;;;;;;;;;;1514:14;:40;1578:20;;;;;;;;;;;;;1564:11;:34;1626:23;;;;;;;;;;;;;1608:15;:41;1677:22;;;;;;;;;;;;;1660:14;:39;1723:20;;;;;;;;;;;;;1709:11;:34;1776:29;;;;;;;;;;;;;1753:20;:52;1832:22;;;;;;;;;;;;;1815:14;:39;1886:27;;;;;;;;;;;;;1864:19;:49;1309:611::o;3718:338:116:-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:116;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:116:o;4246:366:73:-;;;;;;;;;;-1:-1:-1;4246:366:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;4246:366:73;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;301:352;;;431:3;424:4;416:6;412:17;408:27;398:2;;449:1;446;439:12;398:2;-1:-1;469:20;;-1:-1;;;;;498:30;;495:2;;;541:1;538;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;618:4;610:6;606:17;596:8;592:32;589:41;586:2;;;643:1;640;633:12;586:2;391:262;;;;;;1785:124;1849:20;;1874:30;1849:20;1874:30;;1916:128;1991:13;;2009:30;1991:13;2009:30;;2051:166;2136:20;;2161:51;2136:20;2161:51;;2224:130;2291:20;;2316:33;2291:20;2316:33;;2361:134;2439:13;;2457:33;2439:13;2457:33;;2502:126;2567:20;;2592:31;2567:20;2592:31;;2635:130;2711:13;;2729:31;2711:13;2729:31;;2772:241;;2876:2;2864:9;2855:7;2851:23;2847:32;2844:2;;;2892:1;2889;2882:12;2844:2;2927:1;2944:53;2989:7;2969:9;2944:53;;3020:263;;3135:2;3123:9;3114:7;3110:23;3106:32;3103:2;;;3151:1;3148;3141:12;3103:2;3186:1;3203:64;3259:7;3239:9;3203:64;;3290:1487;;;;;;;;;;;3616:3;3604:9;3595:7;3591:23;3587:33;3584:2;;;3633:1;3630;3623:12;3584:2;3668:1;3685:53;3730:7;3710:9;3685:53;;;3675:63;;3647:97;3775:2;3793:53;3838:7;3829:6;3818:9;3814:22;3793:53;;;3783:63;;3754:98;3911:2;3900:9;3896:18;3883:32;-1:-1;;;;;3927:6;3924:30;3921:2;;;3967:1;3964;3957:12;3921:2;3995:80;4067:7;4058:6;4047:9;4043:22;3995:80;;;3985:90;;;;3862:219;4140:2;4129:9;4125:18;4112:32;-1:-1;;;;;4156:6;4153:30;4150:2;;;4196:1;4193;4186:12;4150:2;4224:80;4296:7;4287:6;4276:9;4272:22;4224:80;;;4214:90;;;;4091:219;4369:3;4358:9;4354:19;4341:33;-1:-1;;;;;4386:6;4383:30;4380:2;;;4426:1;4423;4416:12;4380:2;4454:80;4526:7;4517:6;4506:9;4502:22;4454:80;;;4444:90;;;;4320:220;4599:3;4588:9;4584:19;4571:33;-1:-1;;;;;4616:6;4613:30;4610:2;;;4656:1;4653;4646:12;4610:2;4684:77;4753:7;4744:6;4733:9;4729:22;4684:77;;;4674:87;;;;4550:217;3578:1199;;;;;;;;;;;;;;4784:485;;;;4919:2;4907:9;4898:7;4894:23;4890:32;4887:2;;;4935:1;4932;4925:12;4887:2;4970:1;4987:53;5032:7;5012:9;4987:53;;;4977:63;;4949:97;5077:2;5095:53;5140:7;5131:6;5120:9;5116:22;5095:53;;;5085:63;;5056:98;5185:2;5203:50;5245:7;5236:6;5225:9;5221:22;5203:50;;;5193:60;;5164:95;4881:388;;;;;;5276:360;;;5394:2;5382:9;5373:7;5369:23;5365:32;5362:2;;;5410:1;5407;5400:12;5362:2;5445:1;5462:53;5507:7;5487:9;5462:53;;;5452:63;;5424:97;5552:2;5570:50;5612:7;5603:6;5592:9;5588:22;5570:50;;;5560:60;;5531:95;5356:280;;;;;;5643:402;;;5782:2;5770:9;5761:7;5757:23;5753:32;5750:2;;;5798:1;5795;5788:12;5750:2;5833:1;5850:53;5895:7;5875:9;5850:53;;;5840:63;;5812:97;5940:2;5958:71;6021:7;6012:6;6001:9;5997:22;5958:71;;6052:485;;;;6187:2;6175:9;6166:7;6162:23;6158:32;6155:2;;;6203:1;6200;6193:12;6155:2;6238:1;6255:53;6300:7;6280:9;6255:53;;;6245:63;;6217:97;6345:2;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;;6544:397;;;6683:2;6671:9;6662:7;6658:23;6654:32;6651:2;;;6699:1;6696;6689:12;6651:2;6734:31;;-1:-1;;;;;6774:30;;6771:2;;;6817:1;6814;6807:12;6771:2;6845:80;6917:7;6908:6;6897:9;6893:22;6845:80;;;6835:90;;;;6713:218;6645:296;;;;;;6948:522;;;;7104:2;7092:9;7083:7;7079:23;7075:32;7072:2;;;7120:1;7117;7110:12;7072:2;7155:31;;-1:-1;;;;;7195:30;;7192:2;;;7238:1;7235;7228:12;7192:2;7266:80;7338:7;7329:6;7318:9;7314:22;7266:80;;;7256:90;;;;7134:218;7383:2;7401:53;7446:7;7437:6;7426:9;7422:22;7401:53;;7477:678;;;;;7668:2;7656:9;7647:7;7643:23;7639:32;7636:2;;;7684:1;7681;7674:12;7636:2;7719:31;;-1:-1;;;;;7759:30;;7756:2;;;7802:1;7799;7792:12;7756:2;7830:80;7902:7;7893:6;7882:9;7878:22;7830:80;;;7820:90;;;;7698:218;7975:2;7964:9;7960:18;7947:32;-1:-1;;;;;7991:6;7988:30;7985:2;;;8031:1;8028;8021:12;7985:2;8059:80;8131:7;8122:6;8111:9;8107:22;8059:80;;;7630:525;;;;-1:-1;8049:90;-1:-1;;;;7630:525;8162:797;;;;;;8367:2;8355:9;8346:7;8342:23;8338:32;8335:2;;;8383:1;8380;8373:12;8335:2;8418:31;;-1:-1;;;;;8458:30;;8455:2;;;8501:1;8498;8491:12;8455:2;8529:80;8601:7;8592:6;8581:9;8577:22;8529:80;;;8519:90;;;;8397:218;8674:2;8663:9;8659:18;8646:32;-1:-1;;;;;8690:6;8687:30;8684:2;;;8730:1;8727;8720:12;8684:2;8758:80;8830:7;8821:6;8810:9;8806:22;8758:80;;;8748:90;;;;8625:219;8875:2;8893:50;8935:7;8926:6;8915:9;8911:22;8893:50;;;8883:60;;8854:95;8329:630;;;;;;;;;8966:955;;;;;;;9207:2;9195:9;9186:7;9182:23;9178:32;9175:2;;;9223:1;9220;9213:12;9175:2;9258:31;;-1:-1;;;;;9298:30;;9295:2;;;9341:1;9338;9331:12;9295:2;9369:78;9439:7;9430:6;9419:9;9415:22;9369:78;;;9359:88;;;;9237:216;9512:2;9501:9;9497:18;9484:32;-1:-1;;;;;9528:6;9525:30;9522:2;;;9568:1;9565;9558:12;9522:2;9596:80;9668:7;9659:6;9648:9;9644:22;9596:80;;;9586:90;;;;9463:219;9741:2;9730:9;9726:18;9713:32;-1:-1;;;;;9757:6;9754:30;9751:2;;;9797:1;9794;9787:12;9751:2;9825:80;9897:7;9888:6;9877:9;9873:22;9825:80;;;9815:90;;;;9692:219;9169:752;;;;;;;;;9928:235;;10029:2;10017:9;10008:7;10004:23;10000:32;9997:2;;;10045:1;10042;10035:12;9997:2;10080:1;10097:50;10139:7;10119:9;10097:50;;10170:257;;10282:2;10270:9;10261:7;10257:23;10253:32;10250:2;;;10298:1;10295;10288:12;10250:2;10333:1;10350:61;10403:7;10383:9;10350:61;;10434:241;;10538:2;10526:9;10517:7;10513:23;10509:32;10506:2;;;10554:1;10551;10544:12;10506:2;10589:1;10606:53;10651:7;10631:9;10606:53;;10682:263;;10797:2;10785:9;10776:7;10772:23;10768:32;10765:2;;;10813:1;10810;10803:12;10765:2;10848:1;10865:64;10921:7;10901:9;10865:64;;10952:237;;11054:2;11042:9;11033:7;11029:23;11025:32;11022:2;;;11070:1;11067;11060:12;11022:2;11105:1;11122:51;11165:7;11145:9;11122:51;;11196:259;;11309:2;11297:9;11288:7;11284:23;11280:32;11277:2;;;11325:1;11322;11315:12;11277:2;11360:1;11377:62;11431:7;11411:9;11377:62;;11462:487;;;;11598:2;11586:9;11577:7;11573:23;11569:32;11566:2;;;11614:1;11611;11604:12;11566:2;11649:1;11666:51;11709:7;11689:9;11666:51;;;11656:61;;11628:95;11754:2;11772:53;11817:7;11808:6;11797:9;11793:22;11772:53;;;11762:63;;11733:98;11862:2;11880:53;11925:7;11916:6;11905:9;11901:22;11880:53;;11957:173;;12044:46;12086:3;12078:6;12044:46;;;-1:-1;;12119:4;12110:14;;12037:93;12139:261;;12268:92;12356:3;12348:6;12268:92;;;-1:-1;;12389:4;12380:14;;12261:139;12409:173;;12496:46;12538:3;12530:6;12496:46;;12591:165;;12674:42;12712:3;12704:6;12674:42;;12764:142;12855:45;12894:5;12855:45;;;12850:3;12843:58;12837:69;;;12913:103;12986:24;13004:5;12986:24;;13174:665;;13328:86;13407:6;13402:3;13328:86;;;13321:93;;13435:58;13487:5;13435:58;;;13513:7;13541:1;13526:291;13551:6;13548:1;13545:13;13526:291;;;13612:42;13647:6;13638:7;13612:42;;;13668:63;13727:3;13712:13;13668:63;;;13661:70;;13748:62;13803:6;13748:62;;;13738:72;-1:-1;;13573:1;13566:9;13526:291;;;-1:-1;13830:3;;13308:531;-1:-1;;;;;13308:531;13878:690;;14023:54;14071:5;14023:54;;;14090:86;14169:6;14164:3;14090:86;;;14083:93;;14197:56;14247:5;14197:56;;;14273:7;14301:1;14286:260;14311:6;14308:1;14305:13;14286:260;;;14378:6;14372:13;14399:63;14458:3;14443:13;14399:63;;;14392:70;;14479:60;14532:6;14479:60;;;14469:70;-1:-1;;14333:1;14326:9;14286:260;;14607:654;;14738:50;14782:5;14738:50;;;14801:76;14870:6;14865:3;14801:76;;;14794:83;;14898:52;14944:5;14898:52;;;14970:7;14998:1;14983:256;15008:6;15005:1;15002:13;14983:256;;;15075:6;15069:13;15096:63;15155:3;15140:13;15096:63;;;15089:70;;15176:56;15225:6;15176:56;;;15166:66;-1:-1;;15030:1;15023:9;14983:256;;15334:858;;15521:75;15590:5;15521:75;;;15609:107;15709:6;15704:3;15609:107;;;15602:114;;15737:77;15808:5;15737:77;;;15834:7;15862:1;15847:323;15872:6;15869:1;15866:13;15847:323;;;15939:6;15933:13;15960:105;16061:3;16046:13;15960:105;;;15953:112;;16082:81;16156:6;16082:81;;;16072:91;-1:-1;;15894:1;15887:9;15847:323;;16265:822;;16438:71;16503:5;16438:71;;;16522:97;16612:6;16607:3;16522:97;;;16515:104;;16640:73;16707:5;16640:73;;;16733:7;16761:1;16746:319;16771:6;16768:1;16765:13;16746:319;;;16838:6;16832:13;16859:105;16960:3;16945:13;16859:105;;;16852:112;;16981:77;17051:6;16981:77;;;16971:87;-1:-1;;16793:1;16786:9;16746:319;;17126:690;;17271:54;17319:5;17271:54;;;17338:86;17417:6;17412:3;17338:86;;;17331:93;;17445:56;17495:5;17445:56;;;17521:7;17549:1;17534:260;17559:6;17556:1;17553:13;17534:260;;;17626:6;17620:13;17647:63;17706:3;17691:13;17647:63;;;17640:70;;17727:60;17780:6;17727:60;;;17717:70;-1:-1;;17581:1;17574:9;17534:260;;17851:638;;17978:48;18020:5;17978:48;;;18039:74;18106:6;18101:3;18039:74;;;18032:81;;18134:50;18178:5;18134:50;;;18204:7;18232:1;18217:250;18242:6;18239:1;18236:13;18217:250;;;18309:6;18303:13;18330:59;18385:3;18370:13;18330:59;;;18323:66;;18406:54;18453:6;18406:54;;;18396:64;-1:-1;;18264:1;18257:9;18217:250;;18497:94;18564:21;18579:5;18564:21;;18709:113;18792:24;18810:5;18792:24;;18829:356;;18957:38;18989:5;18957:38;;;19007:88;19088:6;19083:3;19007:88;;;19000:95;;19100:52;19145:6;19140:3;19133:4;19126:5;19122:16;19100:52;;;19164:16;;;;;18937:248;-1:-1;;18937:248;19192:156;19290:52;19336:5;19290:52;;19355:148;19444:53;19491:5;19444:53;;19675:347;;19787:39;19820:5;19787:39;;;19838:71;19902:6;19897:3;19838:71;;;19831:78;;19914:52;19959:6;19954:3;19947:4;19940:5;19936:16;19914:52;;;19987:29;20009:6;19987:29;;;19978:39;;;;19767:255;-1:-1;;;19767:255;20030:321;;20190:67;20254:2;20249:3;20190:67;;;-1:-1;;;20270:44;;20342:2;20333:12;;20176:175;-1:-1;;20176:175;20360:320;;20520:67;20584:2;20579:3;20520:67;;;-1:-1;;;20600:43;;20671:2;20662:12;;20506:174;-1:-1;;20506:174;20689:321;;20849:67;20913:2;20908:3;20849:67;;;-1:-1;;;20929:44;;21001:2;20992:12;;20835:175;-1:-1;;20835:175;21019:350;;21197:85;21279:2;21274:3;21197:85;;;-1:-1;;;21295:37;;21360:2;21351:12;;21183:186;-1:-1;;21183:186;21378:325;;21538:67;21602:2;21597:3;21538:67;;;21638:27;21618:48;;21694:2;21685:12;;21524:179;-1:-1;;21524:179;21712:326;;21872:67;21936:2;21931:3;21872:67;;;21972:28;21952:49;;22029:2;22020:12;;21858:180;-1:-1;;21858:180;22047:341;;22225:84;22307:1;22302:3;22225:84;;;-1:-1;;;22322:30;;22380:1;22371:11;;22211:177;-1:-1;;22211:177;22397:327;;22557:67;22621:2;22616:3;22557:67;;;22657:29;22637:50;;22715:2;22706:12;;22543:181;-1:-1;;22543:181;22733:328;;22893:67;22957:2;22952:3;22893:67;;;22993:30;22973:51;;23052:2;23043:12;;22879:182;-1:-1;;22879:182;23070:321;;23230:67;23294:2;23289:3;23230:67;;;-1:-1;;;23310:44;;23382:2;23373:12;;23216:175;-1:-1;;23216:175;23400:371;;23560:67;23624:2;23619:3;23560:67;;;23660:34;23640:55;;-1:-1;;;23724:2;23715:12;;23708:26;23762:2;23753:12;;23546:225;-1:-1;;23546:225;23780:326;;23940:67;24004:2;23999:3;23940:67;;;24040:28;24020:49;;24097:2;24088:12;;23926:180;-1:-1;;23926:180;24115:352;;24293:85;24375:2;24370:3;24293:85;;;-1:-1;;;24391:39;;24458:2;24449:12;;24279:188;-1:-1;;24279:188;24476:332;;24636:67;24700:2;24695:3;24636:67;;;24736:34;24716:55;;24799:2;24790:12;;24622:186;-1:-1;;24622:186;24817:315;;24977:67;25041:2;25036:3;24977:67;;;-1:-1;;;25057:38;;25123:2;25114:12;;24963:169;-1:-1;;24963:169;25141:323;;25301:67;25365:2;25360:3;25301:67;;;25401:25;25381:46;;25455:2;25446:12;;25287:177;-1:-1;;25287:177;25473:327;;25633:67;25697:2;25692:3;25633:67;;;25733:29;25713:50;;25791:2;25782:12;;25619:181;-1:-1;;25619:181;25809:325;;25969:67;26033:2;26028:3;25969:67;;;26069:27;26049:48;;26125:2;26116:12;;25955:179;-1:-1;;25955:179;26143:327;;26303:67;26367:2;26362:3;26303:67;;;26403:29;26383:50;;26461:2;26452:12;;26289:181;-1:-1;;26289:181;26479:325;;26639:67;26703:2;26698:3;26639:67;;;26739:27;26719:48;;26795:2;26786:12;;26625:179;-1:-1;;26625:179;26813:373;;26973:67;27037:2;27032:3;26973:67;;;27073:34;27053:55;;-1:-1;;;27137:2;27128:12;;27121:28;27177:2;27168:12;;26959:227;-1:-1;;26959:227;27195:316;;27355:67;27419:2;27414:3;27355:67;;;-1:-1;;;27435:39;;27502:2;27493:12;;27341:170;-1:-1;;27341:170;27520:341;;27698:84;27780:1;27775:3;27698:84;;;-1:-1;;;27795:30;;27853:1;27844:11;;27684:177;-1:-1;;27684:177;27870:321;;28030:67;28094:2;28089:3;28030:67;;;-1:-1;;;28110:44;;28182:2;28173:12;;28016:175;-1:-1;;28016:175;28200:378;;28360:67;28424:2;28419:3;28360:67;;;28460:34;28440:55;;-1:-1;;;28524:2;28515:12;;28508:33;28569:2;28560:12;;28346:232;-1:-1;;28346:232;28587:331;;28747:67;28811:2;28806:3;28747:67;;;28847:33;28827:54;;28909:2;28900:12;;28733:185;-1:-1;;28733:185;28927:343;;29105:84;29187:1;29182:3;29105:84;;;-1:-1;;;29202:32;;29262:1;29253:11;;29091:179;-1:-1;;29091:179;29279:370;;29439:67;29503:2;29498:3;29439:67;;;29539:34;29519:55;;-1:-1;;;29603:2;29594:12;;29587:25;29640:2;29631:12;;29425:224;-1:-1;;29425:224;29658:317;;29818:67;29882:2;29877:3;29818:67;;;-1:-1;;;29898:40;;29966:2;29957:12;;29804:171;-1:-1;;29804:171;29984:346;;30162:85;30244:2;30239:3;30162:85;;;-1:-1;;;30260:33;;30321:2;30312:12;;30148:182;-1:-1;;30148:182;30339:328;;30499:67;30563:2;30558:3;30499:67;;;30599:30;30579:51;;30658:2;30649:12;;30485:182;-1:-1;;30485:182;30676:346;;30854:85;30936:2;30931:3;30854:85;;;-1:-1;;;30952:33;;31013:2;31004:12;;30840:182;-1:-1;;30840:182;31031:331;;31191:67;31255:2;31250:3;31191:67;;;31291:33;31271:54;;31353:2;31344:12;;31177:185;-1:-1;;31177:185;31371:383;;31531:67;31595:2;31590:3;31531:67;;;31631:34;31611:55;;-1:-1;;;31695:2;31686:12;;31679:38;31745:2;31736:12;;31517:237;-1:-1;;31517:237;31763:323;;31923:67;31987:2;31982:3;31923:67;;;32023:25;32003:46;;32077:2;32068:12;;31909:177;-1:-1;;31909:177;32095:320;;32255:67;32319:2;32314:3;32255:67;;;-1:-1;;;32335:43;;32406:2;32397:12;;32241:174;-1:-1;;32241:174;32424:330;;32584:67;32648:2;32643:3;32584:67;;;32684:32;32664:53;;32745:2;32736:12;;32570:184;-1:-1;;32570:184;32763:370;;32923:67;32987:2;32982:3;32923:67;;;33023:34;33003:55;;-1:-1;;;33087:2;33078:12;;33071:25;33124:2;33115:12;;32909:224;-1:-1;;32909:224;33142:379;;33302:67;33366:2;33361:3;33302:67;;;33402:34;33382:55;;-1:-1;;;33466:2;33457:12;;33450:34;33512:2;33503:12;;33288:233;-1:-1;;33288:233;33530:319;;33690:67;33754:2;33749:3;33690:67;;;-1:-1;;;33770:42;;33840:2;33831:12;;33676:173;-1:-1;;33676:173;33858:331;;34018:67;34082:2;34077:3;34018:67;;;34118:33;34098:54;;34180:2;34171:12;;34004:185;-1:-1;;34004:185;34198:321;;34358:67;34422:2;34417:3;34358:67;;;-1:-1;;;34438:44;;34510:2;34501:12;;34344:175;-1:-1;;34344:175;34528:331;;34688:67;34752:2;34747:3;34688:67;;;34788:33;34768:54;;34850:2;34841:12;;34674:185;-1:-1;;34674:185;34868:370;;35028:67;35092:2;35087:3;35028:67;;;35128:34;35108:55;;-1:-1;;;35192:2;35183:12;;35176:25;35229:2;35220:12;;35014:224;-1:-1;;35014:224;35247:376;;35407:67;35471:2;35466:3;35407:67;;;35507:34;35487:55;;-1:-1;;;35571:2;35562:12;;35555:31;35614:2;35605:12;;35393:230;-1:-1;;35393:230;35632:343;;35810:84;35892:1;35887:3;35810:84;;;-1:-1;;;35907:32;;35967:1;35958:11;;35796:179;-1:-1;;35796:179;35984:331;;36144:67;36208:2;36203:3;36144:67;;;36244:33;36224:54;;36306:2;36297:12;;36130:185;-1:-1;;36130:185;36324:374;;36484:67;36548:2;36543:3;36484:67;;;36584:34;36564:55;;-1:-1;;;36648:2;36639:12;;36632:29;36689:2;36680:12;;36470:228;-1:-1;;36470:228;36765:1125;36985:23;;36916:4;37021:38;;;36765:1125;;36907:14;;;;37074:141;36907:14;36985:23;37074:141;;;37066:149;;36936:291;37306:4;37299:5;37295:16;37289:23;37318:59;37371:4;37366:3;37362:14;37348:12;37318:59;;;37237:146;37467:4;37460:5;37456:16;37450:23;37479:57;37530:4;37525:3;37521:14;37507:12;37479:57;;;37393:149;37617:4;37610:5;37606:16;37600:23;37629:57;37680:4;37675:3;37671:14;37657:12;37629:57;;;37552:140;37783:4;37776:5;37772:16;37766:23;37795:63;37852:4;37847:3;37843:14;37829:12;37795:63;;;-1:-1;37881:4;36889:1001;-1:-1;;;36889:1001;37970:697;38197:23;;38127:6;38118:16;;;38226:109;38122:3;38197:23;38226:109;;;38149:192;38420:4;38413:5;38409:16;38403:23;38432:63;38489:4;38484:3;38480:14;38466:12;38432:63;;;38351:150;38575:4;38568:5;38564:16;38558:23;38587:59;38640:4;38635:3;38631:14;38617:12;38587:59;;38733:1134;38942:23;;38876:4;38867:14;;;38971:63;38871:3;38942:23;38971:63;;;38896:144;39115:4;39108:5;39104:16;39098:23;39127:79;39200:4;39195:3;39191:14;39177:12;39127:79;;;39050:162;39301:4;39294:5;39290:16;39284:23;39313:57;39364:4;39359:3;39355:14;39341:12;39313:57;;;39222:154;39450:4;39443:5;39439:16;39433:23;39462:63;39519:4;39514:3;39510:14;39496:12;39462:63;;;39386:145;39609:4;39602:5;39598:16;39592:23;39621:63;39678:4;39673:3;39669:14;39655:12;39621:63;;;39541:149;39771:4;39764:5;39760:16;39754:23;39783:63;39840:4;39835:3;39831:14;39817:12;39783:63;;41137:1175;41375:23;;41137:1175;;41306:4;41297:14;;;41404:57;41301:3;41375:23;41404:57;;;41326:141;41543:4;41536:5;41532:16;41526:23;41595:3;41589:4;41585:14;41578:4;41573:3;41569:14;41562:38;41615:141;41751:4;41737:12;41615:141;;;41607:149;;41477:291;41848:4;41841:5;41837:16;41831:23;41900:3;41894:4;41890:14;41883:4;41878:3;41874:14;41867:38;41920:99;42014:4;42000:12;41920:99;;;41912:107;;41778:253;42107:4;42100:5;42096:16;42090:23;42159:3;42153:4;42149:14;42142:4;42137:3;42133:14;42126:38;42179:95;42269:4;42255:12;42179:95;;42398:1184;42639:23;;42398:1184;;42569:4;42560:14;;;42668:63;42564:3;42639:23;42668:63;;43658:1471;43888:23;;43658:1471;;43819:4;43810:14;;;43917:57;43814:3;43888:23;43917:57;;;43839:141;44059:4;44052:5;44048:16;44042:23;44111:3;44105:4;44101:14;44094:4;44089:3;44085:14;44078:38;44131:141;44267:4;44253:12;44131:141;;;44123:149;;43990:294;44360:4;44353:5;44349:16;44343:23;44412:3;44406:4;44402:14;44395:4;44390:3;44386:14;44379:38;44432:141;44568:4;44554:12;44432:141;;;44424:149;;44294:291;44665:4;44658:5;44654:16;44648:23;44717:3;44711:4;44707:14;44700:4;44695:3;44691:14;44684:38;44737:99;44831:4;44817:12;44737:99;;;44729:107;;44595:253;44924:4;44917:5;44913:16;44907:23;44976:3;44970:4;44966:14;44959:4;44954:3;44950:14;44943:38;44996:95;45086:4;45072:12;44996:95;;45366:97;45435:22;45451:5;45435:22;;45584:262;;45728:93;45817:3;45808:6;45728:93;;45853:372;;46052:148;46196:3;46052:148;;46232:372;;46431:148;46575:3;46431:148;;46611:372;;46810:148;46954:3;46810:148;;46990:372;;47189:148;47333:3;47189:148;;47369:372;;47568:148;47712:3;47568:148;;47748:372;;47947:148;48091:3;47947:148;;48127:372;;48326:148;48470:3;48326:148;;48506:372;;48705:148;48849:3;48705:148;;48885:213;49003:2;48988:18;;49017:71;48992:9;49061:6;49017:71;;49105:229;49231:2;49216:18;;49245:79;49220:9;49297:6;49245:79;;49341:435;49515:2;49500:18;;49529:71;49504:9;49573:6;49529:71;;;49611:72;49679:2;49668:9;49664:18;49655:6;49611:72;;;49694;49762:2;49751:9;49747:18;49738:6;49694:72;;49783:535;49979:3;49964:19;;49994:71;49968:9;50038:6;49994:71;;;50076:72;50144:2;50133:9;50129:18;50120:6;50076:72;;;50159;50227:2;50216:9;50212:18;50203:6;50159:72;;;50242:66;50304:2;50293:9;50289:18;50280:6;50242:66;;50325:324;50471:2;50456:18;;50485:71;50460:9;50529:6;50485:71;;;50567:72;50635:2;50624:9;50620:18;50611:6;50567:72;;50656:423;50824:2;50809:18;;50838:71;50813:9;50882:6;50838:71;;;50920:72;50988:2;50977:9;50973:18;50964:6;50920:72;;;51003:66;51065:2;51054:9;51050:18;51041:6;51003:66;;51086:492;51292:2;51306:47;;;51277:18;;51367:118;51277:18;51471:6;51463;51367:118;;;51359:126;;51496:72;51564:2;51553:9;51549:18;51540:6;51496:72;;51585:620;51831:2;51845:47;;;51816:18;;51906:108;51816:18;52000:6;51906:108;;;51898:116;;52062:9;52056:4;52052:20;52047:2;52036:9;52032:18;52025:48;52087:108;52190:4;52181:6;52087:108;;52212:556;52450:2;52464:47;;;52435:18;;52525:150;52435:18;52661:6;52525:150;;;52517:158;;52686:72;52754:2;52743:9;52739:18;52730:6;52686:72;;52775:201;52887:2;52872:18;;52901:65;52876:9;52939:6;52901:65;;52983:880;53327:3;53312:19;;53342:65;53316:9;53380:6;53342:65;;;53455:9;53449:4;53445:20;53440:2;53429:9;53425:18;53418:48;53480:78;53553:4;53544:6;53480:78;;;53472:86;;53569:136;53701:2;53690:9;53686:18;53677:6;53569:136;;;53716:137;53848:3;53837:9;53833:19;53824:6;53716:137;;53870:441;54074:3;54059:19;;54089:65;54063:9;54127:6;54089:65;;;54165:136;54297:2;54286:9;54282:18;54273:6;54165:136;;54318:213;54436:2;54421:18;;54450:71;54425:9;54494:6;54450:71;;54538:243;54671:2;54656:18;;54685:86;54660:9;54744:6;54685:86;;54788:245;54922:2;54907:18;;54936:87;54911:9;54996:6;54936:87;;55040:301;55178:2;55192:47;;;55163:18;;55253:78;55163:18;55317:6;55253:78;;55348:407;55539:2;55553:47;;;55524:18;;55614:131;55524:18;55614:131;;55762:407;55953:2;55967:47;;;55938:18;;56028:131;55938:18;56028:131;;56176:407;56367:2;56381:47;;;56352:18;;56442:131;56352:18;56442:131;;56590:407;56781:2;56795:47;;;56766:18;;56856:131;56766:18;56856:131;;57004:407;57195:2;57209:47;;;57180:18;;57270:131;57180:18;57270:131;;57418:407;57609:2;57623:47;;;57594:18;;57684:131;57594:18;57684:131;;57832:407;58023:2;58037:47;;;58008:18;;58098:131;58008:18;58098:131;;58246:407;58437:2;58451:47;;;58422:18;;58512:131;58422:18;58512:131;;58660:407;58851:2;58865:47;;;58836:18;;58926:131;58836:18;58926:131;;59074:407;59265:2;59279:47;;;59250:18;;59340:131;59250:18;59340:131;;59488:407;59679:2;59693:47;;;59664:18;;59754:131;59664:18;59754:131;;59902:407;60093:2;60107:47;;;60078:18;;60168:131;60078:18;60168:131;;60316:407;60507:2;60521:47;;;60492:18;;60582:131;60492:18;60582:131;;60730:407;60921:2;60935:47;;;60906:18;;60996:131;60906:18;60996:131;;61144:407;61335:2;61349:47;;;61320:18;;61410:131;61320:18;61410:131;;61558:407;61749:2;61763:47;;;61734:18;;61824:131;61734:18;61824:131;;61972:407;62163:2;62177:47;;;62148:18;;62238:131;62148:18;62238:131;;62386:407;62577:2;62591:47;;;62562:18;;62652:131;62562:18;62652:131;;62800:407;62991:2;63005:47;;;62976:18;;63066:131;62976:18;63066:131;;63214:407;63405:2;63419:47;;;63390:18;;63480:131;63390:18;63480:131;;63628:407;63819:2;63833:47;;;63804:18;;63894:131;63804:18;63894:131;;64042:407;64233:2;64247:47;;;64218:18;;64308:131;64218:18;64308:131;;64456:407;64647:2;64661:47;;;64632:18;;64722:131;64632:18;64722:131;;64870:407;65061:2;65075:47;;;65046:18;;65136:131;65046:18;65136:131;;65284:407;65475:2;65489:47;;;65460:18;;65550:131;65460:18;65550:131;;65698:407;65889:2;65903:47;;;65874:18;;65964:131;65874:18;65964:131;;66112:407;66303:2;66317:47;;;66288:18;;66378:131;66288:18;66378:131;;66526:407;66717:2;66731:47;;;66702:18;;66792:131;66702:18;66792:131;;66940:407;67131:2;67145:47;;;67116:18;;67206:131;67116:18;67206:131;;67354:407;67545:2;67559:47;;;67530:18;;67620:131;67530:18;67620:131;;67768:407;67959:2;67973:47;;;67944:18;;68034:131;67944:18;68034:131;;68182:407;68373:2;68387:47;;;68358:18;;68448:131;68358:18;68448:131;;68596:407;68787:2;68801:47;;;68772:18;;68862:131;68772:18;68862:131;;69010:407;69201:2;69215:47;;;69186:18;;69276:131;69186:18;69276:131;;69424:407;69615:2;69629:47;;;69600:18;;69690:131;69600:18;69690:131;;69838:407;70029:2;70043:47;;;70014:18;;70104:131;70014:18;70104:131;;70252:407;70443:2;70457:47;;;70428:18;;70518:131;70428:18;70518:131;;70666:407;70857:2;70871:47;;;70842:18;;70932:131;70842:18;70932:131;;71080:407;71271:2;71285:47;;;71256:18;;71346:131;71256:18;71346:131;;71494:407;71685:2;71699:47;;;71670:18;;71760:131;71670:18;71760:131;;71908:361;72076:2;72090:47;;;72061:18;;72151:108;72061:18;72245:6;72151:108;;72276:314;72444:3;72429:19;;72459:121;72433:9;72553:6;72459:121;;72597:397;72783:2;72797:47;;;72768:18;;72858:126;72768:18;72970:6;72858:126;;73001:401;73189:2;73203:47;;;73174:18;;73264:128;73174:18;73378:6;73264:128;;73409:381;73587:2;73601:47;;;73572:18;;73662:118;73572:18;73766:6;73662:118;;73797:472;73993:2;73978:18;;74007:71;73982:9;74051:6;74007:71;;;74126:9;74120:4;74116:20;74111:2;74100:9;74096:18;74089:48;74151:108;74254:4;74245:6;74151:108;;74276:205;74390:2;74375:18;;74404:67;74379:9;74444:6;74404:67;;74488:515;74674:3;74659:19;;74689:67;74663:9;74729:6;74689:67;;;74767:66;74829:2;74818:9;74814:18;74805:6;74767:66;;;74844;74906:2;74895:9;74891:18;74882:6;74844:66;;;74921:72;74989:2;74978:9;74974:18;74965:6;74921:72;;75010:118;75098:3;75084:44;75135:147;75255:4;75246:14;;75203:79;76111:133;76210:12;;76181:63;78096:168;78204:19;;;78253:4;78244:14;;78197:67;79707:119;;79781:39;79816:2;79811:3;79807:12;79802:3;79781:39;;79834:91;;79896:24;79914:5;79896:24;;79932:85;79998:13;79991:21;;79974:43;80103:142;80183:5;80189:51;80183:5;80189:51;;80252:121;-1:-1;;;;;80314:54;;80297:76;80459:81;80530:4;80519:16;;80502:38;80547:129;;80634:37;80665:5;80683:151;;80777:52;80823:5;80777:52;;80971:142;;81066:42;81102:5;81066:42;;81364:268;81429:1;81436:101;81450:6;81447:1;81444:13;81436:101;;;81517:11;;;81511:18;81498:11;;;81491:39;81472:2;81465:10;81436:101;;;81552:6;81549:1;81546:13;81543:2;;;-1:-1;;81617:1;81599:16;;81592:27;81413:219;81640:97;81728:2;81708:14;-1:-1;;81704:28;;81688:49;81745:109;81832:1;81825:5;81822:12;81812:2;;81838:9;81861:117;81930:24;81948:5;81930:24;;;81923:5;81920:35;81910:2;;81969:1;81966;81959:12;81985:111;82051:21;82066:5;82051:21;;82103:112;82190:1;82183:5;82180:12;82170:2;;82206:1;82203;82196:12;82222:117;82291:24;82309:5;82291:24;;82346:113;82413:22;82429:5;82413:22;",
  "source": "pragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { BasketManager } from \"../../mix/BasketManager.sol\";\nimport { MixStructs } from \"../../mix/shared/MixStructs.sol\";\nimport { BasketManager } from \"../../mix/BasketManager.sol\";\nimport { StableMath } from \"../../shared/StableMath.sol\";\n\n// This mock allows the direct setting of basket properties\ncontract MockBasketManager is BasketManager {\n\n    function setBasket(bool failed, uint256 colRatio)\n        external\n    {\n        basket.failed = failed;\n        basket.collateralisationRatio = colRatio;\n    }\n    function setBassetStatus(address bAsset, BassetStatus newStatus)\n        external\n    {\n        (, uint8 index) = _isAssetInBasket(bAsset);\n        basket.bassets[index].status = newStatus;\n    }\n    function setBassetRatio(address bAsset, uint256 _newRatio)\n        external\n    {\n        (, uint8 index) = _isAssetInBasket(bAsset);\n        basket.bassets[index].ratio = _newRatio;\n    }\n    function setRecol(bool undergoingRecol)\n        external\n    {\n        basket.undergoingRecol = undergoingRecol;\n    }\n}\n\n\n\n// This mock returns an invalid forge from the prepareForgeBasset call\ncontract MockBasketManager1 is BasketManager {\n\n    Basset private testBasset;\n    Basket private testBasket;\n\n    constructor(address _bAsset) public {\n        testBasset = Basset({\n            addr: _bAsset,\n            ratio: StableMath.getRatioScale(),\n            maxWeight: 0,\n            vaultBalance: 0,\n            status: BassetStatus.Normal,\n            isTransferFeeCharged: false\n        });\n        basket.collateralisationRatio = 1e18;\n    }\n\n    function getBasket()\n        external\n        view\n        returns (\n            Basket memory b\n        )\n    {\n        return basket;\n    }\n\n    function prepareForgeBasset(address /*_amts*/, uint256 /*_amt*/, bool /*_mint*/)\n        external\n        returns (\n            bool isValid,\n            BassetDetails memory bInfo\n        )\n    {\n        bInfo = BassetDetails({\n            bAsset: testBasset,\n            integrator: address(0),\n            index: 0\n        });\n        isValid = false;\n    }\n\n    function prepareForgeBassets(\n        address[] calldata /*_amts*/,\n        uint256[] calldata /*_amts*/,\n        bool /* _isMint */\n    )\n        external\n        returns (ForgePropsMulti memory props)\n    {\n        Basset[] memory bAssets = new Basset[](1);\n        address[] memory integrators = new address[](1);\n        uint8[] memory indexes = new uint8[](1);\n        bAssets[0] = testBasset;\n        integrators[0] = address(0);\n        indexes[0] = 0;\n        return ForgePropsMulti({\n            isValid: false,\n            bAssets: bAssets,\n            integrators: integrators,\n            indexes: indexes\n        });\n    }\n\n}\n\n\n// This mock returns an invalid integrator from the prepareForgeBasset call\ncontract MockBasketManager2 is MixStructs {\n\n    Basset private testBasset;\n\n    constructor(address _bAsset) public {\n        testBasset = Basset({\n            addr: _bAsset,\n            ratio: StableMath.getRatioScale(),\n            maxWeight: 0,\n            vaultBalance: 0,\n            status: BassetStatus.Normal,\n            isTransferFeeCharged: false\n        });\n    }\n\n    function prepareForgeBasset(address /*_token*/, uint256 /*_amt*/, bool /*_mint*/)\n        external\n        returns (\n            bool isValid,\n            BassetDetails memory bInfo\n        )\n    {\n        bInfo = BassetDetails({\n            bAsset: testBasset,\n            integrator: address(0),\n            index: 0\n        });\n        isValid = true;\n    }\n\n    function prepareForgeBassets(\n        address[] calldata /*bassets*/,\n        uint256[] calldata /*_amts*/,\n        bool /* _isMint */\n    )\n        external\n        returns (ForgePropsMulti memory props)\n    {\n        Basset[] memory bAssets = new Basset[](1);\n        address[] memory integrators = new address[](1);\n        uint8[] memory indexes = new uint8[](1);\n        bAssets[0] = testBasset;\n        integrators[0] = address(0);\n        indexes[0] = 0;\n        return ForgePropsMulti({\n            isValid: true,\n            bAssets: bAssets,\n            integrators: integrators,\n            indexes: indexes\n        });\n    }\n}\n\ncontract MockBasketManager3 is BasketManager {\n    function failBasket() public {\n        basket.failed = true;\n    }\n\n    function setBassetStatus(address _bAsset, BassetStatus _status) public {\n        (bool exists, uint8 index) = _isAssetInBasket(_bAsset);\n        require(exists, \"bAsset does not exist\");\n        basket.bassets[index].status = _status;\n    }\n\n}\n\n",
  "sourcePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
  "ast": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
    "exportedSymbols": {
      "MockBasketManager": [
        23476
      ],
      "MockBasketManager1": [
        23616
      ],
      "MockBasketManager2": [
        23740
      ],
      "MockBasketManager3": [
        23783
      ]
    },
    "id": 23784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23386,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:73"
      },
      {
        "id": 23387,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:73"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23389,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "59:60:73",
        "symbolAliases": [
          {
            "foreign": 23388,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol",
        "file": "../../mix/shared/MixStructs.sol",
        "id": 23391,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 13644,
        "src": "120:61:73",
        "symbolAliases": [
          {
            "foreign": 23390,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23393,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "182:60:73",
        "symbolAliases": [
          {
            "foreign": 23392,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol",
        "file": "../../shared/StableMath.sol",
        "id": 23395,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 22201,
        "src": "243:57:73",
        "symbolAliases": [
          {
            "foreign": 23394,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23396,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "392:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23397,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23476,
        "linearizedBaseContracts": [
          23476,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23416,
              "nodeType": "Block",
              "src": "484:89:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23404,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "494:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "494:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23407,
                      "name": "failed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23399,
                      "src": "510:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "494:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23409,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23410,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "526:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "526:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23413,
                      "name": "colRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23401,
                      "src": "558:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "526:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23415,
                  "nodeType": "ExpressionStatement",
                  "src": "526:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23399,
                  "name": "failed",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "432:11:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "name": "colRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "445:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:31:73"
            },
            "returnParameters": {
              "id": 23403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:73"
            },
            "scope": 23476,
            "src": "413:160:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23439,
              "nodeType": "Block",
              "src": "664:109:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23425
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23425,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23439,
                      "src": "677:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23424,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23427,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "709:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23426,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "692:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23430,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "726:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "726:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23434,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23432,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23425,
                          "src": "741:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "726:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "726:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23436,
                      "name": "newStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23421,
                      "src": "757:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "726:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23438,
                  "nodeType": "ExpressionStatement",
                  "src": "726:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "603:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "newStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "619:22:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "619:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:40:73"
            },
            "returnParameters": {
              "id": 23423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:73"
            },
            "scope": 23476,
            "src": "578:195:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23462,
              "nodeType": "Block",
              "src": "858:108:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23448
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23448,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23462,
                      "src": "871:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23450,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23442,
                        "src": "903:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23449,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "886:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23453,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "920:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23456,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "920:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23457,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23455,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23448,
                          "src": "935:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "920:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ratio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "920:27:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23459,
                      "name": "_newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23444,
                      "src": "950:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:39:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23461,
                  "nodeType": "ExpressionStatement",
                  "src": "920:39:73"
                }
              ]
            },
            "documentation": null,
            "id": 23463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23442,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "802:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23444,
                  "name": "_newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "818:17:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:35:73"
            },
            "returnParameters": {
              "id": 23446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:73"
            },
            "scope": 23476,
            "src": "778:188:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23474,
              "nodeType": "Block",
              "src": "1032:57:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23468,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1042:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "undergoingRecol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13569,
                      "src": "1042:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23471,
                      "name": "undergoingRecol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23465,
                      "src": "1067:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1042:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23473,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRecol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23465,
                  "name": "undergoingRecol",
                  "nodeType": "VariableDeclaration",
                  "scope": 23475,
                  "src": "989:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "988:22:73"
            },
            "returnParameters": {
              "id": 23467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:73"
            },
            "scope": 23476,
            "src": "971:118:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "362:729:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23477,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "1197:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23478,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23616,
        "linearizedBaseContracts": [
          23616,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23480,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1218:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23479,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "1218:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23482,
            "name": "testBasket",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1249:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basket_$13574_storage",
              "typeString": "struct MixStructs.Basket"
            },
            "typeName": {
              "contractScope": null,
              "id": 23481,
              "name": "Basket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13574,
              "src": "1249:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                "typeString": "struct MixStructs.Basket"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23507,
              "nodeType": "Block",
              "src": "1317:305:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23487,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "1327:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23489,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23484,
                          "src": "1367:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23490,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "1395:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "1395:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23495,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "1498:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1553:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23488,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "1340:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1340:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "1327:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23500,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:242:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23501,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1579:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "1579:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 23504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1579:36:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23506,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:36:73"
                }
              ]
            },
            "documentation": null,
            "id": 23508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23484,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23508,
                  "src": "1293:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:17:73"
            },
            "returnParameters": {
              "id": 23486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:73"
            },
            "scope": 23616,
            "src": "1281:341:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23515,
              "nodeType": "Block",
              "src": "1739:30:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23513,
                    "name": "basket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4148,
                    "src": "1756:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage",
                      "typeString": "struct MixStructs.Basket storage ref"
                    }
                  },
                  "functionReturnParameters": 23512,
                  "id": 23514,
                  "nodeType": "Return",
                  "src": "1749:13:73"
                }
              ]
            },
            "documentation": null,
            "id": 23516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:73"
            },
            "returnParameters": {
              "id": 23512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23511,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 23516,
                  "src": "1709:15:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Basket_$13574_memory_ptr",
                    "typeString": "struct MixStructs.Basket"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23510,
                    "name": "Basket",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13574,
                    "src": "1709:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                      "typeString": "struct MixStructs.Basket"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:39:73"
            },
            "scope": 23616,
            "src": "1628:141:73",
            "stateMutability": "view",
            "superFunction": 5469,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23543,
              "nodeType": "Block",
              "src": "1970:165:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23529,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23527,
                      "src": "1980:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23531,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23480,
                          "src": "2024:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23530,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "1988:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1988:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "1980:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23539,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23525,
                      "src": "2113:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 23540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:5:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2113:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:15:73"
                }
              ]
            },
            "documentation": null,
            "id": 23544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1803:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1822:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1840:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:53:73"
            },
            "returnParameters": {
              "id": 23528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1903:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1929:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23526,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "1929:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1889:76:73"
            },
            "scope": 23616,
            "src": "1775:360:73",
            "stateMutability": "nonpayable",
            "superFunction": 5517,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23614,
              "nodeType": "Block",
              "src": "2348:428:73",
              "statements": [
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2358:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23558,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2358:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23559,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2358:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2384:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23561,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2388:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2388:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:41:73"
                },
                {
                  "assignments": [
                    23570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23570,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2409:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23569,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2409:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2440:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23572,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2444:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:47:73"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2466:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23579,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2466:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23586,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2491:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23581,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2495:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23582,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2495:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23587,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2515:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23589,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23590,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "2528:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "2515:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23592,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2548:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23595,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2560:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2548:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2548:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23601,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2585:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2585:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2585:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23606,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 23608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:5:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23609,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2683:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2717:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23611,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2751:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23607,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "2616:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2616:153:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23556,
                  "id": 23613,
                  "nodeType": "Return",
                  "src": "2609:160:73"
                }
              ]
            },
            "documentation": null,
            "id": 23615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2179:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2179:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2217:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2217:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2217:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2255:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2169:110:73"
            },
            "returnParameters": {
              "id": 23556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23555,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2314:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23554,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "2314:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2313:30:73"
            },
            "scope": 23616,
            "src": "2141:635:73",
            "stateMutability": "nonpayable",
            "superFunction": 5674,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "1166:1613:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23617,
              "name": "MixStructs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13643,
              "src": "2889:10:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixStructs_$13643",
                "typeString": "contract MixStructs"
              }
            },
            "id": 23618,
            "nodeType": "InheritanceSpecifier",
            "src": "2889:10:73"
          }
        ],
        "contractDependencies": [
          13643
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23740,
        "linearizedBaseContracts": [
          23740,
          13643
        ],
        "name": "MockBasketManager2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23620,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23740,
            "src": "2907:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23619,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "2907:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23639,
              "nodeType": "Block",
              "src": "2975:259:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23625,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "2985:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23627,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23622,
                          "src": "3025:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23628,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "3053:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "3053:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3133:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23633,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "3156:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3156:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23626,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "2998:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2998:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "2985:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23638,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:242:73"
                }
              ]
            },
            "documentation": null,
            "id": 23640,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23622,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23640,
                  "src": "2951:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:17:73"
            },
            "returnParameters": {
              "id": 23624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:73"
            },
            "scope": 23740,
            "src": "2939:295:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23667,
              "nodeType": "Block",
              "src": "3436:164:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23653,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23651,
                      "src": "3446:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23655,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23620,
                          "src": "3490:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3526:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23654,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "3454:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3454:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "3446:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23662,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23663,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23649,
                      "src": "3579:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3579:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23666,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:14:73"
                }
              ]
            },
            "documentation": null,
            "id": 23668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3288:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3306:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3267:54:73"
            },
            "returnParameters": {
              "id": 23652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23649,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3369:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23651,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3395:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23650,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "3395:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3355:76:73"
            },
            "scope": 23740,
            "src": "3240:360:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23738,
              "nodeType": "Block",
              "src": "3815:427:73",
              "statements": [
                {
                  "assignments": [
                    23684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23684,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3825:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23682,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3825:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23683,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3825:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3851:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23685,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3855:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23686,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3855:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:41:73"
                },
                {
                  "assignments": [
                    23694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23694,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3876:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3876:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23693,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3876:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3907:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23696,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:47:73"
                },
                {
                  "assignments": [
                    23704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23704,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3933:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23702,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3933:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23703,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3933:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3958:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23705,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23706,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3962:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23711,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "3982:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23713,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23714,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "3995:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "3982:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23716,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23717,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4015:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4027:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4015:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4040:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4015:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23725,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4052:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23727,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4065:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4052:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:4:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23733,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "4149:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23734,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4183:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23735,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23731,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "4083:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4083:152:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23680,
                  "id": 23737,
                  "nodeType": "Return",
                  "src": "4076:159:73"
                }
              ]
            },
            "documentation": null,
            "id": 23739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3644:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23670,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3684:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3684:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23673,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3684:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3722:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3634:112:73"
            },
            "returnParameters": {
              "id": 23680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23679,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3781:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23678,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "3781:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:30:73"
            },
            "scope": 23740,
            "src": "3606:636:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "2858:1386:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23741,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "4277:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "4277:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23783,
        "linearizedBaseContracts": [
          23783,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23751,
              "nodeType": "Block",
              "src": "4326:37:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23745,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4336:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "4336:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4352:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4336:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23750,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:20:73"
                }
              ]
            },
            "documentation": null,
            "id": 23752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:73"
            },
            "returnParameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:73"
            },
            "scope": 23783,
            "src": "4297:66:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23781,
              "nodeType": "Block",
              "src": "4440:169:73",
              "statements": [
                {
                  "assignments": [
                    23760,
                    23762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23760,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4451:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23759,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4451:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23762,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4464:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23761,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23764,
                        "name": "_bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23754,
                        "src": "4496:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23763,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "4479:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:25:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4450:54:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23768,
                        "name": "exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23760,
                        "src": "4522:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62417373657420646f6573206e6f74206578697374",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:23:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        },
                        "value": "bAsset does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        }
                      ],
                      "id": 23767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        36235,
                        36236
                      ],
                      "referencedDeclaration": 36236,
                      "src": "4514:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:40:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23772,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "4564:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "4564:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23774,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23762,
                          "src": "4579:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "4564:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23778,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23756,
                      "src": "4595:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "4564:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23780,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:73"
                }
              ]
            },
            "documentation": null,
            "id": 23782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4394:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23756,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4411:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23755,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "4411:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:73"
            },
            "returnParameters": {
              "id": 23758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:73"
            },
            "scope": 23783,
            "src": "4369:240:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23784,
        "src": "4246:366:73"
      }
    ],
    "src": "0:4614:73"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/z_mocks/mix/MockBasketManager.sol",
    "exportedSymbols": {
      "MockBasketManager": [
        23476
      ],
      "MockBasketManager1": [
        23616
      ],
      "MockBasketManager2": [
        23740
      ],
      "MockBasketManager3": [
        23783
      ]
    },
    "id": 23784,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23386,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:73"
      },
      {
        "id": 23387,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:73"
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23389,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "59:60:73",
        "symbolAliases": [
          {
            "foreign": 23388,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/shared/MixStructs.sol",
        "file": "../../mix/shared/MixStructs.sol",
        "id": 23391,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 13644,
        "src": "120:61:73",
        "symbolAliases": [
          {
            "foreign": 23390,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/mix/BasketManager.sol",
        "file": "../../mix/BasketManager.sol",
        "id": 23393,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 6270,
        "src": "182:60:73",
        "symbolAliases": [
          {
            "foreign": 23392,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/sdxc/ETHEREUM/CODE/mStable-v1-edit/contracts/shared/StableMath.sol",
        "file": "../../shared/StableMath.sol",
        "id": 23395,
        "nodeType": "ImportDirective",
        "scope": 23784,
        "sourceUnit": 22201,
        "src": "243:57:73",
        "symbolAliases": [
          {
            "foreign": 23394,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23396,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "392:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23397,
            "nodeType": "InheritanceSpecifier",
            "src": "392:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23476,
        "linearizedBaseContracts": [
          23476,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23416,
              "nodeType": "Block",
              "src": "484:89:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23404,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "494:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23406,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "494:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23407,
                      "name": "failed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23399,
                      "src": "510:6:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "494:22:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23409,
                  "nodeType": "ExpressionStatement",
                  "src": "494:22:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23410,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "526:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "526:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23413,
                      "name": "colRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23401,
                      "src": "558:8:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "526:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23415,
                  "nodeType": "ExpressionStatement",
                  "src": "526:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23399,
                  "name": "failed",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "432:11:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "name": "colRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23417,
                  "src": "445:16:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "431:31:73"
            },
            "returnParameters": {
              "id": 23403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:73"
            },
            "scope": 23476,
            "src": "413:160:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23439,
              "nodeType": "Block",
              "src": "664:109:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23425
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23425,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23439,
                      "src": "677:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23424,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "677:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23427,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23419,
                        "src": "709:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23426,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "692:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "674:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23430,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "726:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "726:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23434,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23432,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23425,
                          "src": "741:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "726:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "726:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23436,
                      "name": "newStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23421,
                      "src": "757:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "726:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23438,
                  "nodeType": "ExpressionStatement",
                  "src": "726:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23419,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "603:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23421,
                  "name": "newStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 23440,
                  "src": "619:22:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23420,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "619:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:40:73"
            },
            "returnParameters": {
              "id": 23423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:73"
            },
            "scope": 23476,
            "src": "578:195:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23462,
              "nodeType": "Block",
              "src": "858:108:73",
              "statements": [
                {
                  "assignments": [
                    null,
                    23448
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 23448,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23462,
                      "src": "871:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23447,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "871:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23452,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23450,
                        "name": "bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23442,
                        "src": "903:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23449,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "886:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "886:24:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:42:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23453,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "920:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23456,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "920:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23457,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23455,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23448,
                          "src": "935:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "920:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ratio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13582,
                      "src": "920:27:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23459,
                      "name": "_newRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23444,
                      "src": "950:9:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:39:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23461,
                  "nodeType": "ExpressionStatement",
                  "src": "920:39:73"
                }
              ]
            },
            "documentation": null,
            "id": 23463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23442,
                  "name": "bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "802:14:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23444,
                  "name": "_newRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 23463,
                  "src": "818:17:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:35:73"
            },
            "returnParameters": {
              "id": 23446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:73"
            },
            "scope": 23476,
            "src": "778:188:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23474,
              "nodeType": "Block",
              "src": "1032:57:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23468,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1042:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "undergoingRecol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13569,
                      "src": "1042:22:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23471,
                      "name": "undergoingRecol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23465,
                      "src": "1067:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1042:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23473,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:40:73"
                }
              ]
            },
            "documentation": null,
            "id": 23475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRecol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23465,
                  "name": "undergoingRecol",
                  "nodeType": "VariableDeclaration",
                  "scope": 23475,
                  "src": "989:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "988:22:73"
            },
            "returnParameters": {
              "id": 23467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:73"
            },
            "scope": 23476,
            "src": "971:118:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "362:729:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23477,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "1197:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23478,
            "nodeType": "InheritanceSpecifier",
            "src": "1197:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23616,
        "linearizedBaseContracts": [
          23616,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23480,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1218:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23479,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "1218:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23482,
            "name": "testBasket",
            "nodeType": "VariableDeclaration",
            "scope": 23616,
            "src": "1249:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basket_$13574_storage",
              "typeString": "struct MixStructs.Basket"
            },
            "typeName": {
              "contractScope": null,
              "id": 23481,
              "name": "Basket",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13574,
              "src": "1249:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                "typeString": "struct MixStructs.Basket"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23507,
              "nodeType": "Block",
              "src": "1317:305:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23487,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "1327:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23489,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23484,
                          "src": "1367:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23490,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "1395:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "1395:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1395:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1446:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23495,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "1498:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1498:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1553:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23488,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "1340:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1340:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "1327:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23500,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:242:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23501,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "1579:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralisationRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13573,
                      "src": "1579:29:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 23504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1579:36:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23506,
                  "nodeType": "ExpressionStatement",
                  "src": "1579:36:73"
                }
              ]
            },
            "documentation": null,
            "id": 23508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23484,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23508,
                  "src": "1293:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1292:17:73"
            },
            "returnParameters": {
              "id": 23486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:73"
            },
            "scope": 23616,
            "src": "1281:341:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23515,
              "nodeType": "Block",
              "src": "1739:30:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23513,
                    "name": "basket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4148,
                    "src": "1756:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage",
                      "typeString": "struct MixStructs.Basket storage ref"
                    }
                  },
                  "functionReturnParameters": 23512,
                  "id": 23514,
                  "nodeType": "Return",
                  "src": "1749:13:73"
                }
              ]
            },
            "documentation": null,
            "id": 23516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:2:73"
            },
            "returnParameters": {
              "id": 23512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23511,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 23516,
                  "src": "1709:15:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Basket_$13574_memory_ptr",
                    "typeString": "struct MixStructs.Basket"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23510,
                    "name": "Basket",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13574,
                    "src": "1709:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basket_$13574_storage_ptr",
                      "typeString": "struct MixStructs.Basket"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:39:73"
            },
            "scope": 23616,
            "src": "1628:141:73",
            "stateMutability": "view",
            "superFunction": 5469,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23543,
              "nodeType": "Block",
              "src": "1970:165:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23529,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23527,
                      "src": "1980:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23531,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23480,
                          "src": "2024:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2068:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2060:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2060:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2091:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23530,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "1988:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1988:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "1980:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23538,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23539,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23525,
                      "src": "2113:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 23540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2123:5:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2113:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23542,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:15:73"
                }
              ]
            },
            "documentation": null,
            "id": 23544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23518,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1803:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1822:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1840:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1802:53:73"
            },
            "returnParameters": {
              "id": 23528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1903:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1903:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23544,
                  "src": "1929:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23526,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "1929:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1889:76:73"
            },
            "scope": 23616,
            "src": "1775:360:73",
            "stateMutability": "nonpayable",
            "superFunction": 5517,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23614,
              "nodeType": "Block",
              "src": "2348:428:73",
              "statements": [
                {
                  "assignments": [
                    23560
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23560,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2358:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23558,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2358:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23559,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2358:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23566,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2384:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23561,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "2388:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2388:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2358:41:73"
                },
                {
                  "assignments": [
                    23570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23570,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2409:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23569,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2409:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2454:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2440:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2444:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23572,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2444:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:47:73"
                },
                {
                  "assignments": [
                    23580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23580,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23614,
                      "src": "2466:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23578,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23579,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2466:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23586,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2503:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2491:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23581,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2495:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23582,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2495:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2466:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23587,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2515:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23589,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2515:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23590,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23480,
                      "src": "2528:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "2515:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23592,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23593,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2548:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23595,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2560:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2548:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2548:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "2548:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23601,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2585:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2585:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2585:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23606,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 23608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2655:5:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23609,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23560,
                        "src": "2683:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23610,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "2717:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23611,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23580,
                        "src": "2751:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23607,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "2616:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2616:153:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23556,
                  "id": 23613,
                  "nodeType": "Return",
                  "src": "2609:160:73"
                }
              ]
            },
            "documentation": null,
            "id": 23615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2179:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2179:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2179:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23550,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2217:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23548,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2217:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2217:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23552,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2255:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23551,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2169:110:73"
            },
            "returnParameters": {
              "id": 23556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23555,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23615,
                  "src": "2314:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23554,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "2314:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2313:30:73"
            },
            "scope": 23616,
            "src": "2141:635:73",
            "stateMutability": "nonpayable",
            "superFunction": 5674,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "1166:1613:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23617,
              "name": "MixStructs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13643,
              "src": "2889:10:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MixStructs_$13643",
                "typeString": "contract MixStructs"
              }
            },
            "id": 23618,
            "nodeType": "InheritanceSpecifier",
            "src": "2889:10:73"
          }
        ],
        "contractDependencies": [
          13643
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23740,
        "linearizedBaseContracts": [
          23740,
          13643
        ],
        "name": "MockBasketManager2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23620,
            "name": "testBasset",
            "nodeType": "VariableDeclaration",
            "scope": 23740,
            "src": "2907:25:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Basset_$13587_storage",
              "typeString": "struct MixStructs.Basset"
            },
            "typeName": {
              "contractScope": null,
              "id": 23619,
              "name": "Basset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13587,
              "src": "2907:6:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                "typeString": "struct MixStructs.Basset"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23639,
              "nodeType": "Block",
              "src": "2975:259:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23625,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "2985:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23627,
                          "name": "_bAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23622,
                          "src": "3025:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 23628,
                              "name": "StableMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22200,
                              "src": "3053:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StableMath_$22200_$",
                                "typeString": "type(library StableMath)"
                              }
                            },
                            "id": 23629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getRatioScale",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21971,
                            "src": "3053:24:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3053:26:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3104:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3133:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23633,
                            "name": "BassetStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13596,
                            "src": "3156:12:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BassetStatus_$13596_$",
                              "typeString": "type(enum MixStructs.BassetStatus)"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Normal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3156:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 23635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3211:5:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_enum$_BassetStatus_$13596",
                            "typeString": "enum MixStructs.BassetStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 23626,
                        "name": "Basset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "2998:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Basset_$13587_storage_ptr_$",
                          "typeString": "type(struct MixStructs.Basset storage pointer)"
                        }
                      },
                      "id": 23636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "ratio",
                        "maxWeight",
                        "vaultBalance",
                        "status",
                        "isTransferFeeCharged"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2998:229:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "src": "2985:242:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_storage",
                      "typeString": "struct MixStructs.Basset storage ref"
                    }
                  },
                  "id": 23638,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:242:73"
                }
              ]
            },
            "documentation": null,
            "id": 23640,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23622,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23640,
                  "src": "2951:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2950:17:73"
            },
            "returnParameters": {
              "id": 23624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:73"
            },
            "scope": 23740,
            "src": "2939:295:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23667,
              "nodeType": "Block",
              "src": "3436:164:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23653,
                      "name": "bInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23651,
                      "src": "3446:5:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23655,
                          "name": "testBasset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23620,
                          "src": "3490:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 23657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3534:1:73",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3526:7:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 23658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:10:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage",
                            "typeString": "struct MixStructs.Basset storage ref"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23654,
                        "name": "BassetDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "3454:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BassetDetails_$13603_storage_ptr_$",
                          "typeString": "type(struct MixStructs.BassetDetails storage pointer)"
                        }
                      },
                      "id": 23660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "bAsset",
                        "integrator",
                        "index"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3454:115:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BassetDetails_$13603_memory",
                        "typeString": "struct MixStructs.BassetDetails memory"
                      }
                    },
                    "src": "3446:123:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                      "typeString": "struct MixStructs.BassetDetails memory"
                    }
                  },
                  "id": 23662,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:123:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 23663,
                      "name": "isValid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23649,
                      "src": "3579:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3589:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3579:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23666,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:14:73"
                }
              ]
            },
            "documentation": null,
            "id": 23668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBasset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3268:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3268:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3288:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23646,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3306:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3267:54:73"
            },
            "returnParameters": {
              "id": 23652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23649,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3369:12:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23648,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23651,
                  "name": "bInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 23668,
                  "src": "3395:26:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BassetDetails_$13603_memory_ptr",
                    "typeString": "struct MixStructs.BassetDetails"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23650,
                    "name": "BassetDetails",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13603,
                    "src": "3395:13:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BassetDetails_$13603_storage_ptr",
                      "typeString": "struct MixStructs.BassetDetails"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3355:76:73"
            },
            "scope": 23740,
            "src": "3240:360:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23738,
              "nodeType": "Block",
              "src": "3815:427:73",
              "statements": [
                {
                  "assignments": [
                    23684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23684,
                      "name": "bAssets",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3825:23:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                        "typeString": "struct MixStructs.Basset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23682,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3825:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23683,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3825:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23690,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3851:12:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (struct MixStructs.Basset memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 23685,
                          "name": "Basset",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 13587,
                          "src": "3855:6:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Basset_$13587_storage_ptr",
                            "typeString": "struct MixStructs.Basset"
                          }
                        },
                        "id": 23686,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3855:8:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage_ptr",
                          "typeString": "struct MixStructs.Basset[]"
                        }
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3851:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory",
                      "typeString": "struct MixStructs.Basset memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3825:41:73"
                },
                {
                  "assignments": [
                    23694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23694,
                      "name": "integrators",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3876:28:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3876:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23693,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3876:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3921:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3907:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3911:7:73",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23696,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3911:9:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 23699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:16:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3876:47:73"
                },
                {
                  "assignments": [
                    23704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23704,
                      "name": "indexes",
                      "nodeType": "VariableDeclaration",
                      "scope": 23738,
                      "src": "3933:22:73",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23702,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3933:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23703,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3933:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23710,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3970:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 23707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3958:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 23705,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 23706,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3962:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 23709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:39:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23711,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "3982:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      "id": 23713,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3990:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3982:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_memory",
                        "typeString": "struct MixStructs.Basset memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23714,
                      "name": "testBasset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23620,
                      "src": "3995:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Basset_$13587_storage",
                        "typeString": "struct MixStructs.Basset storage ref"
                      }
                    },
                    "src": "3982:23:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Basset_$13587_memory",
                      "typeString": "struct MixStructs.Basset memory"
                    }
                  },
                  "id": 23716,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:23:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23717,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4015:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4027:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4015:14:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4040:1:73",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 23722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4015:27:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23724,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:27:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 23725,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4052:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      "id": 23727,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 23726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4060:1:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 23728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4065:1:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4052:14:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:14:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 23732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4122:4:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "id": 23733,
                        "name": "bAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23684,
                        "src": "4149:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23734,
                        "name": "integrators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23694,
                        "src": "4183:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23735,
                        "name": "indexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23704,
                        "src": "4217:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Basset_$13587_memory_$dyn_memory_ptr",
                          "typeString": "struct MixStructs.Basset memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      ],
                      "id": 23731,
                      "name": "ForgePropsMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13615,
                      "src": "4083:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ForgePropsMulti_$13615_storage_ptr_$",
                        "typeString": "type(struct MixStructs.ForgePropsMulti storage pointer)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "isValid",
                      "bAssets",
                      "integrators",
                      "indexes"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4083:152:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory",
                      "typeString": "struct MixStructs.ForgePropsMulti memory"
                    }
                  },
                  "functionReturnParameters": 23680,
                  "id": 23737,
                  "nodeType": "Return",
                  "src": "4076:159:73"
                }
              ]
            },
            "documentation": null,
            "id": 23739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareForgeBassets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23671,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3644:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23669,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3644:7:73",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23670,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3644:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23674,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3684:18:73",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23672,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3684:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23673,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3684:9:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23676,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3722:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3722:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3634:112:73"
            },
            "returnParameters": {
              "id": 23680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23679,
                  "name": "props",
                  "nodeType": "VariableDeclaration",
                  "scope": 23739,
                  "src": "3781:28:73",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_memory_ptr",
                    "typeString": "struct MixStructs.ForgePropsMulti"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23678,
                    "name": "ForgePropsMulti",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13615,
                    "src": "3781:15:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ForgePropsMulti_$13615_storage_ptr",
                      "typeString": "struct MixStructs.ForgePropsMulti"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3780:30:73"
            },
            "scope": 23740,
            "src": "3606:636:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 23784,
        "src": "2858:1386:73"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23741,
              "name": "BasketManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6269,
              "src": "4277:13:73",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasketManager_$6269",
                "typeString": "contract BasketManager"
              }
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "4277:13:73"
          }
        ],
        "contractDependencies": [
          3334,
          6269,
          13643,
          20982,
          21241,
          21336,
          21366,
          35746
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23783,
        "linearizedBaseContracts": [
          23783,
          6269,
          21366,
          21336,
          20982,
          21241,
          3334,
          13643,
          35746
        ],
        "name": "MockBasketManager3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23751,
              "nodeType": "Block",
              "src": "4326:37:73",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 23745,
                        "name": "basket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4148,
                        "src": "4336:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basket_$13574_storage",
                          "typeString": "struct MixStructs.Basket storage ref"
                        }
                      },
                      "id": 23747,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13571,
                      "src": "4336:13:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 23748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4352:4:73",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4336:20:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23750,
                  "nodeType": "ExpressionStatement",
                  "src": "4336:20:73"
                }
              ]
            },
            "documentation": null,
            "id": 23752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "failBasket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4316:2:73"
            },
            "returnParameters": {
              "id": 23744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:73"
            },
            "scope": 23783,
            "src": "4297:66:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23781,
              "nodeType": "Block",
              "src": "4440:169:73",
              "statements": [
                {
                  "assignments": [
                    23760,
                    23762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23760,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4451:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23759,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4451:4:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23762,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 23781,
                      "src": "4464:11:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 23761,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:5:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 23766,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23764,
                        "name": "_bAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23754,
                        "src": "4496:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23763,
                      "name": "_isAssetInBasket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "4479:16:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint8_$",
                        "typeString": "function (address) view returns (bool,uint8)"
                      }
                    },
                    "id": 23765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4479:25:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint8_$",
                      "typeString": "tuple(bool,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4450:54:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 23768,
                        "name": "exists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23760,
                        "src": "4522:6:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62417373657420646f6573206e6f74206578697374",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:23:73",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        },
                        "value": "bAsset does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa73f6569c2b8737e9c00b8d08282376ea9b47be153473ae17e0abf6eaa2ad2",
                          "typeString": "literal_string \"bAsset does not exist\""
                        }
                      ],
                      "id": 23767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        36235,
                        36236
                      ],
                      "referencedDeclaration": 36236,
                      "src": "4514:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:40:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:40:73"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 23772,
                            "name": "basket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4148,
                            "src": "4564:6:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Basket_$13574_storage",
                              "typeString": "struct MixStructs.Basket storage ref"
                            }
                          },
                          "id": 23775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bassets",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13565,
                          "src": "4564:14:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Basset_$13587_storage_$dyn_storage",
                            "typeString": "struct MixStructs.Basset storage ref[] storage ref"
                          }
                        },
                        "id": 23776,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 23774,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23762,
                          "src": "4579:5:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4564:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Basset_$13587_storage",
                          "typeString": "struct MixStructs.Basset storage ref"
                        }
                      },
                      "id": 23777,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13578,
                      "src": "4564:28:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 23778,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23756,
                      "src": "4595:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BassetStatus_$13596",
                        "typeString": "enum MixStructs.BassetStatus"
                      }
                    },
                    "src": "4564:38:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "id": 23780,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:38:73"
                }
              ]
            },
            "documentation": null,
            "id": 23782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBassetStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "name": "_bAsset",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4394:15:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4394:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23756,
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 23782,
                  "src": "4411:20:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BassetStatus_$13596",
                    "typeString": "enum MixStructs.BassetStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23755,
                    "name": "BassetStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13596,
                    "src": "4411:12:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BassetStatus_$13596",
                      "typeString": "enum MixStructs.BassetStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4393:39:73"
            },
            "returnParameters": {
              "id": 23758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:73"
            },
            "scope": 23783,
            "src": "4369:240:73",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23784,
        "src": "4246:366:73"
      }
    ],
    "src": "0:4614:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-03-11T05:43:16.589Z",
  "devdoc": {
    "methods": {
      "addBasset(address,address,bool)": {
        "details": "External func to allow the Governor to conduct add operations on the Basket",
        "params": {
          "_bAsset": "Address of the ERC20 token to add to the Basket",
          "_integration": "Address of the vault integration to deposit and withdraw",
          "_isTransferFeeCharged": "Bool - are transfer fees charged on this bAsset"
        },
        "return": "index                Position of the bAsset in the Basket"
      },
      "collectInterest()": {
        "details": "Called by mIx to calculate how much interest has been generated in the basket     and withdraw it. Cycles through the connected platforms to check the balances.",
        "return": "interestCollected   Total amount of interest collected, in mIx termsgains               Array of bAsset units gained"
      },
      "decreaseVaultBalance(uint8,address,uint256)": {
        "details": "Called by mIx after redeeming tokens. Simply reduce the balance in the vault",
        "params": {
          "_bAssetIndex": "Index of the bAsset",
          "_decreaseAmount": "Units withdrawn"
        }
      },
      "decreaseVaultBalances(uint8[],address[],uint256[])": {
        "details": "Called by mIx after redeeming tokens. Simply reduce the balance in the vault",
        "params": {
          "_bAssetIndices": "Array of bAsset indexes",
          "_decreaseAmount": "Units withdrawn"
        }
      },
      "failBasset(address)": {
        "details": "Marks a bAsset as permanently deviated from peg",
        "params": {
          "_bAsset": "Address of the bAsset"
        }
      },
      "getBasket()": {
        "details": "Get basket details for `MixStructs.Basket`",
        "return": "b   Basket struct"
      },
      "getBasset(address)": {
        "details": "Get data for a specific bAsset, if it exists",
        "params": {
          "_bAsset": "Address of bAsset"
        },
        "return": "bAsset  Struct with full bAsset data"
      },
      "getBassetIntegrator(address)": {
        "details": "Get current integrator for a specific bAsset, if it exists",
        "params": {
          "_bAsset": "Address of bAsset"
        },
        "return": "integrator  Address of current integrator"
      },
      "getBassets()": {
        "details": "Get data for a all bAssets in basket",
        "return": "bAssets  Struct[] with full bAsset datalen      Number of bAssets in the Basket"
      },
      "handlePegLoss(address,bool)": {
        "details": "Executes the Auto Redistribution event by isolating the bAsset from the Basket",
        "params": {
          "_bAsset": "Address of the ERC20 token to isolate",
          "_belowPeg": "Bool to describe whether the bAsset deviated below peg (t)                        or above (f)"
        },
        "return": "alreadyActioned Bool to show whether a bAsset had already been actioned"
      },
      "increaseVaultBalance(uint8,address,uint256)": {
        "details": "Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault",
        "params": {
          "_bAssetIndex": "Index of the bAsset",
          "_increaseAmount": "Units deposited"
        }
      },
      "increaseVaultBalances(uint8[],address[],uint256[])": {
        "details": "Called by only mIx, and only when the basket is healthy, to add units to     storage after they have been deposited into the vault",
        "params": {
          "_bAssetIndices": "Array of bAsset indexes",
          "_increaseAmount": "Units deposited"
        }
      },
      "initialize(address,address,address[],address[],uint256[],bool[])": {
        "details": "Initialization function for upgradable proxy contract.     This function should be called via Proxy just after contract deployment.",
        "params": {
          "_bAssets": "Array of erc20 bAsset addresses",
          "_hasTransferFees": "Bool signifying if this bAsset has xfer fees",
          "_integrators": "Matching array of the platform intergations for bAssets",
          "_mIx": "Address of the mIx whose Basket to manage",
          "_nexus": "Address of system Nexus",
          "_weights": "Weightings of each bAsset, summing to 1e18"
        }
      },
      "migrateBassets(address[],address)": {
        "details": "Transfers all collateral from one lending market to another - used initially     to handle the migration between Aave V1 and Aave V2. Note - only supports non     tx fee enabled assets",
        "params": {
          "_bAssets": "Array of basket assets to migrate",
          "_newIntegration": "Address of the new platform integration"
        }
      },
      "negateIsolation(address)": {
        "details": "Negates the isolation of a given bAsset",
        "params": {
          "_bAsset": "Address of the bAsset"
        }
      },
      "pause()": {
        "details": "Called by the Governor to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise.",
        "return": "Returns `true` when paused, otherwise `false`"
      },
      "prepareForgeBasset(address,uint256,bool)": {
        "details": "Prepare given bAsset for Forging. Currently returns integrator     and essential minting info.",
        "params": {
          "_bAsset": "Address of the bAsset"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareForgeBassets(address[],uint256[],bool)": {
        "details": "Prepare given bAsset addresses for Forging. Currently returns integrator     and essential minting info for each bAsset",
        "params": {
          "_bAssets": "Array of bAsset addresses with which to forge"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareRedeemBassets(address[])": {
        "details": "Fetch the array of bAssets for redemption, and pass back all basket info.",
        "params": {
          "_bAssets": "Array of bAsset addresses to redeem"
        }
      },
      "prepareRedeemMulti()": {
        "details": "Prepare given bAsset addresses for RedeemMulti. Currently returns integrator     and essential minting info for each bAsset",
        "return": "props     Struct of all relevant Forge information"
      },
      "prepareSwapBassets(address,address,bool)": {
        "details": "Prepare given bAssets for swapping",
        "params": {
          "_input": "Address of the input bAsset",
          "_isMint": "Is this swap actually a mint? i.e. output == address(mIx)",
          "_output": "Address of the output bAsset"
        },
        "return": "props     Struct of all relevant Forge information"
      },
      "removeBasset(address)": {
        "details": "Removes a specific Asset from the Basket, given that its target/collateral     level is already 0, throws if invalid.",
        "params": {
          "_assetToRemove": "The asset to remove from the basket"
        }
      },
      "setBasketWeights(address[],uint256[])": {
        "details": "External call for the governor to set weightings of all bAssets",
        "params": {
          "_bAssets": "Array of bAsset addresses",
          "_weights": "Array of bAsset weights - summing 100% where 100% == 1e18"
        }
      },
      "setTransferFeesFlag(address,bool)": {
        "details": "Update transfer fee flag for a given bAsset, should it change its fee practice",
        "params": {
          "_bAsset": "bAsset address",
          "_flag": "Charge transfer fee when its set to 'true', otherwise 'false'"
        }
      },
      "unpause()": {
        "details": "Called by Governor to unpause, returns to normal state."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}